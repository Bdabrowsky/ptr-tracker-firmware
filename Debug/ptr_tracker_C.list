
ptr_tracker_C.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000044ec  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002fc  080045a8  080045a8  000145a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080048a4  080048a4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080048a4  080048a4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080048a4  080048a4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080048a4  080048a4  000148a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080048a8  080048a8  000148a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080048ac  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000dc  20000064  08004910  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000140  08004910  00020140  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000053df  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000e75  00000000  00000000  0002546b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000004b0  00000000  00000000  000262e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000004e0  00000000  00000000  00026790  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000e4ac  00000000  00000000  00026c70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000475c  00000000  00000000  0003511c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004995a  00000000  00000000  00039878  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000831d2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001d64  00000000  00000000  00083224  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_loc    000002d4  00000000  00000000  00084f88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000064 	.word	0x20000064
 80000dc:	00000000 	.word	0x00000000
 80000e0:	08004590 	.word	0x08004590

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000068 	.word	0x20000068
 8000100:	08004590 	.word	0x08004590

08000104 <__gnu_thumb1_case_shi>:
 8000104:	b403      	push	{r0, r1}
 8000106:	4671      	mov	r1, lr
 8000108:	0849      	lsrs	r1, r1, #1
 800010a:	0040      	lsls	r0, r0, #1
 800010c:	0049      	lsls	r1, r1, #1
 800010e:	5e09      	ldrsh	r1, [r1, r0]
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	448e      	add	lr, r1
 8000114:	bc03      	pop	{r0, r1}
 8000116:	4770      	bx	lr

08000118 <__udivsi3>:
 8000118:	2200      	movs	r2, #0
 800011a:	0843      	lsrs	r3, r0, #1
 800011c:	428b      	cmp	r3, r1
 800011e:	d374      	bcc.n	800020a <__udivsi3+0xf2>
 8000120:	0903      	lsrs	r3, r0, #4
 8000122:	428b      	cmp	r3, r1
 8000124:	d35f      	bcc.n	80001e6 <__udivsi3+0xce>
 8000126:	0a03      	lsrs	r3, r0, #8
 8000128:	428b      	cmp	r3, r1
 800012a:	d344      	bcc.n	80001b6 <__udivsi3+0x9e>
 800012c:	0b03      	lsrs	r3, r0, #12
 800012e:	428b      	cmp	r3, r1
 8000130:	d328      	bcc.n	8000184 <__udivsi3+0x6c>
 8000132:	0c03      	lsrs	r3, r0, #16
 8000134:	428b      	cmp	r3, r1
 8000136:	d30d      	bcc.n	8000154 <__udivsi3+0x3c>
 8000138:	22ff      	movs	r2, #255	; 0xff
 800013a:	0209      	lsls	r1, r1, #8
 800013c:	ba12      	rev	r2, r2
 800013e:	0c03      	lsrs	r3, r0, #16
 8000140:	428b      	cmp	r3, r1
 8000142:	d302      	bcc.n	800014a <__udivsi3+0x32>
 8000144:	1212      	asrs	r2, r2, #8
 8000146:	0209      	lsls	r1, r1, #8
 8000148:	d065      	beq.n	8000216 <__udivsi3+0xfe>
 800014a:	0b03      	lsrs	r3, r0, #12
 800014c:	428b      	cmp	r3, r1
 800014e:	d319      	bcc.n	8000184 <__udivsi3+0x6c>
 8000150:	e000      	b.n	8000154 <__udivsi3+0x3c>
 8000152:	0a09      	lsrs	r1, r1, #8
 8000154:	0bc3      	lsrs	r3, r0, #15
 8000156:	428b      	cmp	r3, r1
 8000158:	d301      	bcc.n	800015e <__udivsi3+0x46>
 800015a:	03cb      	lsls	r3, r1, #15
 800015c:	1ac0      	subs	r0, r0, r3
 800015e:	4152      	adcs	r2, r2
 8000160:	0b83      	lsrs	r3, r0, #14
 8000162:	428b      	cmp	r3, r1
 8000164:	d301      	bcc.n	800016a <__udivsi3+0x52>
 8000166:	038b      	lsls	r3, r1, #14
 8000168:	1ac0      	subs	r0, r0, r3
 800016a:	4152      	adcs	r2, r2
 800016c:	0b43      	lsrs	r3, r0, #13
 800016e:	428b      	cmp	r3, r1
 8000170:	d301      	bcc.n	8000176 <__udivsi3+0x5e>
 8000172:	034b      	lsls	r3, r1, #13
 8000174:	1ac0      	subs	r0, r0, r3
 8000176:	4152      	adcs	r2, r2
 8000178:	0b03      	lsrs	r3, r0, #12
 800017a:	428b      	cmp	r3, r1
 800017c:	d301      	bcc.n	8000182 <__udivsi3+0x6a>
 800017e:	030b      	lsls	r3, r1, #12
 8000180:	1ac0      	subs	r0, r0, r3
 8000182:	4152      	adcs	r2, r2
 8000184:	0ac3      	lsrs	r3, r0, #11
 8000186:	428b      	cmp	r3, r1
 8000188:	d301      	bcc.n	800018e <__udivsi3+0x76>
 800018a:	02cb      	lsls	r3, r1, #11
 800018c:	1ac0      	subs	r0, r0, r3
 800018e:	4152      	adcs	r2, r2
 8000190:	0a83      	lsrs	r3, r0, #10
 8000192:	428b      	cmp	r3, r1
 8000194:	d301      	bcc.n	800019a <__udivsi3+0x82>
 8000196:	028b      	lsls	r3, r1, #10
 8000198:	1ac0      	subs	r0, r0, r3
 800019a:	4152      	adcs	r2, r2
 800019c:	0a43      	lsrs	r3, r0, #9
 800019e:	428b      	cmp	r3, r1
 80001a0:	d301      	bcc.n	80001a6 <__udivsi3+0x8e>
 80001a2:	024b      	lsls	r3, r1, #9
 80001a4:	1ac0      	subs	r0, r0, r3
 80001a6:	4152      	adcs	r2, r2
 80001a8:	0a03      	lsrs	r3, r0, #8
 80001aa:	428b      	cmp	r3, r1
 80001ac:	d301      	bcc.n	80001b2 <__udivsi3+0x9a>
 80001ae:	020b      	lsls	r3, r1, #8
 80001b0:	1ac0      	subs	r0, r0, r3
 80001b2:	4152      	adcs	r2, r2
 80001b4:	d2cd      	bcs.n	8000152 <__udivsi3+0x3a>
 80001b6:	09c3      	lsrs	r3, r0, #7
 80001b8:	428b      	cmp	r3, r1
 80001ba:	d301      	bcc.n	80001c0 <__udivsi3+0xa8>
 80001bc:	01cb      	lsls	r3, r1, #7
 80001be:	1ac0      	subs	r0, r0, r3
 80001c0:	4152      	adcs	r2, r2
 80001c2:	0983      	lsrs	r3, r0, #6
 80001c4:	428b      	cmp	r3, r1
 80001c6:	d301      	bcc.n	80001cc <__udivsi3+0xb4>
 80001c8:	018b      	lsls	r3, r1, #6
 80001ca:	1ac0      	subs	r0, r0, r3
 80001cc:	4152      	adcs	r2, r2
 80001ce:	0943      	lsrs	r3, r0, #5
 80001d0:	428b      	cmp	r3, r1
 80001d2:	d301      	bcc.n	80001d8 <__udivsi3+0xc0>
 80001d4:	014b      	lsls	r3, r1, #5
 80001d6:	1ac0      	subs	r0, r0, r3
 80001d8:	4152      	adcs	r2, r2
 80001da:	0903      	lsrs	r3, r0, #4
 80001dc:	428b      	cmp	r3, r1
 80001de:	d301      	bcc.n	80001e4 <__udivsi3+0xcc>
 80001e0:	010b      	lsls	r3, r1, #4
 80001e2:	1ac0      	subs	r0, r0, r3
 80001e4:	4152      	adcs	r2, r2
 80001e6:	08c3      	lsrs	r3, r0, #3
 80001e8:	428b      	cmp	r3, r1
 80001ea:	d301      	bcc.n	80001f0 <__udivsi3+0xd8>
 80001ec:	00cb      	lsls	r3, r1, #3
 80001ee:	1ac0      	subs	r0, r0, r3
 80001f0:	4152      	adcs	r2, r2
 80001f2:	0883      	lsrs	r3, r0, #2
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d301      	bcc.n	80001fc <__udivsi3+0xe4>
 80001f8:	008b      	lsls	r3, r1, #2
 80001fa:	1ac0      	subs	r0, r0, r3
 80001fc:	4152      	adcs	r2, r2
 80001fe:	0843      	lsrs	r3, r0, #1
 8000200:	428b      	cmp	r3, r1
 8000202:	d301      	bcc.n	8000208 <__udivsi3+0xf0>
 8000204:	004b      	lsls	r3, r1, #1
 8000206:	1ac0      	subs	r0, r0, r3
 8000208:	4152      	adcs	r2, r2
 800020a:	1a41      	subs	r1, r0, r1
 800020c:	d200      	bcs.n	8000210 <__udivsi3+0xf8>
 800020e:	4601      	mov	r1, r0
 8000210:	4152      	adcs	r2, r2
 8000212:	4610      	mov	r0, r2
 8000214:	4770      	bx	lr
 8000216:	e7ff      	b.n	8000218 <__udivsi3+0x100>
 8000218:	b501      	push	{r0, lr}
 800021a:	2000      	movs	r0, #0
 800021c:	f000 f8f0 	bl	8000400 <__aeabi_idiv0>
 8000220:	bd02      	pop	{r1, pc}
 8000222:	46c0      	nop			; (mov r8, r8)

08000224 <__aeabi_uidivmod>:
 8000224:	2900      	cmp	r1, #0
 8000226:	d0f7      	beq.n	8000218 <__udivsi3+0x100>
 8000228:	e776      	b.n	8000118 <__udivsi3>
 800022a:	4770      	bx	lr

0800022c <__divsi3>:
 800022c:	4603      	mov	r3, r0
 800022e:	430b      	orrs	r3, r1
 8000230:	d47f      	bmi.n	8000332 <__divsi3+0x106>
 8000232:	2200      	movs	r2, #0
 8000234:	0843      	lsrs	r3, r0, #1
 8000236:	428b      	cmp	r3, r1
 8000238:	d374      	bcc.n	8000324 <__divsi3+0xf8>
 800023a:	0903      	lsrs	r3, r0, #4
 800023c:	428b      	cmp	r3, r1
 800023e:	d35f      	bcc.n	8000300 <__divsi3+0xd4>
 8000240:	0a03      	lsrs	r3, r0, #8
 8000242:	428b      	cmp	r3, r1
 8000244:	d344      	bcc.n	80002d0 <__divsi3+0xa4>
 8000246:	0b03      	lsrs	r3, r0, #12
 8000248:	428b      	cmp	r3, r1
 800024a:	d328      	bcc.n	800029e <__divsi3+0x72>
 800024c:	0c03      	lsrs	r3, r0, #16
 800024e:	428b      	cmp	r3, r1
 8000250:	d30d      	bcc.n	800026e <__divsi3+0x42>
 8000252:	22ff      	movs	r2, #255	; 0xff
 8000254:	0209      	lsls	r1, r1, #8
 8000256:	ba12      	rev	r2, r2
 8000258:	0c03      	lsrs	r3, r0, #16
 800025a:	428b      	cmp	r3, r1
 800025c:	d302      	bcc.n	8000264 <__divsi3+0x38>
 800025e:	1212      	asrs	r2, r2, #8
 8000260:	0209      	lsls	r1, r1, #8
 8000262:	d065      	beq.n	8000330 <__divsi3+0x104>
 8000264:	0b03      	lsrs	r3, r0, #12
 8000266:	428b      	cmp	r3, r1
 8000268:	d319      	bcc.n	800029e <__divsi3+0x72>
 800026a:	e000      	b.n	800026e <__divsi3+0x42>
 800026c:	0a09      	lsrs	r1, r1, #8
 800026e:	0bc3      	lsrs	r3, r0, #15
 8000270:	428b      	cmp	r3, r1
 8000272:	d301      	bcc.n	8000278 <__divsi3+0x4c>
 8000274:	03cb      	lsls	r3, r1, #15
 8000276:	1ac0      	subs	r0, r0, r3
 8000278:	4152      	adcs	r2, r2
 800027a:	0b83      	lsrs	r3, r0, #14
 800027c:	428b      	cmp	r3, r1
 800027e:	d301      	bcc.n	8000284 <__divsi3+0x58>
 8000280:	038b      	lsls	r3, r1, #14
 8000282:	1ac0      	subs	r0, r0, r3
 8000284:	4152      	adcs	r2, r2
 8000286:	0b43      	lsrs	r3, r0, #13
 8000288:	428b      	cmp	r3, r1
 800028a:	d301      	bcc.n	8000290 <__divsi3+0x64>
 800028c:	034b      	lsls	r3, r1, #13
 800028e:	1ac0      	subs	r0, r0, r3
 8000290:	4152      	adcs	r2, r2
 8000292:	0b03      	lsrs	r3, r0, #12
 8000294:	428b      	cmp	r3, r1
 8000296:	d301      	bcc.n	800029c <__divsi3+0x70>
 8000298:	030b      	lsls	r3, r1, #12
 800029a:	1ac0      	subs	r0, r0, r3
 800029c:	4152      	adcs	r2, r2
 800029e:	0ac3      	lsrs	r3, r0, #11
 80002a0:	428b      	cmp	r3, r1
 80002a2:	d301      	bcc.n	80002a8 <__divsi3+0x7c>
 80002a4:	02cb      	lsls	r3, r1, #11
 80002a6:	1ac0      	subs	r0, r0, r3
 80002a8:	4152      	adcs	r2, r2
 80002aa:	0a83      	lsrs	r3, r0, #10
 80002ac:	428b      	cmp	r3, r1
 80002ae:	d301      	bcc.n	80002b4 <__divsi3+0x88>
 80002b0:	028b      	lsls	r3, r1, #10
 80002b2:	1ac0      	subs	r0, r0, r3
 80002b4:	4152      	adcs	r2, r2
 80002b6:	0a43      	lsrs	r3, r0, #9
 80002b8:	428b      	cmp	r3, r1
 80002ba:	d301      	bcc.n	80002c0 <__divsi3+0x94>
 80002bc:	024b      	lsls	r3, r1, #9
 80002be:	1ac0      	subs	r0, r0, r3
 80002c0:	4152      	adcs	r2, r2
 80002c2:	0a03      	lsrs	r3, r0, #8
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d301      	bcc.n	80002cc <__divsi3+0xa0>
 80002c8:	020b      	lsls	r3, r1, #8
 80002ca:	1ac0      	subs	r0, r0, r3
 80002cc:	4152      	adcs	r2, r2
 80002ce:	d2cd      	bcs.n	800026c <__divsi3+0x40>
 80002d0:	09c3      	lsrs	r3, r0, #7
 80002d2:	428b      	cmp	r3, r1
 80002d4:	d301      	bcc.n	80002da <__divsi3+0xae>
 80002d6:	01cb      	lsls	r3, r1, #7
 80002d8:	1ac0      	subs	r0, r0, r3
 80002da:	4152      	adcs	r2, r2
 80002dc:	0983      	lsrs	r3, r0, #6
 80002de:	428b      	cmp	r3, r1
 80002e0:	d301      	bcc.n	80002e6 <__divsi3+0xba>
 80002e2:	018b      	lsls	r3, r1, #6
 80002e4:	1ac0      	subs	r0, r0, r3
 80002e6:	4152      	adcs	r2, r2
 80002e8:	0943      	lsrs	r3, r0, #5
 80002ea:	428b      	cmp	r3, r1
 80002ec:	d301      	bcc.n	80002f2 <__divsi3+0xc6>
 80002ee:	014b      	lsls	r3, r1, #5
 80002f0:	1ac0      	subs	r0, r0, r3
 80002f2:	4152      	adcs	r2, r2
 80002f4:	0903      	lsrs	r3, r0, #4
 80002f6:	428b      	cmp	r3, r1
 80002f8:	d301      	bcc.n	80002fe <__divsi3+0xd2>
 80002fa:	010b      	lsls	r3, r1, #4
 80002fc:	1ac0      	subs	r0, r0, r3
 80002fe:	4152      	adcs	r2, r2
 8000300:	08c3      	lsrs	r3, r0, #3
 8000302:	428b      	cmp	r3, r1
 8000304:	d301      	bcc.n	800030a <__divsi3+0xde>
 8000306:	00cb      	lsls	r3, r1, #3
 8000308:	1ac0      	subs	r0, r0, r3
 800030a:	4152      	adcs	r2, r2
 800030c:	0883      	lsrs	r3, r0, #2
 800030e:	428b      	cmp	r3, r1
 8000310:	d301      	bcc.n	8000316 <__divsi3+0xea>
 8000312:	008b      	lsls	r3, r1, #2
 8000314:	1ac0      	subs	r0, r0, r3
 8000316:	4152      	adcs	r2, r2
 8000318:	0843      	lsrs	r3, r0, #1
 800031a:	428b      	cmp	r3, r1
 800031c:	d301      	bcc.n	8000322 <__divsi3+0xf6>
 800031e:	004b      	lsls	r3, r1, #1
 8000320:	1ac0      	subs	r0, r0, r3
 8000322:	4152      	adcs	r2, r2
 8000324:	1a41      	subs	r1, r0, r1
 8000326:	d200      	bcs.n	800032a <__divsi3+0xfe>
 8000328:	4601      	mov	r1, r0
 800032a:	4152      	adcs	r2, r2
 800032c:	4610      	mov	r0, r2
 800032e:	4770      	bx	lr
 8000330:	e05d      	b.n	80003ee <__divsi3+0x1c2>
 8000332:	0fca      	lsrs	r2, r1, #31
 8000334:	d000      	beq.n	8000338 <__divsi3+0x10c>
 8000336:	4249      	negs	r1, r1
 8000338:	1003      	asrs	r3, r0, #32
 800033a:	d300      	bcc.n	800033e <__divsi3+0x112>
 800033c:	4240      	negs	r0, r0
 800033e:	4053      	eors	r3, r2
 8000340:	2200      	movs	r2, #0
 8000342:	469c      	mov	ip, r3
 8000344:	0903      	lsrs	r3, r0, #4
 8000346:	428b      	cmp	r3, r1
 8000348:	d32d      	bcc.n	80003a6 <__divsi3+0x17a>
 800034a:	0a03      	lsrs	r3, r0, #8
 800034c:	428b      	cmp	r3, r1
 800034e:	d312      	bcc.n	8000376 <__divsi3+0x14a>
 8000350:	22fc      	movs	r2, #252	; 0xfc
 8000352:	0189      	lsls	r1, r1, #6
 8000354:	ba12      	rev	r2, r2
 8000356:	0a03      	lsrs	r3, r0, #8
 8000358:	428b      	cmp	r3, r1
 800035a:	d30c      	bcc.n	8000376 <__divsi3+0x14a>
 800035c:	0189      	lsls	r1, r1, #6
 800035e:	1192      	asrs	r2, r2, #6
 8000360:	428b      	cmp	r3, r1
 8000362:	d308      	bcc.n	8000376 <__divsi3+0x14a>
 8000364:	0189      	lsls	r1, r1, #6
 8000366:	1192      	asrs	r2, r2, #6
 8000368:	428b      	cmp	r3, r1
 800036a:	d304      	bcc.n	8000376 <__divsi3+0x14a>
 800036c:	0189      	lsls	r1, r1, #6
 800036e:	d03a      	beq.n	80003e6 <__divsi3+0x1ba>
 8000370:	1192      	asrs	r2, r2, #6
 8000372:	e000      	b.n	8000376 <__divsi3+0x14a>
 8000374:	0989      	lsrs	r1, r1, #6
 8000376:	09c3      	lsrs	r3, r0, #7
 8000378:	428b      	cmp	r3, r1
 800037a:	d301      	bcc.n	8000380 <__divsi3+0x154>
 800037c:	01cb      	lsls	r3, r1, #7
 800037e:	1ac0      	subs	r0, r0, r3
 8000380:	4152      	adcs	r2, r2
 8000382:	0983      	lsrs	r3, r0, #6
 8000384:	428b      	cmp	r3, r1
 8000386:	d301      	bcc.n	800038c <__divsi3+0x160>
 8000388:	018b      	lsls	r3, r1, #6
 800038a:	1ac0      	subs	r0, r0, r3
 800038c:	4152      	adcs	r2, r2
 800038e:	0943      	lsrs	r3, r0, #5
 8000390:	428b      	cmp	r3, r1
 8000392:	d301      	bcc.n	8000398 <__divsi3+0x16c>
 8000394:	014b      	lsls	r3, r1, #5
 8000396:	1ac0      	subs	r0, r0, r3
 8000398:	4152      	adcs	r2, r2
 800039a:	0903      	lsrs	r3, r0, #4
 800039c:	428b      	cmp	r3, r1
 800039e:	d301      	bcc.n	80003a4 <__divsi3+0x178>
 80003a0:	010b      	lsls	r3, r1, #4
 80003a2:	1ac0      	subs	r0, r0, r3
 80003a4:	4152      	adcs	r2, r2
 80003a6:	08c3      	lsrs	r3, r0, #3
 80003a8:	428b      	cmp	r3, r1
 80003aa:	d301      	bcc.n	80003b0 <__divsi3+0x184>
 80003ac:	00cb      	lsls	r3, r1, #3
 80003ae:	1ac0      	subs	r0, r0, r3
 80003b0:	4152      	adcs	r2, r2
 80003b2:	0883      	lsrs	r3, r0, #2
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d301      	bcc.n	80003bc <__divsi3+0x190>
 80003b8:	008b      	lsls	r3, r1, #2
 80003ba:	1ac0      	subs	r0, r0, r3
 80003bc:	4152      	adcs	r2, r2
 80003be:	d2d9      	bcs.n	8000374 <__divsi3+0x148>
 80003c0:	0843      	lsrs	r3, r0, #1
 80003c2:	428b      	cmp	r3, r1
 80003c4:	d301      	bcc.n	80003ca <__divsi3+0x19e>
 80003c6:	004b      	lsls	r3, r1, #1
 80003c8:	1ac0      	subs	r0, r0, r3
 80003ca:	4152      	adcs	r2, r2
 80003cc:	1a41      	subs	r1, r0, r1
 80003ce:	d200      	bcs.n	80003d2 <__divsi3+0x1a6>
 80003d0:	4601      	mov	r1, r0
 80003d2:	4663      	mov	r3, ip
 80003d4:	4152      	adcs	r2, r2
 80003d6:	105b      	asrs	r3, r3, #1
 80003d8:	4610      	mov	r0, r2
 80003da:	d301      	bcc.n	80003e0 <__divsi3+0x1b4>
 80003dc:	4240      	negs	r0, r0
 80003de:	2b00      	cmp	r3, #0
 80003e0:	d500      	bpl.n	80003e4 <__divsi3+0x1b8>
 80003e2:	4249      	negs	r1, r1
 80003e4:	4770      	bx	lr
 80003e6:	4663      	mov	r3, ip
 80003e8:	105b      	asrs	r3, r3, #1
 80003ea:	d300      	bcc.n	80003ee <__divsi3+0x1c2>
 80003ec:	4240      	negs	r0, r0
 80003ee:	b501      	push	{r0, lr}
 80003f0:	2000      	movs	r0, #0
 80003f2:	f000 f805 	bl	8000400 <__aeabi_idiv0>
 80003f6:	bd02      	pop	{r1, pc}

080003f8 <__aeabi_idivmod>:
 80003f8:	2900      	cmp	r1, #0
 80003fa:	d0f8      	beq.n	80003ee <__divsi3+0x1c2>
 80003fc:	e716      	b.n	800022c <__divsi3>
 80003fe:	4770      	bx	lr

08000400 <__aeabi_idiv0>:
 8000400:	4770      	bx	lr
 8000402:	46c0      	nop			; (mov r8, r8)

08000404 <__aeabi_d2uiz>:
 8000404:	b570      	push	{r4, r5, r6, lr}
 8000406:	2200      	movs	r2, #0
 8000408:	4b0c      	ldr	r3, [pc, #48]	; (800043c <__aeabi_d2uiz+0x38>)
 800040a:	0004      	movs	r4, r0
 800040c:	000d      	movs	r5, r1
 800040e:	f001 f99b 	bl	8001748 <__aeabi_dcmpge>
 8000412:	2800      	cmp	r0, #0
 8000414:	d104      	bne.n	8000420 <__aeabi_d2uiz+0x1c>
 8000416:	0020      	movs	r0, r4
 8000418:	0029      	movs	r1, r5
 800041a:	f001 f905 	bl	8001628 <__aeabi_d2iz>
 800041e:	bd70      	pop	{r4, r5, r6, pc}
 8000420:	4b06      	ldr	r3, [pc, #24]	; (800043c <__aeabi_d2uiz+0x38>)
 8000422:	2200      	movs	r2, #0
 8000424:	0020      	movs	r0, r4
 8000426:	0029      	movs	r1, r5
 8000428:	f000 fd6c 	bl	8000f04 <__aeabi_dsub>
 800042c:	f001 f8fc 	bl	8001628 <__aeabi_d2iz>
 8000430:	2380      	movs	r3, #128	; 0x80
 8000432:	061b      	lsls	r3, r3, #24
 8000434:	469c      	mov	ip, r3
 8000436:	4460      	add	r0, ip
 8000438:	e7f1      	b.n	800041e <__aeabi_d2uiz+0x1a>
 800043a:	46c0      	nop			; (mov r8, r8)
 800043c:	41e00000 	.word	0x41e00000

08000440 <__aeabi_ddiv>:
 8000440:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000442:	4657      	mov	r7, sl
 8000444:	464e      	mov	r6, r9
 8000446:	4645      	mov	r5, r8
 8000448:	46de      	mov	lr, fp
 800044a:	b5e0      	push	{r5, r6, r7, lr}
 800044c:	4681      	mov	r9, r0
 800044e:	0005      	movs	r5, r0
 8000450:	030c      	lsls	r4, r1, #12
 8000452:	0048      	lsls	r0, r1, #1
 8000454:	4692      	mov	sl, r2
 8000456:	001f      	movs	r7, r3
 8000458:	b085      	sub	sp, #20
 800045a:	0b24      	lsrs	r4, r4, #12
 800045c:	0d40      	lsrs	r0, r0, #21
 800045e:	0fce      	lsrs	r6, r1, #31
 8000460:	2800      	cmp	r0, #0
 8000462:	d100      	bne.n	8000466 <__aeabi_ddiv+0x26>
 8000464:	e156      	b.n	8000714 <__aeabi_ddiv+0x2d4>
 8000466:	4bd4      	ldr	r3, [pc, #848]	; (80007b8 <__aeabi_ddiv+0x378>)
 8000468:	4298      	cmp	r0, r3
 800046a:	d100      	bne.n	800046e <__aeabi_ddiv+0x2e>
 800046c:	e172      	b.n	8000754 <__aeabi_ddiv+0x314>
 800046e:	0f6b      	lsrs	r3, r5, #29
 8000470:	00e4      	lsls	r4, r4, #3
 8000472:	431c      	orrs	r4, r3
 8000474:	2380      	movs	r3, #128	; 0x80
 8000476:	041b      	lsls	r3, r3, #16
 8000478:	4323      	orrs	r3, r4
 800047a:	4698      	mov	r8, r3
 800047c:	4bcf      	ldr	r3, [pc, #828]	; (80007bc <__aeabi_ddiv+0x37c>)
 800047e:	00ed      	lsls	r5, r5, #3
 8000480:	469b      	mov	fp, r3
 8000482:	2300      	movs	r3, #0
 8000484:	4699      	mov	r9, r3
 8000486:	4483      	add	fp, r0
 8000488:	9300      	str	r3, [sp, #0]
 800048a:	033c      	lsls	r4, r7, #12
 800048c:	007b      	lsls	r3, r7, #1
 800048e:	4650      	mov	r0, sl
 8000490:	0b24      	lsrs	r4, r4, #12
 8000492:	0d5b      	lsrs	r3, r3, #21
 8000494:	0fff      	lsrs	r7, r7, #31
 8000496:	2b00      	cmp	r3, #0
 8000498:	d100      	bne.n	800049c <__aeabi_ddiv+0x5c>
 800049a:	e11f      	b.n	80006dc <__aeabi_ddiv+0x29c>
 800049c:	4ac6      	ldr	r2, [pc, #792]	; (80007b8 <__aeabi_ddiv+0x378>)
 800049e:	4293      	cmp	r3, r2
 80004a0:	d100      	bne.n	80004a4 <__aeabi_ddiv+0x64>
 80004a2:	e162      	b.n	800076a <__aeabi_ddiv+0x32a>
 80004a4:	49c5      	ldr	r1, [pc, #788]	; (80007bc <__aeabi_ddiv+0x37c>)
 80004a6:	0f42      	lsrs	r2, r0, #29
 80004a8:	468c      	mov	ip, r1
 80004aa:	00e4      	lsls	r4, r4, #3
 80004ac:	4659      	mov	r1, fp
 80004ae:	4314      	orrs	r4, r2
 80004b0:	2280      	movs	r2, #128	; 0x80
 80004b2:	4463      	add	r3, ip
 80004b4:	0412      	lsls	r2, r2, #16
 80004b6:	1acb      	subs	r3, r1, r3
 80004b8:	4314      	orrs	r4, r2
 80004ba:	469b      	mov	fp, r3
 80004bc:	00c2      	lsls	r2, r0, #3
 80004be:	2000      	movs	r0, #0
 80004c0:	0033      	movs	r3, r6
 80004c2:	407b      	eors	r3, r7
 80004c4:	469a      	mov	sl, r3
 80004c6:	464b      	mov	r3, r9
 80004c8:	2b0f      	cmp	r3, #15
 80004ca:	d827      	bhi.n	800051c <__aeabi_ddiv+0xdc>
 80004cc:	49bc      	ldr	r1, [pc, #752]	; (80007c0 <__aeabi_ddiv+0x380>)
 80004ce:	009b      	lsls	r3, r3, #2
 80004d0:	58cb      	ldr	r3, [r1, r3]
 80004d2:	469f      	mov	pc, r3
 80004d4:	46b2      	mov	sl, r6
 80004d6:	9b00      	ldr	r3, [sp, #0]
 80004d8:	2b02      	cmp	r3, #2
 80004da:	d016      	beq.n	800050a <__aeabi_ddiv+0xca>
 80004dc:	2b03      	cmp	r3, #3
 80004de:	d100      	bne.n	80004e2 <__aeabi_ddiv+0xa2>
 80004e0:	e28e      	b.n	8000a00 <__aeabi_ddiv+0x5c0>
 80004e2:	2b01      	cmp	r3, #1
 80004e4:	d000      	beq.n	80004e8 <__aeabi_ddiv+0xa8>
 80004e6:	e0d9      	b.n	800069c <__aeabi_ddiv+0x25c>
 80004e8:	2300      	movs	r3, #0
 80004ea:	2400      	movs	r4, #0
 80004ec:	2500      	movs	r5, #0
 80004ee:	4652      	mov	r2, sl
 80004f0:	051b      	lsls	r3, r3, #20
 80004f2:	4323      	orrs	r3, r4
 80004f4:	07d2      	lsls	r2, r2, #31
 80004f6:	4313      	orrs	r3, r2
 80004f8:	0028      	movs	r0, r5
 80004fa:	0019      	movs	r1, r3
 80004fc:	b005      	add	sp, #20
 80004fe:	bcf0      	pop	{r4, r5, r6, r7}
 8000500:	46bb      	mov	fp, r7
 8000502:	46b2      	mov	sl, r6
 8000504:	46a9      	mov	r9, r5
 8000506:	46a0      	mov	r8, r4
 8000508:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800050a:	2400      	movs	r4, #0
 800050c:	2500      	movs	r5, #0
 800050e:	4baa      	ldr	r3, [pc, #680]	; (80007b8 <__aeabi_ddiv+0x378>)
 8000510:	e7ed      	b.n	80004ee <__aeabi_ddiv+0xae>
 8000512:	46ba      	mov	sl, r7
 8000514:	46a0      	mov	r8, r4
 8000516:	0015      	movs	r5, r2
 8000518:	9000      	str	r0, [sp, #0]
 800051a:	e7dc      	b.n	80004d6 <__aeabi_ddiv+0x96>
 800051c:	4544      	cmp	r4, r8
 800051e:	d200      	bcs.n	8000522 <__aeabi_ddiv+0xe2>
 8000520:	e1c7      	b.n	80008b2 <__aeabi_ddiv+0x472>
 8000522:	d100      	bne.n	8000526 <__aeabi_ddiv+0xe6>
 8000524:	e1c2      	b.n	80008ac <__aeabi_ddiv+0x46c>
 8000526:	2301      	movs	r3, #1
 8000528:	425b      	negs	r3, r3
 800052a:	469c      	mov	ip, r3
 800052c:	002e      	movs	r6, r5
 800052e:	4640      	mov	r0, r8
 8000530:	2500      	movs	r5, #0
 8000532:	44e3      	add	fp, ip
 8000534:	0223      	lsls	r3, r4, #8
 8000536:	0e14      	lsrs	r4, r2, #24
 8000538:	431c      	orrs	r4, r3
 800053a:	0c1b      	lsrs	r3, r3, #16
 800053c:	4699      	mov	r9, r3
 800053e:	0423      	lsls	r3, r4, #16
 8000540:	0c1f      	lsrs	r7, r3, #16
 8000542:	0212      	lsls	r2, r2, #8
 8000544:	4649      	mov	r1, r9
 8000546:	9200      	str	r2, [sp, #0]
 8000548:	9701      	str	r7, [sp, #4]
 800054a:	f7ff fe6b 	bl	8000224 <__aeabi_uidivmod>
 800054e:	0002      	movs	r2, r0
 8000550:	437a      	muls	r2, r7
 8000552:	040b      	lsls	r3, r1, #16
 8000554:	0c31      	lsrs	r1, r6, #16
 8000556:	4680      	mov	r8, r0
 8000558:	4319      	orrs	r1, r3
 800055a:	428a      	cmp	r2, r1
 800055c:	d907      	bls.n	800056e <__aeabi_ddiv+0x12e>
 800055e:	2301      	movs	r3, #1
 8000560:	425b      	negs	r3, r3
 8000562:	469c      	mov	ip, r3
 8000564:	1909      	adds	r1, r1, r4
 8000566:	44e0      	add	r8, ip
 8000568:	428c      	cmp	r4, r1
 800056a:	d800      	bhi.n	800056e <__aeabi_ddiv+0x12e>
 800056c:	e207      	b.n	800097e <__aeabi_ddiv+0x53e>
 800056e:	1a88      	subs	r0, r1, r2
 8000570:	4649      	mov	r1, r9
 8000572:	f7ff fe57 	bl	8000224 <__aeabi_uidivmod>
 8000576:	0409      	lsls	r1, r1, #16
 8000578:	468c      	mov	ip, r1
 800057a:	0431      	lsls	r1, r6, #16
 800057c:	4666      	mov	r6, ip
 800057e:	9a01      	ldr	r2, [sp, #4]
 8000580:	0c09      	lsrs	r1, r1, #16
 8000582:	4342      	muls	r2, r0
 8000584:	0003      	movs	r3, r0
 8000586:	4331      	orrs	r1, r6
 8000588:	428a      	cmp	r2, r1
 800058a:	d904      	bls.n	8000596 <__aeabi_ddiv+0x156>
 800058c:	1909      	adds	r1, r1, r4
 800058e:	3b01      	subs	r3, #1
 8000590:	428c      	cmp	r4, r1
 8000592:	d800      	bhi.n	8000596 <__aeabi_ddiv+0x156>
 8000594:	e1ed      	b.n	8000972 <__aeabi_ddiv+0x532>
 8000596:	1a88      	subs	r0, r1, r2
 8000598:	4642      	mov	r2, r8
 800059a:	0412      	lsls	r2, r2, #16
 800059c:	431a      	orrs	r2, r3
 800059e:	4690      	mov	r8, r2
 80005a0:	4641      	mov	r1, r8
 80005a2:	9b00      	ldr	r3, [sp, #0]
 80005a4:	040e      	lsls	r6, r1, #16
 80005a6:	0c1b      	lsrs	r3, r3, #16
 80005a8:	001f      	movs	r7, r3
 80005aa:	9302      	str	r3, [sp, #8]
 80005ac:	9b00      	ldr	r3, [sp, #0]
 80005ae:	0c36      	lsrs	r6, r6, #16
 80005b0:	041b      	lsls	r3, r3, #16
 80005b2:	0c19      	lsrs	r1, r3, #16
 80005b4:	000b      	movs	r3, r1
 80005b6:	4373      	muls	r3, r6
 80005b8:	0c12      	lsrs	r2, r2, #16
 80005ba:	437e      	muls	r6, r7
 80005bc:	9103      	str	r1, [sp, #12]
 80005be:	4351      	muls	r1, r2
 80005c0:	437a      	muls	r2, r7
 80005c2:	0c1f      	lsrs	r7, r3, #16
 80005c4:	46bc      	mov	ip, r7
 80005c6:	1876      	adds	r6, r6, r1
 80005c8:	4466      	add	r6, ip
 80005ca:	42b1      	cmp	r1, r6
 80005cc:	d903      	bls.n	80005d6 <__aeabi_ddiv+0x196>
 80005ce:	2180      	movs	r1, #128	; 0x80
 80005d0:	0249      	lsls	r1, r1, #9
 80005d2:	468c      	mov	ip, r1
 80005d4:	4462      	add	r2, ip
 80005d6:	0c31      	lsrs	r1, r6, #16
 80005d8:	188a      	adds	r2, r1, r2
 80005da:	0431      	lsls	r1, r6, #16
 80005dc:	041e      	lsls	r6, r3, #16
 80005de:	0c36      	lsrs	r6, r6, #16
 80005e0:	198e      	adds	r6, r1, r6
 80005e2:	4290      	cmp	r0, r2
 80005e4:	d302      	bcc.n	80005ec <__aeabi_ddiv+0x1ac>
 80005e6:	d112      	bne.n	800060e <__aeabi_ddiv+0x1ce>
 80005e8:	42b5      	cmp	r5, r6
 80005ea:	d210      	bcs.n	800060e <__aeabi_ddiv+0x1ce>
 80005ec:	4643      	mov	r3, r8
 80005ee:	1e59      	subs	r1, r3, #1
 80005f0:	9b00      	ldr	r3, [sp, #0]
 80005f2:	469c      	mov	ip, r3
 80005f4:	4465      	add	r5, ip
 80005f6:	001f      	movs	r7, r3
 80005f8:	429d      	cmp	r5, r3
 80005fa:	419b      	sbcs	r3, r3
 80005fc:	425b      	negs	r3, r3
 80005fe:	191b      	adds	r3, r3, r4
 8000600:	18c0      	adds	r0, r0, r3
 8000602:	4284      	cmp	r4, r0
 8000604:	d200      	bcs.n	8000608 <__aeabi_ddiv+0x1c8>
 8000606:	e1a0      	b.n	800094a <__aeabi_ddiv+0x50a>
 8000608:	d100      	bne.n	800060c <__aeabi_ddiv+0x1cc>
 800060a:	e19b      	b.n	8000944 <__aeabi_ddiv+0x504>
 800060c:	4688      	mov	r8, r1
 800060e:	1bae      	subs	r6, r5, r6
 8000610:	42b5      	cmp	r5, r6
 8000612:	41ad      	sbcs	r5, r5
 8000614:	1a80      	subs	r0, r0, r2
 8000616:	426d      	negs	r5, r5
 8000618:	1b40      	subs	r0, r0, r5
 800061a:	4284      	cmp	r4, r0
 800061c:	d100      	bne.n	8000620 <__aeabi_ddiv+0x1e0>
 800061e:	e1d5      	b.n	80009cc <__aeabi_ddiv+0x58c>
 8000620:	4649      	mov	r1, r9
 8000622:	f7ff fdff 	bl	8000224 <__aeabi_uidivmod>
 8000626:	9a01      	ldr	r2, [sp, #4]
 8000628:	040b      	lsls	r3, r1, #16
 800062a:	4342      	muls	r2, r0
 800062c:	0c31      	lsrs	r1, r6, #16
 800062e:	0005      	movs	r5, r0
 8000630:	4319      	orrs	r1, r3
 8000632:	428a      	cmp	r2, r1
 8000634:	d900      	bls.n	8000638 <__aeabi_ddiv+0x1f8>
 8000636:	e16c      	b.n	8000912 <__aeabi_ddiv+0x4d2>
 8000638:	1a88      	subs	r0, r1, r2
 800063a:	4649      	mov	r1, r9
 800063c:	f7ff fdf2 	bl	8000224 <__aeabi_uidivmod>
 8000640:	9a01      	ldr	r2, [sp, #4]
 8000642:	0436      	lsls	r6, r6, #16
 8000644:	4342      	muls	r2, r0
 8000646:	0409      	lsls	r1, r1, #16
 8000648:	0c36      	lsrs	r6, r6, #16
 800064a:	0003      	movs	r3, r0
 800064c:	430e      	orrs	r6, r1
 800064e:	42b2      	cmp	r2, r6
 8000650:	d900      	bls.n	8000654 <__aeabi_ddiv+0x214>
 8000652:	e153      	b.n	80008fc <__aeabi_ddiv+0x4bc>
 8000654:	9803      	ldr	r0, [sp, #12]
 8000656:	1ab6      	subs	r6, r6, r2
 8000658:	0002      	movs	r2, r0
 800065a:	042d      	lsls	r5, r5, #16
 800065c:	431d      	orrs	r5, r3
 800065e:	9f02      	ldr	r7, [sp, #8]
 8000660:	042b      	lsls	r3, r5, #16
 8000662:	0c1b      	lsrs	r3, r3, #16
 8000664:	435a      	muls	r2, r3
 8000666:	437b      	muls	r3, r7
 8000668:	469c      	mov	ip, r3
 800066a:	0c29      	lsrs	r1, r5, #16
 800066c:	4348      	muls	r0, r1
 800066e:	0c13      	lsrs	r3, r2, #16
 8000670:	4484      	add	ip, r0
 8000672:	4463      	add	r3, ip
 8000674:	4379      	muls	r1, r7
 8000676:	4298      	cmp	r0, r3
 8000678:	d903      	bls.n	8000682 <__aeabi_ddiv+0x242>
 800067a:	2080      	movs	r0, #128	; 0x80
 800067c:	0240      	lsls	r0, r0, #9
 800067e:	4684      	mov	ip, r0
 8000680:	4461      	add	r1, ip
 8000682:	0c18      	lsrs	r0, r3, #16
 8000684:	0412      	lsls	r2, r2, #16
 8000686:	041b      	lsls	r3, r3, #16
 8000688:	0c12      	lsrs	r2, r2, #16
 800068a:	1841      	adds	r1, r0, r1
 800068c:	189b      	adds	r3, r3, r2
 800068e:	428e      	cmp	r6, r1
 8000690:	d200      	bcs.n	8000694 <__aeabi_ddiv+0x254>
 8000692:	e0ff      	b.n	8000894 <__aeabi_ddiv+0x454>
 8000694:	d100      	bne.n	8000698 <__aeabi_ddiv+0x258>
 8000696:	e0fa      	b.n	800088e <__aeabi_ddiv+0x44e>
 8000698:	2301      	movs	r3, #1
 800069a:	431d      	orrs	r5, r3
 800069c:	4a49      	ldr	r2, [pc, #292]	; (80007c4 <__aeabi_ddiv+0x384>)
 800069e:	445a      	add	r2, fp
 80006a0:	2a00      	cmp	r2, #0
 80006a2:	dc00      	bgt.n	80006a6 <__aeabi_ddiv+0x266>
 80006a4:	e0aa      	b.n	80007fc <__aeabi_ddiv+0x3bc>
 80006a6:	076b      	lsls	r3, r5, #29
 80006a8:	d000      	beq.n	80006ac <__aeabi_ddiv+0x26c>
 80006aa:	e13d      	b.n	8000928 <__aeabi_ddiv+0x4e8>
 80006ac:	08ed      	lsrs	r5, r5, #3
 80006ae:	4643      	mov	r3, r8
 80006b0:	01db      	lsls	r3, r3, #7
 80006b2:	d506      	bpl.n	80006c2 <__aeabi_ddiv+0x282>
 80006b4:	4642      	mov	r2, r8
 80006b6:	4b44      	ldr	r3, [pc, #272]	; (80007c8 <__aeabi_ddiv+0x388>)
 80006b8:	401a      	ands	r2, r3
 80006ba:	4690      	mov	r8, r2
 80006bc:	2280      	movs	r2, #128	; 0x80
 80006be:	00d2      	lsls	r2, r2, #3
 80006c0:	445a      	add	r2, fp
 80006c2:	4b42      	ldr	r3, [pc, #264]	; (80007cc <__aeabi_ddiv+0x38c>)
 80006c4:	429a      	cmp	r2, r3
 80006c6:	dd00      	ble.n	80006ca <__aeabi_ddiv+0x28a>
 80006c8:	e71f      	b.n	800050a <__aeabi_ddiv+0xca>
 80006ca:	4643      	mov	r3, r8
 80006cc:	075b      	lsls	r3, r3, #29
 80006ce:	431d      	orrs	r5, r3
 80006d0:	4643      	mov	r3, r8
 80006d2:	0552      	lsls	r2, r2, #21
 80006d4:	025c      	lsls	r4, r3, #9
 80006d6:	0b24      	lsrs	r4, r4, #12
 80006d8:	0d53      	lsrs	r3, r2, #21
 80006da:	e708      	b.n	80004ee <__aeabi_ddiv+0xae>
 80006dc:	4652      	mov	r2, sl
 80006de:	4322      	orrs	r2, r4
 80006e0:	d100      	bne.n	80006e4 <__aeabi_ddiv+0x2a4>
 80006e2:	e07b      	b.n	80007dc <__aeabi_ddiv+0x39c>
 80006e4:	2c00      	cmp	r4, #0
 80006e6:	d100      	bne.n	80006ea <__aeabi_ddiv+0x2aa>
 80006e8:	e0fa      	b.n	80008e0 <__aeabi_ddiv+0x4a0>
 80006ea:	0020      	movs	r0, r4
 80006ec:	f001 f836 	bl	800175c <__clzsi2>
 80006f0:	0002      	movs	r2, r0
 80006f2:	3a0b      	subs	r2, #11
 80006f4:	231d      	movs	r3, #29
 80006f6:	0001      	movs	r1, r0
 80006f8:	1a9b      	subs	r3, r3, r2
 80006fa:	4652      	mov	r2, sl
 80006fc:	3908      	subs	r1, #8
 80006fe:	40da      	lsrs	r2, r3
 8000700:	408c      	lsls	r4, r1
 8000702:	4314      	orrs	r4, r2
 8000704:	4652      	mov	r2, sl
 8000706:	408a      	lsls	r2, r1
 8000708:	4b31      	ldr	r3, [pc, #196]	; (80007d0 <__aeabi_ddiv+0x390>)
 800070a:	4458      	add	r0, fp
 800070c:	469b      	mov	fp, r3
 800070e:	4483      	add	fp, r0
 8000710:	2000      	movs	r0, #0
 8000712:	e6d5      	b.n	80004c0 <__aeabi_ddiv+0x80>
 8000714:	464b      	mov	r3, r9
 8000716:	4323      	orrs	r3, r4
 8000718:	4698      	mov	r8, r3
 800071a:	d044      	beq.n	80007a6 <__aeabi_ddiv+0x366>
 800071c:	2c00      	cmp	r4, #0
 800071e:	d100      	bne.n	8000722 <__aeabi_ddiv+0x2e2>
 8000720:	e0ce      	b.n	80008c0 <__aeabi_ddiv+0x480>
 8000722:	0020      	movs	r0, r4
 8000724:	f001 f81a 	bl	800175c <__clzsi2>
 8000728:	0001      	movs	r1, r0
 800072a:	0002      	movs	r2, r0
 800072c:	390b      	subs	r1, #11
 800072e:	231d      	movs	r3, #29
 8000730:	1a5b      	subs	r3, r3, r1
 8000732:	4649      	mov	r1, r9
 8000734:	0010      	movs	r0, r2
 8000736:	40d9      	lsrs	r1, r3
 8000738:	3808      	subs	r0, #8
 800073a:	4084      	lsls	r4, r0
 800073c:	000b      	movs	r3, r1
 800073e:	464d      	mov	r5, r9
 8000740:	4323      	orrs	r3, r4
 8000742:	4698      	mov	r8, r3
 8000744:	4085      	lsls	r5, r0
 8000746:	4823      	ldr	r0, [pc, #140]	; (80007d4 <__aeabi_ddiv+0x394>)
 8000748:	1a83      	subs	r3, r0, r2
 800074a:	469b      	mov	fp, r3
 800074c:	2300      	movs	r3, #0
 800074e:	4699      	mov	r9, r3
 8000750:	9300      	str	r3, [sp, #0]
 8000752:	e69a      	b.n	800048a <__aeabi_ddiv+0x4a>
 8000754:	464b      	mov	r3, r9
 8000756:	4323      	orrs	r3, r4
 8000758:	4698      	mov	r8, r3
 800075a:	d11d      	bne.n	8000798 <__aeabi_ddiv+0x358>
 800075c:	2308      	movs	r3, #8
 800075e:	4699      	mov	r9, r3
 8000760:	3b06      	subs	r3, #6
 8000762:	2500      	movs	r5, #0
 8000764:	4683      	mov	fp, r0
 8000766:	9300      	str	r3, [sp, #0]
 8000768:	e68f      	b.n	800048a <__aeabi_ddiv+0x4a>
 800076a:	4652      	mov	r2, sl
 800076c:	4322      	orrs	r2, r4
 800076e:	d109      	bne.n	8000784 <__aeabi_ddiv+0x344>
 8000770:	2302      	movs	r3, #2
 8000772:	4649      	mov	r1, r9
 8000774:	4319      	orrs	r1, r3
 8000776:	4b18      	ldr	r3, [pc, #96]	; (80007d8 <__aeabi_ddiv+0x398>)
 8000778:	4689      	mov	r9, r1
 800077a:	469c      	mov	ip, r3
 800077c:	2400      	movs	r4, #0
 800077e:	2002      	movs	r0, #2
 8000780:	44e3      	add	fp, ip
 8000782:	e69d      	b.n	80004c0 <__aeabi_ddiv+0x80>
 8000784:	2303      	movs	r3, #3
 8000786:	464a      	mov	r2, r9
 8000788:	431a      	orrs	r2, r3
 800078a:	4b13      	ldr	r3, [pc, #76]	; (80007d8 <__aeabi_ddiv+0x398>)
 800078c:	4691      	mov	r9, r2
 800078e:	469c      	mov	ip, r3
 8000790:	4652      	mov	r2, sl
 8000792:	2003      	movs	r0, #3
 8000794:	44e3      	add	fp, ip
 8000796:	e693      	b.n	80004c0 <__aeabi_ddiv+0x80>
 8000798:	230c      	movs	r3, #12
 800079a:	4699      	mov	r9, r3
 800079c:	3b09      	subs	r3, #9
 800079e:	46a0      	mov	r8, r4
 80007a0:	4683      	mov	fp, r0
 80007a2:	9300      	str	r3, [sp, #0]
 80007a4:	e671      	b.n	800048a <__aeabi_ddiv+0x4a>
 80007a6:	2304      	movs	r3, #4
 80007a8:	4699      	mov	r9, r3
 80007aa:	2300      	movs	r3, #0
 80007ac:	469b      	mov	fp, r3
 80007ae:	3301      	adds	r3, #1
 80007b0:	2500      	movs	r5, #0
 80007b2:	9300      	str	r3, [sp, #0]
 80007b4:	e669      	b.n	800048a <__aeabi_ddiv+0x4a>
 80007b6:	46c0      	nop			; (mov r8, r8)
 80007b8:	000007ff 	.word	0x000007ff
 80007bc:	fffffc01 	.word	0xfffffc01
 80007c0:	080045b4 	.word	0x080045b4
 80007c4:	000003ff 	.word	0x000003ff
 80007c8:	feffffff 	.word	0xfeffffff
 80007cc:	000007fe 	.word	0x000007fe
 80007d0:	000003f3 	.word	0x000003f3
 80007d4:	fffffc0d 	.word	0xfffffc0d
 80007d8:	fffff801 	.word	0xfffff801
 80007dc:	4649      	mov	r1, r9
 80007de:	2301      	movs	r3, #1
 80007e0:	4319      	orrs	r1, r3
 80007e2:	4689      	mov	r9, r1
 80007e4:	2400      	movs	r4, #0
 80007e6:	2001      	movs	r0, #1
 80007e8:	e66a      	b.n	80004c0 <__aeabi_ddiv+0x80>
 80007ea:	2300      	movs	r3, #0
 80007ec:	2480      	movs	r4, #128	; 0x80
 80007ee:	469a      	mov	sl, r3
 80007f0:	2500      	movs	r5, #0
 80007f2:	4b8a      	ldr	r3, [pc, #552]	; (8000a1c <__aeabi_ddiv+0x5dc>)
 80007f4:	0324      	lsls	r4, r4, #12
 80007f6:	e67a      	b.n	80004ee <__aeabi_ddiv+0xae>
 80007f8:	2501      	movs	r5, #1
 80007fa:	426d      	negs	r5, r5
 80007fc:	2301      	movs	r3, #1
 80007fe:	1a9b      	subs	r3, r3, r2
 8000800:	2b38      	cmp	r3, #56	; 0x38
 8000802:	dd00      	ble.n	8000806 <__aeabi_ddiv+0x3c6>
 8000804:	e670      	b.n	80004e8 <__aeabi_ddiv+0xa8>
 8000806:	2b1f      	cmp	r3, #31
 8000808:	dc00      	bgt.n	800080c <__aeabi_ddiv+0x3cc>
 800080a:	e0bf      	b.n	800098c <__aeabi_ddiv+0x54c>
 800080c:	211f      	movs	r1, #31
 800080e:	4249      	negs	r1, r1
 8000810:	1a8a      	subs	r2, r1, r2
 8000812:	4641      	mov	r1, r8
 8000814:	40d1      	lsrs	r1, r2
 8000816:	000a      	movs	r2, r1
 8000818:	2b20      	cmp	r3, #32
 800081a:	d004      	beq.n	8000826 <__aeabi_ddiv+0x3e6>
 800081c:	4641      	mov	r1, r8
 800081e:	4b80      	ldr	r3, [pc, #512]	; (8000a20 <__aeabi_ddiv+0x5e0>)
 8000820:	445b      	add	r3, fp
 8000822:	4099      	lsls	r1, r3
 8000824:	430d      	orrs	r5, r1
 8000826:	1e6b      	subs	r3, r5, #1
 8000828:	419d      	sbcs	r5, r3
 800082a:	2307      	movs	r3, #7
 800082c:	432a      	orrs	r2, r5
 800082e:	001d      	movs	r5, r3
 8000830:	2400      	movs	r4, #0
 8000832:	4015      	ands	r5, r2
 8000834:	4213      	tst	r3, r2
 8000836:	d100      	bne.n	800083a <__aeabi_ddiv+0x3fa>
 8000838:	e0d4      	b.n	80009e4 <__aeabi_ddiv+0x5a4>
 800083a:	210f      	movs	r1, #15
 800083c:	2300      	movs	r3, #0
 800083e:	4011      	ands	r1, r2
 8000840:	2904      	cmp	r1, #4
 8000842:	d100      	bne.n	8000846 <__aeabi_ddiv+0x406>
 8000844:	e0cb      	b.n	80009de <__aeabi_ddiv+0x59e>
 8000846:	1d11      	adds	r1, r2, #4
 8000848:	4291      	cmp	r1, r2
 800084a:	4192      	sbcs	r2, r2
 800084c:	4252      	negs	r2, r2
 800084e:	189b      	adds	r3, r3, r2
 8000850:	000a      	movs	r2, r1
 8000852:	0219      	lsls	r1, r3, #8
 8000854:	d400      	bmi.n	8000858 <__aeabi_ddiv+0x418>
 8000856:	e0c2      	b.n	80009de <__aeabi_ddiv+0x59e>
 8000858:	2301      	movs	r3, #1
 800085a:	2400      	movs	r4, #0
 800085c:	2500      	movs	r5, #0
 800085e:	e646      	b.n	80004ee <__aeabi_ddiv+0xae>
 8000860:	2380      	movs	r3, #128	; 0x80
 8000862:	4641      	mov	r1, r8
 8000864:	031b      	lsls	r3, r3, #12
 8000866:	4219      	tst	r1, r3
 8000868:	d008      	beq.n	800087c <__aeabi_ddiv+0x43c>
 800086a:	421c      	tst	r4, r3
 800086c:	d106      	bne.n	800087c <__aeabi_ddiv+0x43c>
 800086e:	431c      	orrs	r4, r3
 8000870:	0324      	lsls	r4, r4, #12
 8000872:	46ba      	mov	sl, r7
 8000874:	0015      	movs	r5, r2
 8000876:	4b69      	ldr	r3, [pc, #420]	; (8000a1c <__aeabi_ddiv+0x5dc>)
 8000878:	0b24      	lsrs	r4, r4, #12
 800087a:	e638      	b.n	80004ee <__aeabi_ddiv+0xae>
 800087c:	2480      	movs	r4, #128	; 0x80
 800087e:	4643      	mov	r3, r8
 8000880:	0324      	lsls	r4, r4, #12
 8000882:	431c      	orrs	r4, r3
 8000884:	0324      	lsls	r4, r4, #12
 8000886:	46b2      	mov	sl, r6
 8000888:	4b64      	ldr	r3, [pc, #400]	; (8000a1c <__aeabi_ddiv+0x5dc>)
 800088a:	0b24      	lsrs	r4, r4, #12
 800088c:	e62f      	b.n	80004ee <__aeabi_ddiv+0xae>
 800088e:	2b00      	cmp	r3, #0
 8000890:	d100      	bne.n	8000894 <__aeabi_ddiv+0x454>
 8000892:	e703      	b.n	800069c <__aeabi_ddiv+0x25c>
 8000894:	19a6      	adds	r6, r4, r6
 8000896:	1e68      	subs	r0, r5, #1
 8000898:	42a6      	cmp	r6, r4
 800089a:	d200      	bcs.n	800089e <__aeabi_ddiv+0x45e>
 800089c:	e08d      	b.n	80009ba <__aeabi_ddiv+0x57a>
 800089e:	428e      	cmp	r6, r1
 80008a0:	d200      	bcs.n	80008a4 <__aeabi_ddiv+0x464>
 80008a2:	e0a3      	b.n	80009ec <__aeabi_ddiv+0x5ac>
 80008a4:	d100      	bne.n	80008a8 <__aeabi_ddiv+0x468>
 80008a6:	e0b3      	b.n	8000a10 <__aeabi_ddiv+0x5d0>
 80008a8:	0005      	movs	r5, r0
 80008aa:	e6f5      	b.n	8000698 <__aeabi_ddiv+0x258>
 80008ac:	42aa      	cmp	r2, r5
 80008ae:	d900      	bls.n	80008b2 <__aeabi_ddiv+0x472>
 80008b0:	e639      	b.n	8000526 <__aeabi_ddiv+0xe6>
 80008b2:	4643      	mov	r3, r8
 80008b4:	07de      	lsls	r6, r3, #31
 80008b6:	0858      	lsrs	r0, r3, #1
 80008b8:	086b      	lsrs	r3, r5, #1
 80008ba:	431e      	orrs	r6, r3
 80008bc:	07ed      	lsls	r5, r5, #31
 80008be:	e639      	b.n	8000534 <__aeabi_ddiv+0xf4>
 80008c0:	4648      	mov	r0, r9
 80008c2:	f000 ff4b 	bl	800175c <__clzsi2>
 80008c6:	0001      	movs	r1, r0
 80008c8:	0002      	movs	r2, r0
 80008ca:	3115      	adds	r1, #21
 80008cc:	3220      	adds	r2, #32
 80008ce:	291c      	cmp	r1, #28
 80008d0:	dc00      	bgt.n	80008d4 <__aeabi_ddiv+0x494>
 80008d2:	e72c      	b.n	800072e <__aeabi_ddiv+0x2ee>
 80008d4:	464b      	mov	r3, r9
 80008d6:	3808      	subs	r0, #8
 80008d8:	4083      	lsls	r3, r0
 80008da:	2500      	movs	r5, #0
 80008dc:	4698      	mov	r8, r3
 80008de:	e732      	b.n	8000746 <__aeabi_ddiv+0x306>
 80008e0:	f000 ff3c 	bl	800175c <__clzsi2>
 80008e4:	0003      	movs	r3, r0
 80008e6:	001a      	movs	r2, r3
 80008e8:	3215      	adds	r2, #21
 80008ea:	3020      	adds	r0, #32
 80008ec:	2a1c      	cmp	r2, #28
 80008ee:	dc00      	bgt.n	80008f2 <__aeabi_ddiv+0x4b2>
 80008f0:	e700      	b.n	80006f4 <__aeabi_ddiv+0x2b4>
 80008f2:	4654      	mov	r4, sl
 80008f4:	3b08      	subs	r3, #8
 80008f6:	2200      	movs	r2, #0
 80008f8:	409c      	lsls	r4, r3
 80008fa:	e705      	b.n	8000708 <__aeabi_ddiv+0x2c8>
 80008fc:	1936      	adds	r6, r6, r4
 80008fe:	3b01      	subs	r3, #1
 8000900:	42b4      	cmp	r4, r6
 8000902:	d900      	bls.n	8000906 <__aeabi_ddiv+0x4c6>
 8000904:	e6a6      	b.n	8000654 <__aeabi_ddiv+0x214>
 8000906:	42b2      	cmp	r2, r6
 8000908:	d800      	bhi.n	800090c <__aeabi_ddiv+0x4cc>
 800090a:	e6a3      	b.n	8000654 <__aeabi_ddiv+0x214>
 800090c:	1e83      	subs	r3, r0, #2
 800090e:	1936      	adds	r6, r6, r4
 8000910:	e6a0      	b.n	8000654 <__aeabi_ddiv+0x214>
 8000912:	1909      	adds	r1, r1, r4
 8000914:	3d01      	subs	r5, #1
 8000916:	428c      	cmp	r4, r1
 8000918:	d900      	bls.n	800091c <__aeabi_ddiv+0x4dc>
 800091a:	e68d      	b.n	8000638 <__aeabi_ddiv+0x1f8>
 800091c:	428a      	cmp	r2, r1
 800091e:	d800      	bhi.n	8000922 <__aeabi_ddiv+0x4e2>
 8000920:	e68a      	b.n	8000638 <__aeabi_ddiv+0x1f8>
 8000922:	1e85      	subs	r5, r0, #2
 8000924:	1909      	adds	r1, r1, r4
 8000926:	e687      	b.n	8000638 <__aeabi_ddiv+0x1f8>
 8000928:	230f      	movs	r3, #15
 800092a:	402b      	ands	r3, r5
 800092c:	2b04      	cmp	r3, #4
 800092e:	d100      	bne.n	8000932 <__aeabi_ddiv+0x4f2>
 8000930:	e6bc      	b.n	80006ac <__aeabi_ddiv+0x26c>
 8000932:	2305      	movs	r3, #5
 8000934:	425b      	negs	r3, r3
 8000936:	42ab      	cmp	r3, r5
 8000938:	419b      	sbcs	r3, r3
 800093a:	3504      	adds	r5, #4
 800093c:	425b      	negs	r3, r3
 800093e:	08ed      	lsrs	r5, r5, #3
 8000940:	4498      	add	r8, r3
 8000942:	e6b4      	b.n	80006ae <__aeabi_ddiv+0x26e>
 8000944:	42af      	cmp	r7, r5
 8000946:	d900      	bls.n	800094a <__aeabi_ddiv+0x50a>
 8000948:	e660      	b.n	800060c <__aeabi_ddiv+0x1cc>
 800094a:	4282      	cmp	r2, r0
 800094c:	d804      	bhi.n	8000958 <__aeabi_ddiv+0x518>
 800094e:	d000      	beq.n	8000952 <__aeabi_ddiv+0x512>
 8000950:	e65c      	b.n	800060c <__aeabi_ddiv+0x1cc>
 8000952:	42ae      	cmp	r6, r5
 8000954:	d800      	bhi.n	8000958 <__aeabi_ddiv+0x518>
 8000956:	e659      	b.n	800060c <__aeabi_ddiv+0x1cc>
 8000958:	2302      	movs	r3, #2
 800095a:	425b      	negs	r3, r3
 800095c:	469c      	mov	ip, r3
 800095e:	9b00      	ldr	r3, [sp, #0]
 8000960:	44e0      	add	r8, ip
 8000962:	469c      	mov	ip, r3
 8000964:	4465      	add	r5, ip
 8000966:	429d      	cmp	r5, r3
 8000968:	419b      	sbcs	r3, r3
 800096a:	425b      	negs	r3, r3
 800096c:	191b      	adds	r3, r3, r4
 800096e:	18c0      	adds	r0, r0, r3
 8000970:	e64d      	b.n	800060e <__aeabi_ddiv+0x1ce>
 8000972:	428a      	cmp	r2, r1
 8000974:	d800      	bhi.n	8000978 <__aeabi_ddiv+0x538>
 8000976:	e60e      	b.n	8000596 <__aeabi_ddiv+0x156>
 8000978:	1e83      	subs	r3, r0, #2
 800097a:	1909      	adds	r1, r1, r4
 800097c:	e60b      	b.n	8000596 <__aeabi_ddiv+0x156>
 800097e:	428a      	cmp	r2, r1
 8000980:	d800      	bhi.n	8000984 <__aeabi_ddiv+0x544>
 8000982:	e5f4      	b.n	800056e <__aeabi_ddiv+0x12e>
 8000984:	1e83      	subs	r3, r0, #2
 8000986:	4698      	mov	r8, r3
 8000988:	1909      	adds	r1, r1, r4
 800098a:	e5f0      	b.n	800056e <__aeabi_ddiv+0x12e>
 800098c:	4925      	ldr	r1, [pc, #148]	; (8000a24 <__aeabi_ddiv+0x5e4>)
 800098e:	0028      	movs	r0, r5
 8000990:	4459      	add	r1, fp
 8000992:	408d      	lsls	r5, r1
 8000994:	4642      	mov	r2, r8
 8000996:	408a      	lsls	r2, r1
 8000998:	1e69      	subs	r1, r5, #1
 800099a:	418d      	sbcs	r5, r1
 800099c:	4641      	mov	r1, r8
 800099e:	40d8      	lsrs	r0, r3
 80009a0:	40d9      	lsrs	r1, r3
 80009a2:	4302      	orrs	r2, r0
 80009a4:	432a      	orrs	r2, r5
 80009a6:	000b      	movs	r3, r1
 80009a8:	0751      	lsls	r1, r2, #29
 80009aa:	d100      	bne.n	80009ae <__aeabi_ddiv+0x56e>
 80009ac:	e751      	b.n	8000852 <__aeabi_ddiv+0x412>
 80009ae:	210f      	movs	r1, #15
 80009b0:	4011      	ands	r1, r2
 80009b2:	2904      	cmp	r1, #4
 80009b4:	d000      	beq.n	80009b8 <__aeabi_ddiv+0x578>
 80009b6:	e746      	b.n	8000846 <__aeabi_ddiv+0x406>
 80009b8:	e74b      	b.n	8000852 <__aeabi_ddiv+0x412>
 80009ba:	0005      	movs	r5, r0
 80009bc:	428e      	cmp	r6, r1
 80009be:	d000      	beq.n	80009c2 <__aeabi_ddiv+0x582>
 80009c0:	e66a      	b.n	8000698 <__aeabi_ddiv+0x258>
 80009c2:	9a00      	ldr	r2, [sp, #0]
 80009c4:	4293      	cmp	r3, r2
 80009c6:	d000      	beq.n	80009ca <__aeabi_ddiv+0x58a>
 80009c8:	e666      	b.n	8000698 <__aeabi_ddiv+0x258>
 80009ca:	e667      	b.n	800069c <__aeabi_ddiv+0x25c>
 80009cc:	4a16      	ldr	r2, [pc, #88]	; (8000a28 <__aeabi_ddiv+0x5e8>)
 80009ce:	445a      	add	r2, fp
 80009d0:	2a00      	cmp	r2, #0
 80009d2:	dc00      	bgt.n	80009d6 <__aeabi_ddiv+0x596>
 80009d4:	e710      	b.n	80007f8 <__aeabi_ddiv+0x3b8>
 80009d6:	2301      	movs	r3, #1
 80009d8:	2500      	movs	r5, #0
 80009da:	4498      	add	r8, r3
 80009dc:	e667      	b.n	80006ae <__aeabi_ddiv+0x26e>
 80009de:	075d      	lsls	r5, r3, #29
 80009e0:	025b      	lsls	r3, r3, #9
 80009e2:	0b1c      	lsrs	r4, r3, #12
 80009e4:	08d2      	lsrs	r2, r2, #3
 80009e6:	2300      	movs	r3, #0
 80009e8:	4315      	orrs	r5, r2
 80009ea:	e580      	b.n	80004ee <__aeabi_ddiv+0xae>
 80009ec:	9800      	ldr	r0, [sp, #0]
 80009ee:	3d02      	subs	r5, #2
 80009f0:	0042      	lsls	r2, r0, #1
 80009f2:	4282      	cmp	r2, r0
 80009f4:	41bf      	sbcs	r7, r7
 80009f6:	427f      	negs	r7, r7
 80009f8:	193c      	adds	r4, r7, r4
 80009fa:	1936      	adds	r6, r6, r4
 80009fc:	9200      	str	r2, [sp, #0]
 80009fe:	e7dd      	b.n	80009bc <__aeabi_ddiv+0x57c>
 8000a00:	2480      	movs	r4, #128	; 0x80
 8000a02:	4643      	mov	r3, r8
 8000a04:	0324      	lsls	r4, r4, #12
 8000a06:	431c      	orrs	r4, r3
 8000a08:	0324      	lsls	r4, r4, #12
 8000a0a:	4b04      	ldr	r3, [pc, #16]	; (8000a1c <__aeabi_ddiv+0x5dc>)
 8000a0c:	0b24      	lsrs	r4, r4, #12
 8000a0e:	e56e      	b.n	80004ee <__aeabi_ddiv+0xae>
 8000a10:	9a00      	ldr	r2, [sp, #0]
 8000a12:	429a      	cmp	r2, r3
 8000a14:	d3ea      	bcc.n	80009ec <__aeabi_ddiv+0x5ac>
 8000a16:	0005      	movs	r5, r0
 8000a18:	e7d3      	b.n	80009c2 <__aeabi_ddiv+0x582>
 8000a1a:	46c0      	nop			; (mov r8, r8)
 8000a1c:	000007ff 	.word	0x000007ff
 8000a20:	0000043e 	.word	0x0000043e
 8000a24:	0000041e 	.word	0x0000041e
 8000a28:	000003ff 	.word	0x000003ff

08000a2c <__aeabi_dmul>:
 8000a2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a2e:	4657      	mov	r7, sl
 8000a30:	464e      	mov	r6, r9
 8000a32:	4645      	mov	r5, r8
 8000a34:	46de      	mov	lr, fp
 8000a36:	b5e0      	push	{r5, r6, r7, lr}
 8000a38:	4698      	mov	r8, r3
 8000a3a:	030c      	lsls	r4, r1, #12
 8000a3c:	004b      	lsls	r3, r1, #1
 8000a3e:	0006      	movs	r6, r0
 8000a40:	4692      	mov	sl, r2
 8000a42:	b087      	sub	sp, #28
 8000a44:	0b24      	lsrs	r4, r4, #12
 8000a46:	0d5b      	lsrs	r3, r3, #21
 8000a48:	0fcf      	lsrs	r7, r1, #31
 8000a4a:	2b00      	cmp	r3, #0
 8000a4c:	d100      	bne.n	8000a50 <__aeabi_dmul+0x24>
 8000a4e:	e15c      	b.n	8000d0a <__aeabi_dmul+0x2de>
 8000a50:	4ad9      	ldr	r2, [pc, #868]	; (8000db8 <__aeabi_dmul+0x38c>)
 8000a52:	4293      	cmp	r3, r2
 8000a54:	d100      	bne.n	8000a58 <__aeabi_dmul+0x2c>
 8000a56:	e175      	b.n	8000d44 <__aeabi_dmul+0x318>
 8000a58:	0f42      	lsrs	r2, r0, #29
 8000a5a:	00e4      	lsls	r4, r4, #3
 8000a5c:	4314      	orrs	r4, r2
 8000a5e:	2280      	movs	r2, #128	; 0x80
 8000a60:	0412      	lsls	r2, r2, #16
 8000a62:	4314      	orrs	r4, r2
 8000a64:	4ad5      	ldr	r2, [pc, #852]	; (8000dbc <__aeabi_dmul+0x390>)
 8000a66:	00c5      	lsls	r5, r0, #3
 8000a68:	4694      	mov	ip, r2
 8000a6a:	4463      	add	r3, ip
 8000a6c:	9300      	str	r3, [sp, #0]
 8000a6e:	2300      	movs	r3, #0
 8000a70:	4699      	mov	r9, r3
 8000a72:	469b      	mov	fp, r3
 8000a74:	4643      	mov	r3, r8
 8000a76:	4642      	mov	r2, r8
 8000a78:	031e      	lsls	r6, r3, #12
 8000a7a:	0fd2      	lsrs	r2, r2, #31
 8000a7c:	005b      	lsls	r3, r3, #1
 8000a7e:	4650      	mov	r0, sl
 8000a80:	4690      	mov	r8, r2
 8000a82:	0b36      	lsrs	r6, r6, #12
 8000a84:	0d5b      	lsrs	r3, r3, #21
 8000a86:	d100      	bne.n	8000a8a <__aeabi_dmul+0x5e>
 8000a88:	e120      	b.n	8000ccc <__aeabi_dmul+0x2a0>
 8000a8a:	4acb      	ldr	r2, [pc, #812]	; (8000db8 <__aeabi_dmul+0x38c>)
 8000a8c:	4293      	cmp	r3, r2
 8000a8e:	d100      	bne.n	8000a92 <__aeabi_dmul+0x66>
 8000a90:	e162      	b.n	8000d58 <__aeabi_dmul+0x32c>
 8000a92:	49ca      	ldr	r1, [pc, #808]	; (8000dbc <__aeabi_dmul+0x390>)
 8000a94:	0f42      	lsrs	r2, r0, #29
 8000a96:	468c      	mov	ip, r1
 8000a98:	9900      	ldr	r1, [sp, #0]
 8000a9a:	4463      	add	r3, ip
 8000a9c:	00f6      	lsls	r6, r6, #3
 8000a9e:	468c      	mov	ip, r1
 8000aa0:	4316      	orrs	r6, r2
 8000aa2:	2280      	movs	r2, #128	; 0x80
 8000aa4:	449c      	add	ip, r3
 8000aa6:	0412      	lsls	r2, r2, #16
 8000aa8:	4663      	mov	r3, ip
 8000aaa:	4316      	orrs	r6, r2
 8000aac:	00c2      	lsls	r2, r0, #3
 8000aae:	2000      	movs	r0, #0
 8000ab0:	9300      	str	r3, [sp, #0]
 8000ab2:	9900      	ldr	r1, [sp, #0]
 8000ab4:	4643      	mov	r3, r8
 8000ab6:	3101      	adds	r1, #1
 8000ab8:	468c      	mov	ip, r1
 8000aba:	4649      	mov	r1, r9
 8000abc:	407b      	eors	r3, r7
 8000abe:	9301      	str	r3, [sp, #4]
 8000ac0:	290f      	cmp	r1, #15
 8000ac2:	d826      	bhi.n	8000b12 <__aeabi_dmul+0xe6>
 8000ac4:	4bbe      	ldr	r3, [pc, #760]	; (8000dc0 <__aeabi_dmul+0x394>)
 8000ac6:	0089      	lsls	r1, r1, #2
 8000ac8:	5859      	ldr	r1, [r3, r1]
 8000aca:	468f      	mov	pc, r1
 8000acc:	4643      	mov	r3, r8
 8000ace:	9301      	str	r3, [sp, #4]
 8000ad0:	0034      	movs	r4, r6
 8000ad2:	0015      	movs	r5, r2
 8000ad4:	4683      	mov	fp, r0
 8000ad6:	465b      	mov	r3, fp
 8000ad8:	2b02      	cmp	r3, #2
 8000ada:	d016      	beq.n	8000b0a <__aeabi_dmul+0xde>
 8000adc:	2b03      	cmp	r3, #3
 8000ade:	d100      	bne.n	8000ae2 <__aeabi_dmul+0xb6>
 8000ae0:	e203      	b.n	8000eea <__aeabi_dmul+0x4be>
 8000ae2:	2b01      	cmp	r3, #1
 8000ae4:	d000      	beq.n	8000ae8 <__aeabi_dmul+0xbc>
 8000ae6:	e0cd      	b.n	8000c84 <__aeabi_dmul+0x258>
 8000ae8:	2200      	movs	r2, #0
 8000aea:	2400      	movs	r4, #0
 8000aec:	2500      	movs	r5, #0
 8000aee:	9b01      	ldr	r3, [sp, #4]
 8000af0:	0512      	lsls	r2, r2, #20
 8000af2:	4322      	orrs	r2, r4
 8000af4:	07db      	lsls	r3, r3, #31
 8000af6:	431a      	orrs	r2, r3
 8000af8:	0028      	movs	r0, r5
 8000afa:	0011      	movs	r1, r2
 8000afc:	b007      	add	sp, #28
 8000afe:	bcf0      	pop	{r4, r5, r6, r7}
 8000b00:	46bb      	mov	fp, r7
 8000b02:	46b2      	mov	sl, r6
 8000b04:	46a9      	mov	r9, r5
 8000b06:	46a0      	mov	r8, r4
 8000b08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b0a:	2400      	movs	r4, #0
 8000b0c:	2500      	movs	r5, #0
 8000b0e:	4aaa      	ldr	r2, [pc, #680]	; (8000db8 <__aeabi_dmul+0x38c>)
 8000b10:	e7ed      	b.n	8000aee <__aeabi_dmul+0xc2>
 8000b12:	0c28      	lsrs	r0, r5, #16
 8000b14:	042d      	lsls	r5, r5, #16
 8000b16:	0c2d      	lsrs	r5, r5, #16
 8000b18:	002b      	movs	r3, r5
 8000b1a:	0c11      	lsrs	r1, r2, #16
 8000b1c:	0412      	lsls	r2, r2, #16
 8000b1e:	0c12      	lsrs	r2, r2, #16
 8000b20:	4353      	muls	r3, r2
 8000b22:	4698      	mov	r8, r3
 8000b24:	0013      	movs	r3, r2
 8000b26:	002f      	movs	r7, r5
 8000b28:	4343      	muls	r3, r0
 8000b2a:	4699      	mov	r9, r3
 8000b2c:	434f      	muls	r7, r1
 8000b2e:	444f      	add	r7, r9
 8000b30:	46bb      	mov	fp, r7
 8000b32:	4647      	mov	r7, r8
 8000b34:	000b      	movs	r3, r1
 8000b36:	0c3f      	lsrs	r7, r7, #16
 8000b38:	46ba      	mov	sl, r7
 8000b3a:	4343      	muls	r3, r0
 8000b3c:	44da      	add	sl, fp
 8000b3e:	9302      	str	r3, [sp, #8]
 8000b40:	45d1      	cmp	r9, sl
 8000b42:	d904      	bls.n	8000b4e <__aeabi_dmul+0x122>
 8000b44:	2780      	movs	r7, #128	; 0x80
 8000b46:	027f      	lsls	r7, r7, #9
 8000b48:	46b9      	mov	r9, r7
 8000b4a:	444b      	add	r3, r9
 8000b4c:	9302      	str	r3, [sp, #8]
 8000b4e:	4653      	mov	r3, sl
 8000b50:	0c1b      	lsrs	r3, r3, #16
 8000b52:	469b      	mov	fp, r3
 8000b54:	4653      	mov	r3, sl
 8000b56:	041f      	lsls	r7, r3, #16
 8000b58:	4643      	mov	r3, r8
 8000b5a:	041b      	lsls	r3, r3, #16
 8000b5c:	0c1b      	lsrs	r3, r3, #16
 8000b5e:	4698      	mov	r8, r3
 8000b60:	003b      	movs	r3, r7
 8000b62:	4443      	add	r3, r8
 8000b64:	9304      	str	r3, [sp, #16]
 8000b66:	0c33      	lsrs	r3, r6, #16
 8000b68:	0436      	lsls	r6, r6, #16
 8000b6a:	0c36      	lsrs	r6, r6, #16
 8000b6c:	4698      	mov	r8, r3
 8000b6e:	0033      	movs	r3, r6
 8000b70:	4343      	muls	r3, r0
 8000b72:	4699      	mov	r9, r3
 8000b74:	4643      	mov	r3, r8
 8000b76:	4343      	muls	r3, r0
 8000b78:	002f      	movs	r7, r5
 8000b7a:	469a      	mov	sl, r3
 8000b7c:	4643      	mov	r3, r8
 8000b7e:	4377      	muls	r7, r6
 8000b80:	435d      	muls	r5, r3
 8000b82:	0c38      	lsrs	r0, r7, #16
 8000b84:	444d      	add	r5, r9
 8000b86:	1945      	adds	r5, r0, r5
 8000b88:	45a9      	cmp	r9, r5
 8000b8a:	d903      	bls.n	8000b94 <__aeabi_dmul+0x168>
 8000b8c:	2380      	movs	r3, #128	; 0x80
 8000b8e:	025b      	lsls	r3, r3, #9
 8000b90:	4699      	mov	r9, r3
 8000b92:	44ca      	add	sl, r9
 8000b94:	043f      	lsls	r7, r7, #16
 8000b96:	0c28      	lsrs	r0, r5, #16
 8000b98:	0c3f      	lsrs	r7, r7, #16
 8000b9a:	042d      	lsls	r5, r5, #16
 8000b9c:	19ed      	adds	r5, r5, r7
 8000b9e:	0c27      	lsrs	r7, r4, #16
 8000ba0:	0424      	lsls	r4, r4, #16
 8000ba2:	0c24      	lsrs	r4, r4, #16
 8000ba4:	0003      	movs	r3, r0
 8000ba6:	0020      	movs	r0, r4
 8000ba8:	4350      	muls	r0, r2
 8000baa:	437a      	muls	r2, r7
 8000bac:	4691      	mov	r9, r2
 8000bae:	003a      	movs	r2, r7
 8000bb0:	4453      	add	r3, sl
 8000bb2:	9305      	str	r3, [sp, #20]
 8000bb4:	0c03      	lsrs	r3, r0, #16
 8000bb6:	469a      	mov	sl, r3
 8000bb8:	434a      	muls	r2, r1
 8000bba:	4361      	muls	r1, r4
 8000bbc:	4449      	add	r1, r9
 8000bbe:	4451      	add	r1, sl
 8000bc0:	44ab      	add	fp, r5
 8000bc2:	4589      	cmp	r9, r1
 8000bc4:	d903      	bls.n	8000bce <__aeabi_dmul+0x1a2>
 8000bc6:	2380      	movs	r3, #128	; 0x80
 8000bc8:	025b      	lsls	r3, r3, #9
 8000bca:	4699      	mov	r9, r3
 8000bcc:	444a      	add	r2, r9
 8000bce:	0400      	lsls	r0, r0, #16
 8000bd0:	0c0b      	lsrs	r3, r1, #16
 8000bd2:	0c00      	lsrs	r0, r0, #16
 8000bd4:	0409      	lsls	r1, r1, #16
 8000bd6:	1809      	adds	r1, r1, r0
 8000bd8:	0020      	movs	r0, r4
 8000bda:	4699      	mov	r9, r3
 8000bdc:	4643      	mov	r3, r8
 8000bde:	4370      	muls	r0, r6
 8000be0:	435c      	muls	r4, r3
 8000be2:	437e      	muls	r6, r7
 8000be4:	435f      	muls	r7, r3
 8000be6:	0c03      	lsrs	r3, r0, #16
 8000be8:	4698      	mov	r8, r3
 8000bea:	19a4      	adds	r4, r4, r6
 8000bec:	4444      	add	r4, r8
 8000bee:	444a      	add	r2, r9
 8000bf0:	9703      	str	r7, [sp, #12]
 8000bf2:	42a6      	cmp	r6, r4
 8000bf4:	d904      	bls.n	8000c00 <__aeabi_dmul+0x1d4>
 8000bf6:	2380      	movs	r3, #128	; 0x80
 8000bf8:	025b      	lsls	r3, r3, #9
 8000bfa:	4698      	mov	r8, r3
 8000bfc:	4447      	add	r7, r8
 8000bfe:	9703      	str	r7, [sp, #12]
 8000c00:	0423      	lsls	r3, r4, #16
 8000c02:	9e02      	ldr	r6, [sp, #8]
 8000c04:	469a      	mov	sl, r3
 8000c06:	9b05      	ldr	r3, [sp, #20]
 8000c08:	445e      	add	r6, fp
 8000c0a:	4698      	mov	r8, r3
 8000c0c:	42ae      	cmp	r6, r5
 8000c0e:	41ad      	sbcs	r5, r5
 8000c10:	1876      	adds	r6, r6, r1
 8000c12:	428e      	cmp	r6, r1
 8000c14:	4189      	sbcs	r1, r1
 8000c16:	0400      	lsls	r0, r0, #16
 8000c18:	0c00      	lsrs	r0, r0, #16
 8000c1a:	4450      	add	r0, sl
 8000c1c:	4440      	add	r0, r8
 8000c1e:	426d      	negs	r5, r5
 8000c20:	1947      	adds	r7, r0, r5
 8000c22:	46b8      	mov	r8, r7
 8000c24:	4693      	mov	fp, r2
 8000c26:	4249      	negs	r1, r1
 8000c28:	4689      	mov	r9, r1
 8000c2a:	44c3      	add	fp, r8
 8000c2c:	44d9      	add	r9, fp
 8000c2e:	4298      	cmp	r0, r3
 8000c30:	4180      	sbcs	r0, r0
 8000c32:	45a8      	cmp	r8, r5
 8000c34:	41ad      	sbcs	r5, r5
 8000c36:	4593      	cmp	fp, r2
 8000c38:	4192      	sbcs	r2, r2
 8000c3a:	4589      	cmp	r9, r1
 8000c3c:	4189      	sbcs	r1, r1
 8000c3e:	426d      	negs	r5, r5
 8000c40:	4240      	negs	r0, r0
 8000c42:	4328      	orrs	r0, r5
 8000c44:	0c24      	lsrs	r4, r4, #16
 8000c46:	4252      	negs	r2, r2
 8000c48:	4249      	negs	r1, r1
 8000c4a:	430a      	orrs	r2, r1
 8000c4c:	9b03      	ldr	r3, [sp, #12]
 8000c4e:	1900      	adds	r0, r0, r4
 8000c50:	1880      	adds	r0, r0, r2
 8000c52:	18c7      	adds	r7, r0, r3
 8000c54:	464b      	mov	r3, r9
 8000c56:	0ddc      	lsrs	r4, r3, #23
 8000c58:	9b04      	ldr	r3, [sp, #16]
 8000c5a:	0275      	lsls	r5, r6, #9
 8000c5c:	431d      	orrs	r5, r3
 8000c5e:	1e6a      	subs	r2, r5, #1
 8000c60:	4195      	sbcs	r5, r2
 8000c62:	464b      	mov	r3, r9
 8000c64:	0df6      	lsrs	r6, r6, #23
 8000c66:	027f      	lsls	r7, r7, #9
 8000c68:	4335      	orrs	r5, r6
 8000c6a:	025a      	lsls	r2, r3, #9
 8000c6c:	433c      	orrs	r4, r7
 8000c6e:	4315      	orrs	r5, r2
 8000c70:	01fb      	lsls	r3, r7, #7
 8000c72:	d400      	bmi.n	8000c76 <__aeabi_dmul+0x24a>
 8000c74:	e11c      	b.n	8000eb0 <__aeabi_dmul+0x484>
 8000c76:	2101      	movs	r1, #1
 8000c78:	086a      	lsrs	r2, r5, #1
 8000c7a:	400d      	ands	r5, r1
 8000c7c:	4315      	orrs	r5, r2
 8000c7e:	07e2      	lsls	r2, r4, #31
 8000c80:	4315      	orrs	r5, r2
 8000c82:	0864      	lsrs	r4, r4, #1
 8000c84:	494f      	ldr	r1, [pc, #316]	; (8000dc4 <__aeabi_dmul+0x398>)
 8000c86:	4461      	add	r1, ip
 8000c88:	2900      	cmp	r1, #0
 8000c8a:	dc00      	bgt.n	8000c8e <__aeabi_dmul+0x262>
 8000c8c:	e0b0      	b.n	8000df0 <__aeabi_dmul+0x3c4>
 8000c8e:	076b      	lsls	r3, r5, #29
 8000c90:	d009      	beq.n	8000ca6 <__aeabi_dmul+0x27a>
 8000c92:	220f      	movs	r2, #15
 8000c94:	402a      	ands	r2, r5
 8000c96:	2a04      	cmp	r2, #4
 8000c98:	d005      	beq.n	8000ca6 <__aeabi_dmul+0x27a>
 8000c9a:	1d2a      	adds	r2, r5, #4
 8000c9c:	42aa      	cmp	r2, r5
 8000c9e:	41ad      	sbcs	r5, r5
 8000ca0:	426d      	negs	r5, r5
 8000ca2:	1964      	adds	r4, r4, r5
 8000ca4:	0015      	movs	r5, r2
 8000ca6:	01e3      	lsls	r3, r4, #7
 8000ca8:	d504      	bpl.n	8000cb4 <__aeabi_dmul+0x288>
 8000caa:	2180      	movs	r1, #128	; 0x80
 8000cac:	4a46      	ldr	r2, [pc, #280]	; (8000dc8 <__aeabi_dmul+0x39c>)
 8000cae:	00c9      	lsls	r1, r1, #3
 8000cb0:	4014      	ands	r4, r2
 8000cb2:	4461      	add	r1, ip
 8000cb4:	4a45      	ldr	r2, [pc, #276]	; (8000dcc <__aeabi_dmul+0x3a0>)
 8000cb6:	4291      	cmp	r1, r2
 8000cb8:	dd00      	ble.n	8000cbc <__aeabi_dmul+0x290>
 8000cba:	e726      	b.n	8000b0a <__aeabi_dmul+0xde>
 8000cbc:	0762      	lsls	r2, r4, #29
 8000cbe:	08ed      	lsrs	r5, r5, #3
 8000cc0:	0264      	lsls	r4, r4, #9
 8000cc2:	0549      	lsls	r1, r1, #21
 8000cc4:	4315      	orrs	r5, r2
 8000cc6:	0b24      	lsrs	r4, r4, #12
 8000cc8:	0d4a      	lsrs	r2, r1, #21
 8000cca:	e710      	b.n	8000aee <__aeabi_dmul+0xc2>
 8000ccc:	4652      	mov	r2, sl
 8000cce:	4332      	orrs	r2, r6
 8000cd0:	d100      	bne.n	8000cd4 <__aeabi_dmul+0x2a8>
 8000cd2:	e07f      	b.n	8000dd4 <__aeabi_dmul+0x3a8>
 8000cd4:	2e00      	cmp	r6, #0
 8000cd6:	d100      	bne.n	8000cda <__aeabi_dmul+0x2ae>
 8000cd8:	e0dc      	b.n	8000e94 <__aeabi_dmul+0x468>
 8000cda:	0030      	movs	r0, r6
 8000cdc:	f000 fd3e 	bl	800175c <__clzsi2>
 8000ce0:	0002      	movs	r2, r0
 8000ce2:	3a0b      	subs	r2, #11
 8000ce4:	231d      	movs	r3, #29
 8000ce6:	0001      	movs	r1, r0
 8000ce8:	1a9b      	subs	r3, r3, r2
 8000cea:	4652      	mov	r2, sl
 8000cec:	3908      	subs	r1, #8
 8000cee:	40da      	lsrs	r2, r3
 8000cf0:	408e      	lsls	r6, r1
 8000cf2:	4316      	orrs	r6, r2
 8000cf4:	4652      	mov	r2, sl
 8000cf6:	408a      	lsls	r2, r1
 8000cf8:	9b00      	ldr	r3, [sp, #0]
 8000cfa:	4935      	ldr	r1, [pc, #212]	; (8000dd0 <__aeabi_dmul+0x3a4>)
 8000cfc:	1a18      	subs	r0, r3, r0
 8000cfe:	0003      	movs	r3, r0
 8000d00:	468c      	mov	ip, r1
 8000d02:	4463      	add	r3, ip
 8000d04:	2000      	movs	r0, #0
 8000d06:	9300      	str	r3, [sp, #0]
 8000d08:	e6d3      	b.n	8000ab2 <__aeabi_dmul+0x86>
 8000d0a:	0025      	movs	r5, r4
 8000d0c:	4305      	orrs	r5, r0
 8000d0e:	d04a      	beq.n	8000da6 <__aeabi_dmul+0x37a>
 8000d10:	2c00      	cmp	r4, #0
 8000d12:	d100      	bne.n	8000d16 <__aeabi_dmul+0x2ea>
 8000d14:	e0b0      	b.n	8000e78 <__aeabi_dmul+0x44c>
 8000d16:	0020      	movs	r0, r4
 8000d18:	f000 fd20 	bl	800175c <__clzsi2>
 8000d1c:	0001      	movs	r1, r0
 8000d1e:	0002      	movs	r2, r0
 8000d20:	390b      	subs	r1, #11
 8000d22:	231d      	movs	r3, #29
 8000d24:	0010      	movs	r0, r2
 8000d26:	1a5b      	subs	r3, r3, r1
 8000d28:	0031      	movs	r1, r6
 8000d2a:	0035      	movs	r5, r6
 8000d2c:	3808      	subs	r0, #8
 8000d2e:	4084      	lsls	r4, r0
 8000d30:	40d9      	lsrs	r1, r3
 8000d32:	4085      	lsls	r5, r0
 8000d34:	430c      	orrs	r4, r1
 8000d36:	4826      	ldr	r0, [pc, #152]	; (8000dd0 <__aeabi_dmul+0x3a4>)
 8000d38:	1a83      	subs	r3, r0, r2
 8000d3a:	9300      	str	r3, [sp, #0]
 8000d3c:	2300      	movs	r3, #0
 8000d3e:	4699      	mov	r9, r3
 8000d40:	469b      	mov	fp, r3
 8000d42:	e697      	b.n	8000a74 <__aeabi_dmul+0x48>
 8000d44:	0005      	movs	r5, r0
 8000d46:	4325      	orrs	r5, r4
 8000d48:	d126      	bne.n	8000d98 <__aeabi_dmul+0x36c>
 8000d4a:	2208      	movs	r2, #8
 8000d4c:	9300      	str	r3, [sp, #0]
 8000d4e:	2302      	movs	r3, #2
 8000d50:	2400      	movs	r4, #0
 8000d52:	4691      	mov	r9, r2
 8000d54:	469b      	mov	fp, r3
 8000d56:	e68d      	b.n	8000a74 <__aeabi_dmul+0x48>
 8000d58:	4652      	mov	r2, sl
 8000d5a:	9b00      	ldr	r3, [sp, #0]
 8000d5c:	4332      	orrs	r2, r6
 8000d5e:	d110      	bne.n	8000d82 <__aeabi_dmul+0x356>
 8000d60:	4915      	ldr	r1, [pc, #84]	; (8000db8 <__aeabi_dmul+0x38c>)
 8000d62:	2600      	movs	r6, #0
 8000d64:	468c      	mov	ip, r1
 8000d66:	4463      	add	r3, ip
 8000d68:	4649      	mov	r1, r9
 8000d6a:	9300      	str	r3, [sp, #0]
 8000d6c:	2302      	movs	r3, #2
 8000d6e:	4319      	orrs	r1, r3
 8000d70:	4689      	mov	r9, r1
 8000d72:	2002      	movs	r0, #2
 8000d74:	e69d      	b.n	8000ab2 <__aeabi_dmul+0x86>
 8000d76:	465b      	mov	r3, fp
 8000d78:	9701      	str	r7, [sp, #4]
 8000d7a:	2b02      	cmp	r3, #2
 8000d7c:	d000      	beq.n	8000d80 <__aeabi_dmul+0x354>
 8000d7e:	e6ad      	b.n	8000adc <__aeabi_dmul+0xb0>
 8000d80:	e6c3      	b.n	8000b0a <__aeabi_dmul+0xde>
 8000d82:	4a0d      	ldr	r2, [pc, #52]	; (8000db8 <__aeabi_dmul+0x38c>)
 8000d84:	2003      	movs	r0, #3
 8000d86:	4694      	mov	ip, r2
 8000d88:	4463      	add	r3, ip
 8000d8a:	464a      	mov	r2, r9
 8000d8c:	9300      	str	r3, [sp, #0]
 8000d8e:	2303      	movs	r3, #3
 8000d90:	431a      	orrs	r2, r3
 8000d92:	4691      	mov	r9, r2
 8000d94:	4652      	mov	r2, sl
 8000d96:	e68c      	b.n	8000ab2 <__aeabi_dmul+0x86>
 8000d98:	220c      	movs	r2, #12
 8000d9a:	9300      	str	r3, [sp, #0]
 8000d9c:	2303      	movs	r3, #3
 8000d9e:	0005      	movs	r5, r0
 8000da0:	4691      	mov	r9, r2
 8000da2:	469b      	mov	fp, r3
 8000da4:	e666      	b.n	8000a74 <__aeabi_dmul+0x48>
 8000da6:	2304      	movs	r3, #4
 8000da8:	4699      	mov	r9, r3
 8000daa:	2300      	movs	r3, #0
 8000dac:	9300      	str	r3, [sp, #0]
 8000dae:	3301      	adds	r3, #1
 8000db0:	2400      	movs	r4, #0
 8000db2:	469b      	mov	fp, r3
 8000db4:	e65e      	b.n	8000a74 <__aeabi_dmul+0x48>
 8000db6:	46c0      	nop			; (mov r8, r8)
 8000db8:	000007ff 	.word	0x000007ff
 8000dbc:	fffffc01 	.word	0xfffffc01
 8000dc0:	080045f4 	.word	0x080045f4
 8000dc4:	000003ff 	.word	0x000003ff
 8000dc8:	feffffff 	.word	0xfeffffff
 8000dcc:	000007fe 	.word	0x000007fe
 8000dd0:	fffffc0d 	.word	0xfffffc0d
 8000dd4:	4649      	mov	r1, r9
 8000dd6:	2301      	movs	r3, #1
 8000dd8:	4319      	orrs	r1, r3
 8000dda:	4689      	mov	r9, r1
 8000ddc:	2600      	movs	r6, #0
 8000dde:	2001      	movs	r0, #1
 8000de0:	e667      	b.n	8000ab2 <__aeabi_dmul+0x86>
 8000de2:	2300      	movs	r3, #0
 8000de4:	2480      	movs	r4, #128	; 0x80
 8000de6:	2500      	movs	r5, #0
 8000de8:	4a43      	ldr	r2, [pc, #268]	; (8000ef8 <__aeabi_dmul+0x4cc>)
 8000dea:	9301      	str	r3, [sp, #4]
 8000dec:	0324      	lsls	r4, r4, #12
 8000dee:	e67e      	b.n	8000aee <__aeabi_dmul+0xc2>
 8000df0:	2001      	movs	r0, #1
 8000df2:	1a40      	subs	r0, r0, r1
 8000df4:	2838      	cmp	r0, #56	; 0x38
 8000df6:	dd00      	ble.n	8000dfa <__aeabi_dmul+0x3ce>
 8000df8:	e676      	b.n	8000ae8 <__aeabi_dmul+0xbc>
 8000dfa:	281f      	cmp	r0, #31
 8000dfc:	dd5b      	ble.n	8000eb6 <__aeabi_dmul+0x48a>
 8000dfe:	221f      	movs	r2, #31
 8000e00:	0023      	movs	r3, r4
 8000e02:	4252      	negs	r2, r2
 8000e04:	1a51      	subs	r1, r2, r1
 8000e06:	40cb      	lsrs	r3, r1
 8000e08:	0019      	movs	r1, r3
 8000e0a:	2820      	cmp	r0, #32
 8000e0c:	d003      	beq.n	8000e16 <__aeabi_dmul+0x3ea>
 8000e0e:	4a3b      	ldr	r2, [pc, #236]	; (8000efc <__aeabi_dmul+0x4d0>)
 8000e10:	4462      	add	r2, ip
 8000e12:	4094      	lsls	r4, r2
 8000e14:	4325      	orrs	r5, r4
 8000e16:	1e6a      	subs	r2, r5, #1
 8000e18:	4195      	sbcs	r5, r2
 8000e1a:	002a      	movs	r2, r5
 8000e1c:	430a      	orrs	r2, r1
 8000e1e:	2107      	movs	r1, #7
 8000e20:	000d      	movs	r5, r1
 8000e22:	2400      	movs	r4, #0
 8000e24:	4015      	ands	r5, r2
 8000e26:	4211      	tst	r1, r2
 8000e28:	d05b      	beq.n	8000ee2 <__aeabi_dmul+0x4b6>
 8000e2a:	210f      	movs	r1, #15
 8000e2c:	2400      	movs	r4, #0
 8000e2e:	4011      	ands	r1, r2
 8000e30:	2904      	cmp	r1, #4
 8000e32:	d053      	beq.n	8000edc <__aeabi_dmul+0x4b0>
 8000e34:	1d11      	adds	r1, r2, #4
 8000e36:	4291      	cmp	r1, r2
 8000e38:	4192      	sbcs	r2, r2
 8000e3a:	4252      	negs	r2, r2
 8000e3c:	18a4      	adds	r4, r4, r2
 8000e3e:	000a      	movs	r2, r1
 8000e40:	0223      	lsls	r3, r4, #8
 8000e42:	d54b      	bpl.n	8000edc <__aeabi_dmul+0x4b0>
 8000e44:	2201      	movs	r2, #1
 8000e46:	2400      	movs	r4, #0
 8000e48:	2500      	movs	r5, #0
 8000e4a:	e650      	b.n	8000aee <__aeabi_dmul+0xc2>
 8000e4c:	2380      	movs	r3, #128	; 0x80
 8000e4e:	031b      	lsls	r3, r3, #12
 8000e50:	421c      	tst	r4, r3
 8000e52:	d009      	beq.n	8000e68 <__aeabi_dmul+0x43c>
 8000e54:	421e      	tst	r6, r3
 8000e56:	d107      	bne.n	8000e68 <__aeabi_dmul+0x43c>
 8000e58:	4333      	orrs	r3, r6
 8000e5a:	031c      	lsls	r4, r3, #12
 8000e5c:	4643      	mov	r3, r8
 8000e5e:	0015      	movs	r5, r2
 8000e60:	0b24      	lsrs	r4, r4, #12
 8000e62:	4a25      	ldr	r2, [pc, #148]	; (8000ef8 <__aeabi_dmul+0x4cc>)
 8000e64:	9301      	str	r3, [sp, #4]
 8000e66:	e642      	b.n	8000aee <__aeabi_dmul+0xc2>
 8000e68:	2280      	movs	r2, #128	; 0x80
 8000e6a:	0312      	lsls	r2, r2, #12
 8000e6c:	4314      	orrs	r4, r2
 8000e6e:	0324      	lsls	r4, r4, #12
 8000e70:	4a21      	ldr	r2, [pc, #132]	; (8000ef8 <__aeabi_dmul+0x4cc>)
 8000e72:	0b24      	lsrs	r4, r4, #12
 8000e74:	9701      	str	r7, [sp, #4]
 8000e76:	e63a      	b.n	8000aee <__aeabi_dmul+0xc2>
 8000e78:	f000 fc70 	bl	800175c <__clzsi2>
 8000e7c:	0001      	movs	r1, r0
 8000e7e:	0002      	movs	r2, r0
 8000e80:	3115      	adds	r1, #21
 8000e82:	3220      	adds	r2, #32
 8000e84:	291c      	cmp	r1, #28
 8000e86:	dc00      	bgt.n	8000e8a <__aeabi_dmul+0x45e>
 8000e88:	e74b      	b.n	8000d22 <__aeabi_dmul+0x2f6>
 8000e8a:	0034      	movs	r4, r6
 8000e8c:	3808      	subs	r0, #8
 8000e8e:	2500      	movs	r5, #0
 8000e90:	4084      	lsls	r4, r0
 8000e92:	e750      	b.n	8000d36 <__aeabi_dmul+0x30a>
 8000e94:	f000 fc62 	bl	800175c <__clzsi2>
 8000e98:	0003      	movs	r3, r0
 8000e9a:	001a      	movs	r2, r3
 8000e9c:	3215      	adds	r2, #21
 8000e9e:	3020      	adds	r0, #32
 8000ea0:	2a1c      	cmp	r2, #28
 8000ea2:	dc00      	bgt.n	8000ea6 <__aeabi_dmul+0x47a>
 8000ea4:	e71e      	b.n	8000ce4 <__aeabi_dmul+0x2b8>
 8000ea6:	4656      	mov	r6, sl
 8000ea8:	3b08      	subs	r3, #8
 8000eaa:	2200      	movs	r2, #0
 8000eac:	409e      	lsls	r6, r3
 8000eae:	e723      	b.n	8000cf8 <__aeabi_dmul+0x2cc>
 8000eb0:	9b00      	ldr	r3, [sp, #0]
 8000eb2:	469c      	mov	ip, r3
 8000eb4:	e6e6      	b.n	8000c84 <__aeabi_dmul+0x258>
 8000eb6:	4912      	ldr	r1, [pc, #72]	; (8000f00 <__aeabi_dmul+0x4d4>)
 8000eb8:	0022      	movs	r2, r4
 8000eba:	4461      	add	r1, ip
 8000ebc:	002e      	movs	r6, r5
 8000ebe:	408d      	lsls	r5, r1
 8000ec0:	408a      	lsls	r2, r1
 8000ec2:	40c6      	lsrs	r6, r0
 8000ec4:	1e69      	subs	r1, r5, #1
 8000ec6:	418d      	sbcs	r5, r1
 8000ec8:	4332      	orrs	r2, r6
 8000eca:	432a      	orrs	r2, r5
 8000ecc:	40c4      	lsrs	r4, r0
 8000ece:	0753      	lsls	r3, r2, #29
 8000ed0:	d0b6      	beq.n	8000e40 <__aeabi_dmul+0x414>
 8000ed2:	210f      	movs	r1, #15
 8000ed4:	4011      	ands	r1, r2
 8000ed6:	2904      	cmp	r1, #4
 8000ed8:	d1ac      	bne.n	8000e34 <__aeabi_dmul+0x408>
 8000eda:	e7b1      	b.n	8000e40 <__aeabi_dmul+0x414>
 8000edc:	0765      	lsls	r5, r4, #29
 8000ede:	0264      	lsls	r4, r4, #9
 8000ee0:	0b24      	lsrs	r4, r4, #12
 8000ee2:	08d2      	lsrs	r2, r2, #3
 8000ee4:	4315      	orrs	r5, r2
 8000ee6:	2200      	movs	r2, #0
 8000ee8:	e601      	b.n	8000aee <__aeabi_dmul+0xc2>
 8000eea:	2280      	movs	r2, #128	; 0x80
 8000eec:	0312      	lsls	r2, r2, #12
 8000eee:	4314      	orrs	r4, r2
 8000ef0:	0324      	lsls	r4, r4, #12
 8000ef2:	4a01      	ldr	r2, [pc, #4]	; (8000ef8 <__aeabi_dmul+0x4cc>)
 8000ef4:	0b24      	lsrs	r4, r4, #12
 8000ef6:	e5fa      	b.n	8000aee <__aeabi_dmul+0xc2>
 8000ef8:	000007ff 	.word	0x000007ff
 8000efc:	0000043e 	.word	0x0000043e
 8000f00:	0000041e 	.word	0x0000041e

08000f04 <__aeabi_dsub>:
 8000f04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f06:	4657      	mov	r7, sl
 8000f08:	464e      	mov	r6, r9
 8000f0a:	4645      	mov	r5, r8
 8000f0c:	46de      	mov	lr, fp
 8000f0e:	b5e0      	push	{r5, r6, r7, lr}
 8000f10:	001e      	movs	r6, r3
 8000f12:	0017      	movs	r7, r2
 8000f14:	004a      	lsls	r2, r1, #1
 8000f16:	030b      	lsls	r3, r1, #12
 8000f18:	0d52      	lsrs	r2, r2, #21
 8000f1a:	0a5b      	lsrs	r3, r3, #9
 8000f1c:	4690      	mov	r8, r2
 8000f1e:	0f42      	lsrs	r2, r0, #29
 8000f20:	431a      	orrs	r2, r3
 8000f22:	0fcd      	lsrs	r5, r1, #31
 8000f24:	4ccd      	ldr	r4, [pc, #820]	; (800125c <__aeabi_dsub+0x358>)
 8000f26:	0331      	lsls	r1, r6, #12
 8000f28:	00c3      	lsls	r3, r0, #3
 8000f2a:	4694      	mov	ip, r2
 8000f2c:	0070      	lsls	r0, r6, #1
 8000f2e:	0f7a      	lsrs	r2, r7, #29
 8000f30:	0a49      	lsrs	r1, r1, #9
 8000f32:	00ff      	lsls	r7, r7, #3
 8000f34:	469a      	mov	sl, r3
 8000f36:	46b9      	mov	r9, r7
 8000f38:	0d40      	lsrs	r0, r0, #21
 8000f3a:	0ff6      	lsrs	r6, r6, #31
 8000f3c:	4311      	orrs	r1, r2
 8000f3e:	42a0      	cmp	r0, r4
 8000f40:	d100      	bne.n	8000f44 <__aeabi_dsub+0x40>
 8000f42:	e0b1      	b.n	80010a8 <__aeabi_dsub+0x1a4>
 8000f44:	2201      	movs	r2, #1
 8000f46:	4056      	eors	r6, r2
 8000f48:	46b3      	mov	fp, r6
 8000f4a:	42b5      	cmp	r5, r6
 8000f4c:	d100      	bne.n	8000f50 <__aeabi_dsub+0x4c>
 8000f4e:	e088      	b.n	8001062 <__aeabi_dsub+0x15e>
 8000f50:	4642      	mov	r2, r8
 8000f52:	1a12      	subs	r2, r2, r0
 8000f54:	2a00      	cmp	r2, #0
 8000f56:	dc00      	bgt.n	8000f5a <__aeabi_dsub+0x56>
 8000f58:	e0ae      	b.n	80010b8 <__aeabi_dsub+0x1b4>
 8000f5a:	2800      	cmp	r0, #0
 8000f5c:	d100      	bne.n	8000f60 <__aeabi_dsub+0x5c>
 8000f5e:	e0c1      	b.n	80010e4 <__aeabi_dsub+0x1e0>
 8000f60:	48be      	ldr	r0, [pc, #760]	; (800125c <__aeabi_dsub+0x358>)
 8000f62:	4580      	cmp	r8, r0
 8000f64:	d100      	bne.n	8000f68 <__aeabi_dsub+0x64>
 8000f66:	e151      	b.n	800120c <__aeabi_dsub+0x308>
 8000f68:	2080      	movs	r0, #128	; 0x80
 8000f6a:	0400      	lsls	r0, r0, #16
 8000f6c:	4301      	orrs	r1, r0
 8000f6e:	2a38      	cmp	r2, #56	; 0x38
 8000f70:	dd00      	ble.n	8000f74 <__aeabi_dsub+0x70>
 8000f72:	e17b      	b.n	800126c <__aeabi_dsub+0x368>
 8000f74:	2a1f      	cmp	r2, #31
 8000f76:	dd00      	ble.n	8000f7a <__aeabi_dsub+0x76>
 8000f78:	e1ee      	b.n	8001358 <__aeabi_dsub+0x454>
 8000f7a:	2020      	movs	r0, #32
 8000f7c:	003e      	movs	r6, r7
 8000f7e:	1a80      	subs	r0, r0, r2
 8000f80:	000c      	movs	r4, r1
 8000f82:	40d6      	lsrs	r6, r2
 8000f84:	40d1      	lsrs	r1, r2
 8000f86:	4087      	lsls	r7, r0
 8000f88:	4662      	mov	r2, ip
 8000f8a:	4084      	lsls	r4, r0
 8000f8c:	1a52      	subs	r2, r2, r1
 8000f8e:	1e78      	subs	r0, r7, #1
 8000f90:	4187      	sbcs	r7, r0
 8000f92:	4694      	mov	ip, r2
 8000f94:	4334      	orrs	r4, r6
 8000f96:	4327      	orrs	r7, r4
 8000f98:	1bdc      	subs	r4, r3, r7
 8000f9a:	42a3      	cmp	r3, r4
 8000f9c:	419b      	sbcs	r3, r3
 8000f9e:	4662      	mov	r2, ip
 8000fa0:	425b      	negs	r3, r3
 8000fa2:	1ad3      	subs	r3, r2, r3
 8000fa4:	4699      	mov	r9, r3
 8000fa6:	464b      	mov	r3, r9
 8000fa8:	021b      	lsls	r3, r3, #8
 8000faa:	d400      	bmi.n	8000fae <__aeabi_dsub+0xaa>
 8000fac:	e118      	b.n	80011e0 <__aeabi_dsub+0x2dc>
 8000fae:	464b      	mov	r3, r9
 8000fb0:	0258      	lsls	r0, r3, #9
 8000fb2:	0a43      	lsrs	r3, r0, #9
 8000fb4:	4699      	mov	r9, r3
 8000fb6:	464b      	mov	r3, r9
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	d100      	bne.n	8000fbe <__aeabi_dsub+0xba>
 8000fbc:	e137      	b.n	800122e <__aeabi_dsub+0x32a>
 8000fbe:	4648      	mov	r0, r9
 8000fc0:	f000 fbcc 	bl	800175c <__clzsi2>
 8000fc4:	0001      	movs	r1, r0
 8000fc6:	3908      	subs	r1, #8
 8000fc8:	2320      	movs	r3, #32
 8000fca:	0022      	movs	r2, r4
 8000fcc:	4648      	mov	r0, r9
 8000fce:	1a5b      	subs	r3, r3, r1
 8000fd0:	40da      	lsrs	r2, r3
 8000fd2:	4088      	lsls	r0, r1
 8000fd4:	408c      	lsls	r4, r1
 8000fd6:	4643      	mov	r3, r8
 8000fd8:	4310      	orrs	r0, r2
 8000fda:	4588      	cmp	r8, r1
 8000fdc:	dd00      	ble.n	8000fe0 <__aeabi_dsub+0xdc>
 8000fde:	e136      	b.n	800124e <__aeabi_dsub+0x34a>
 8000fe0:	1ac9      	subs	r1, r1, r3
 8000fe2:	1c4b      	adds	r3, r1, #1
 8000fe4:	2b1f      	cmp	r3, #31
 8000fe6:	dd00      	ble.n	8000fea <__aeabi_dsub+0xe6>
 8000fe8:	e0ea      	b.n	80011c0 <__aeabi_dsub+0x2bc>
 8000fea:	2220      	movs	r2, #32
 8000fec:	0026      	movs	r6, r4
 8000fee:	1ad2      	subs	r2, r2, r3
 8000ff0:	0001      	movs	r1, r0
 8000ff2:	4094      	lsls	r4, r2
 8000ff4:	40de      	lsrs	r6, r3
 8000ff6:	40d8      	lsrs	r0, r3
 8000ff8:	2300      	movs	r3, #0
 8000ffa:	4091      	lsls	r1, r2
 8000ffc:	1e62      	subs	r2, r4, #1
 8000ffe:	4194      	sbcs	r4, r2
 8001000:	4681      	mov	r9, r0
 8001002:	4698      	mov	r8, r3
 8001004:	4331      	orrs	r1, r6
 8001006:	430c      	orrs	r4, r1
 8001008:	0763      	lsls	r3, r4, #29
 800100a:	d009      	beq.n	8001020 <__aeabi_dsub+0x11c>
 800100c:	230f      	movs	r3, #15
 800100e:	4023      	ands	r3, r4
 8001010:	2b04      	cmp	r3, #4
 8001012:	d005      	beq.n	8001020 <__aeabi_dsub+0x11c>
 8001014:	1d23      	adds	r3, r4, #4
 8001016:	42a3      	cmp	r3, r4
 8001018:	41a4      	sbcs	r4, r4
 800101a:	4264      	negs	r4, r4
 800101c:	44a1      	add	r9, r4
 800101e:	001c      	movs	r4, r3
 8001020:	464b      	mov	r3, r9
 8001022:	021b      	lsls	r3, r3, #8
 8001024:	d400      	bmi.n	8001028 <__aeabi_dsub+0x124>
 8001026:	e0de      	b.n	80011e6 <__aeabi_dsub+0x2e2>
 8001028:	4641      	mov	r1, r8
 800102a:	4b8c      	ldr	r3, [pc, #560]	; (800125c <__aeabi_dsub+0x358>)
 800102c:	3101      	adds	r1, #1
 800102e:	4299      	cmp	r1, r3
 8001030:	d100      	bne.n	8001034 <__aeabi_dsub+0x130>
 8001032:	e0e7      	b.n	8001204 <__aeabi_dsub+0x300>
 8001034:	464b      	mov	r3, r9
 8001036:	488a      	ldr	r0, [pc, #552]	; (8001260 <__aeabi_dsub+0x35c>)
 8001038:	08e4      	lsrs	r4, r4, #3
 800103a:	4003      	ands	r3, r0
 800103c:	0018      	movs	r0, r3
 800103e:	0549      	lsls	r1, r1, #21
 8001040:	075b      	lsls	r3, r3, #29
 8001042:	0240      	lsls	r0, r0, #9
 8001044:	4323      	orrs	r3, r4
 8001046:	0d4a      	lsrs	r2, r1, #21
 8001048:	0b04      	lsrs	r4, r0, #12
 800104a:	0512      	lsls	r2, r2, #20
 800104c:	07ed      	lsls	r5, r5, #31
 800104e:	4322      	orrs	r2, r4
 8001050:	432a      	orrs	r2, r5
 8001052:	0018      	movs	r0, r3
 8001054:	0011      	movs	r1, r2
 8001056:	bcf0      	pop	{r4, r5, r6, r7}
 8001058:	46bb      	mov	fp, r7
 800105a:	46b2      	mov	sl, r6
 800105c:	46a9      	mov	r9, r5
 800105e:	46a0      	mov	r8, r4
 8001060:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001062:	4642      	mov	r2, r8
 8001064:	1a12      	subs	r2, r2, r0
 8001066:	2a00      	cmp	r2, #0
 8001068:	dd52      	ble.n	8001110 <__aeabi_dsub+0x20c>
 800106a:	2800      	cmp	r0, #0
 800106c:	d100      	bne.n	8001070 <__aeabi_dsub+0x16c>
 800106e:	e09c      	b.n	80011aa <__aeabi_dsub+0x2a6>
 8001070:	45a0      	cmp	r8, r4
 8001072:	d100      	bne.n	8001076 <__aeabi_dsub+0x172>
 8001074:	e0ca      	b.n	800120c <__aeabi_dsub+0x308>
 8001076:	2080      	movs	r0, #128	; 0x80
 8001078:	0400      	lsls	r0, r0, #16
 800107a:	4301      	orrs	r1, r0
 800107c:	2a38      	cmp	r2, #56	; 0x38
 800107e:	dd00      	ble.n	8001082 <__aeabi_dsub+0x17e>
 8001080:	e149      	b.n	8001316 <__aeabi_dsub+0x412>
 8001082:	2a1f      	cmp	r2, #31
 8001084:	dc00      	bgt.n	8001088 <__aeabi_dsub+0x184>
 8001086:	e197      	b.n	80013b8 <__aeabi_dsub+0x4b4>
 8001088:	0010      	movs	r0, r2
 800108a:	000e      	movs	r6, r1
 800108c:	3820      	subs	r0, #32
 800108e:	40c6      	lsrs	r6, r0
 8001090:	2a20      	cmp	r2, #32
 8001092:	d004      	beq.n	800109e <__aeabi_dsub+0x19a>
 8001094:	2040      	movs	r0, #64	; 0x40
 8001096:	1a82      	subs	r2, r0, r2
 8001098:	4091      	lsls	r1, r2
 800109a:	430f      	orrs	r7, r1
 800109c:	46b9      	mov	r9, r7
 800109e:	464c      	mov	r4, r9
 80010a0:	1e62      	subs	r2, r4, #1
 80010a2:	4194      	sbcs	r4, r2
 80010a4:	4334      	orrs	r4, r6
 80010a6:	e13a      	b.n	800131e <__aeabi_dsub+0x41a>
 80010a8:	000a      	movs	r2, r1
 80010aa:	433a      	orrs	r2, r7
 80010ac:	d028      	beq.n	8001100 <__aeabi_dsub+0x1fc>
 80010ae:	46b3      	mov	fp, r6
 80010b0:	42b5      	cmp	r5, r6
 80010b2:	d02b      	beq.n	800110c <__aeabi_dsub+0x208>
 80010b4:	4a6b      	ldr	r2, [pc, #428]	; (8001264 <__aeabi_dsub+0x360>)
 80010b6:	4442      	add	r2, r8
 80010b8:	2a00      	cmp	r2, #0
 80010ba:	d05d      	beq.n	8001178 <__aeabi_dsub+0x274>
 80010bc:	4642      	mov	r2, r8
 80010be:	4644      	mov	r4, r8
 80010c0:	1a82      	subs	r2, r0, r2
 80010c2:	2c00      	cmp	r4, #0
 80010c4:	d000      	beq.n	80010c8 <__aeabi_dsub+0x1c4>
 80010c6:	e0f5      	b.n	80012b4 <__aeabi_dsub+0x3b0>
 80010c8:	4665      	mov	r5, ip
 80010ca:	431d      	orrs	r5, r3
 80010cc:	d100      	bne.n	80010d0 <__aeabi_dsub+0x1cc>
 80010ce:	e19c      	b.n	800140a <__aeabi_dsub+0x506>
 80010d0:	1e55      	subs	r5, r2, #1
 80010d2:	2a01      	cmp	r2, #1
 80010d4:	d100      	bne.n	80010d8 <__aeabi_dsub+0x1d4>
 80010d6:	e1fb      	b.n	80014d0 <__aeabi_dsub+0x5cc>
 80010d8:	4c60      	ldr	r4, [pc, #384]	; (800125c <__aeabi_dsub+0x358>)
 80010da:	42a2      	cmp	r2, r4
 80010dc:	d100      	bne.n	80010e0 <__aeabi_dsub+0x1dc>
 80010de:	e1bd      	b.n	800145c <__aeabi_dsub+0x558>
 80010e0:	002a      	movs	r2, r5
 80010e2:	e0f0      	b.n	80012c6 <__aeabi_dsub+0x3c2>
 80010e4:	0008      	movs	r0, r1
 80010e6:	4338      	orrs	r0, r7
 80010e8:	d100      	bne.n	80010ec <__aeabi_dsub+0x1e8>
 80010ea:	e0c3      	b.n	8001274 <__aeabi_dsub+0x370>
 80010ec:	1e50      	subs	r0, r2, #1
 80010ee:	2a01      	cmp	r2, #1
 80010f0:	d100      	bne.n	80010f4 <__aeabi_dsub+0x1f0>
 80010f2:	e1a8      	b.n	8001446 <__aeabi_dsub+0x542>
 80010f4:	4c59      	ldr	r4, [pc, #356]	; (800125c <__aeabi_dsub+0x358>)
 80010f6:	42a2      	cmp	r2, r4
 80010f8:	d100      	bne.n	80010fc <__aeabi_dsub+0x1f8>
 80010fa:	e087      	b.n	800120c <__aeabi_dsub+0x308>
 80010fc:	0002      	movs	r2, r0
 80010fe:	e736      	b.n	8000f6e <__aeabi_dsub+0x6a>
 8001100:	2201      	movs	r2, #1
 8001102:	4056      	eors	r6, r2
 8001104:	46b3      	mov	fp, r6
 8001106:	42b5      	cmp	r5, r6
 8001108:	d000      	beq.n	800110c <__aeabi_dsub+0x208>
 800110a:	e721      	b.n	8000f50 <__aeabi_dsub+0x4c>
 800110c:	4a55      	ldr	r2, [pc, #340]	; (8001264 <__aeabi_dsub+0x360>)
 800110e:	4442      	add	r2, r8
 8001110:	2a00      	cmp	r2, #0
 8001112:	d100      	bne.n	8001116 <__aeabi_dsub+0x212>
 8001114:	e0b5      	b.n	8001282 <__aeabi_dsub+0x37e>
 8001116:	4642      	mov	r2, r8
 8001118:	4644      	mov	r4, r8
 800111a:	1a82      	subs	r2, r0, r2
 800111c:	2c00      	cmp	r4, #0
 800111e:	d100      	bne.n	8001122 <__aeabi_dsub+0x21e>
 8001120:	e138      	b.n	8001394 <__aeabi_dsub+0x490>
 8001122:	4e4e      	ldr	r6, [pc, #312]	; (800125c <__aeabi_dsub+0x358>)
 8001124:	42b0      	cmp	r0, r6
 8001126:	d100      	bne.n	800112a <__aeabi_dsub+0x226>
 8001128:	e1de      	b.n	80014e8 <__aeabi_dsub+0x5e4>
 800112a:	2680      	movs	r6, #128	; 0x80
 800112c:	4664      	mov	r4, ip
 800112e:	0436      	lsls	r6, r6, #16
 8001130:	4334      	orrs	r4, r6
 8001132:	46a4      	mov	ip, r4
 8001134:	2a38      	cmp	r2, #56	; 0x38
 8001136:	dd00      	ble.n	800113a <__aeabi_dsub+0x236>
 8001138:	e196      	b.n	8001468 <__aeabi_dsub+0x564>
 800113a:	2a1f      	cmp	r2, #31
 800113c:	dd00      	ble.n	8001140 <__aeabi_dsub+0x23c>
 800113e:	e224      	b.n	800158a <__aeabi_dsub+0x686>
 8001140:	2620      	movs	r6, #32
 8001142:	1ab4      	subs	r4, r6, r2
 8001144:	46a2      	mov	sl, r4
 8001146:	4664      	mov	r4, ip
 8001148:	4656      	mov	r6, sl
 800114a:	40b4      	lsls	r4, r6
 800114c:	46a1      	mov	r9, r4
 800114e:	001c      	movs	r4, r3
 8001150:	464e      	mov	r6, r9
 8001152:	40d4      	lsrs	r4, r2
 8001154:	4326      	orrs	r6, r4
 8001156:	0034      	movs	r4, r6
 8001158:	4656      	mov	r6, sl
 800115a:	40b3      	lsls	r3, r6
 800115c:	1e5e      	subs	r6, r3, #1
 800115e:	41b3      	sbcs	r3, r6
 8001160:	431c      	orrs	r4, r3
 8001162:	4663      	mov	r3, ip
 8001164:	40d3      	lsrs	r3, r2
 8001166:	18c9      	adds	r1, r1, r3
 8001168:	19e4      	adds	r4, r4, r7
 800116a:	42bc      	cmp	r4, r7
 800116c:	41bf      	sbcs	r7, r7
 800116e:	427f      	negs	r7, r7
 8001170:	46b9      	mov	r9, r7
 8001172:	4680      	mov	r8, r0
 8001174:	4489      	add	r9, r1
 8001176:	e0d8      	b.n	800132a <__aeabi_dsub+0x426>
 8001178:	4640      	mov	r0, r8
 800117a:	4c3b      	ldr	r4, [pc, #236]	; (8001268 <__aeabi_dsub+0x364>)
 800117c:	3001      	adds	r0, #1
 800117e:	4220      	tst	r0, r4
 8001180:	d000      	beq.n	8001184 <__aeabi_dsub+0x280>
 8001182:	e0b4      	b.n	80012ee <__aeabi_dsub+0x3ea>
 8001184:	4640      	mov	r0, r8
 8001186:	2800      	cmp	r0, #0
 8001188:	d000      	beq.n	800118c <__aeabi_dsub+0x288>
 800118a:	e144      	b.n	8001416 <__aeabi_dsub+0x512>
 800118c:	4660      	mov	r0, ip
 800118e:	4318      	orrs	r0, r3
 8001190:	d100      	bne.n	8001194 <__aeabi_dsub+0x290>
 8001192:	e190      	b.n	80014b6 <__aeabi_dsub+0x5b2>
 8001194:	0008      	movs	r0, r1
 8001196:	4338      	orrs	r0, r7
 8001198:	d000      	beq.n	800119c <__aeabi_dsub+0x298>
 800119a:	e1aa      	b.n	80014f2 <__aeabi_dsub+0x5ee>
 800119c:	4661      	mov	r1, ip
 800119e:	08db      	lsrs	r3, r3, #3
 80011a0:	0749      	lsls	r1, r1, #29
 80011a2:	430b      	orrs	r3, r1
 80011a4:	4661      	mov	r1, ip
 80011a6:	08cc      	lsrs	r4, r1, #3
 80011a8:	e027      	b.n	80011fa <__aeabi_dsub+0x2f6>
 80011aa:	0008      	movs	r0, r1
 80011ac:	4338      	orrs	r0, r7
 80011ae:	d061      	beq.n	8001274 <__aeabi_dsub+0x370>
 80011b0:	1e50      	subs	r0, r2, #1
 80011b2:	2a01      	cmp	r2, #1
 80011b4:	d100      	bne.n	80011b8 <__aeabi_dsub+0x2b4>
 80011b6:	e139      	b.n	800142c <__aeabi_dsub+0x528>
 80011b8:	42a2      	cmp	r2, r4
 80011ba:	d027      	beq.n	800120c <__aeabi_dsub+0x308>
 80011bc:	0002      	movs	r2, r0
 80011be:	e75d      	b.n	800107c <__aeabi_dsub+0x178>
 80011c0:	0002      	movs	r2, r0
 80011c2:	391f      	subs	r1, #31
 80011c4:	40ca      	lsrs	r2, r1
 80011c6:	0011      	movs	r1, r2
 80011c8:	2b20      	cmp	r3, #32
 80011ca:	d003      	beq.n	80011d4 <__aeabi_dsub+0x2d0>
 80011cc:	2240      	movs	r2, #64	; 0x40
 80011ce:	1ad3      	subs	r3, r2, r3
 80011d0:	4098      	lsls	r0, r3
 80011d2:	4304      	orrs	r4, r0
 80011d4:	1e63      	subs	r3, r4, #1
 80011d6:	419c      	sbcs	r4, r3
 80011d8:	2300      	movs	r3, #0
 80011da:	4699      	mov	r9, r3
 80011dc:	4698      	mov	r8, r3
 80011de:	430c      	orrs	r4, r1
 80011e0:	0763      	lsls	r3, r4, #29
 80011e2:	d000      	beq.n	80011e6 <__aeabi_dsub+0x2e2>
 80011e4:	e712      	b.n	800100c <__aeabi_dsub+0x108>
 80011e6:	464b      	mov	r3, r9
 80011e8:	464a      	mov	r2, r9
 80011ea:	08e4      	lsrs	r4, r4, #3
 80011ec:	075b      	lsls	r3, r3, #29
 80011ee:	4323      	orrs	r3, r4
 80011f0:	08d4      	lsrs	r4, r2, #3
 80011f2:	4642      	mov	r2, r8
 80011f4:	4919      	ldr	r1, [pc, #100]	; (800125c <__aeabi_dsub+0x358>)
 80011f6:	428a      	cmp	r2, r1
 80011f8:	d00e      	beq.n	8001218 <__aeabi_dsub+0x314>
 80011fa:	0324      	lsls	r4, r4, #12
 80011fc:	0552      	lsls	r2, r2, #21
 80011fe:	0b24      	lsrs	r4, r4, #12
 8001200:	0d52      	lsrs	r2, r2, #21
 8001202:	e722      	b.n	800104a <__aeabi_dsub+0x146>
 8001204:	000a      	movs	r2, r1
 8001206:	2400      	movs	r4, #0
 8001208:	2300      	movs	r3, #0
 800120a:	e71e      	b.n	800104a <__aeabi_dsub+0x146>
 800120c:	08db      	lsrs	r3, r3, #3
 800120e:	4662      	mov	r2, ip
 8001210:	0752      	lsls	r2, r2, #29
 8001212:	4313      	orrs	r3, r2
 8001214:	4662      	mov	r2, ip
 8001216:	08d4      	lsrs	r4, r2, #3
 8001218:	001a      	movs	r2, r3
 800121a:	4322      	orrs	r2, r4
 800121c:	d100      	bne.n	8001220 <__aeabi_dsub+0x31c>
 800121e:	e1fc      	b.n	800161a <__aeabi_dsub+0x716>
 8001220:	2280      	movs	r2, #128	; 0x80
 8001222:	0312      	lsls	r2, r2, #12
 8001224:	4314      	orrs	r4, r2
 8001226:	0324      	lsls	r4, r4, #12
 8001228:	4a0c      	ldr	r2, [pc, #48]	; (800125c <__aeabi_dsub+0x358>)
 800122a:	0b24      	lsrs	r4, r4, #12
 800122c:	e70d      	b.n	800104a <__aeabi_dsub+0x146>
 800122e:	0020      	movs	r0, r4
 8001230:	f000 fa94 	bl	800175c <__clzsi2>
 8001234:	0001      	movs	r1, r0
 8001236:	3118      	adds	r1, #24
 8001238:	291f      	cmp	r1, #31
 800123a:	dc00      	bgt.n	800123e <__aeabi_dsub+0x33a>
 800123c:	e6c4      	b.n	8000fc8 <__aeabi_dsub+0xc4>
 800123e:	3808      	subs	r0, #8
 8001240:	4084      	lsls	r4, r0
 8001242:	4643      	mov	r3, r8
 8001244:	0020      	movs	r0, r4
 8001246:	2400      	movs	r4, #0
 8001248:	4588      	cmp	r8, r1
 800124a:	dc00      	bgt.n	800124e <__aeabi_dsub+0x34a>
 800124c:	e6c8      	b.n	8000fe0 <__aeabi_dsub+0xdc>
 800124e:	4a04      	ldr	r2, [pc, #16]	; (8001260 <__aeabi_dsub+0x35c>)
 8001250:	1a5b      	subs	r3, r3, r1
 8001252:	4010      	ands	r0, r2
 8001254:	4698      	mov	r8, r3
 8001256:	4681      	mov	r9, r0
 8001258:	e6d6      	b.n	8001008 <__aeabi_dsub+0x104>
 800125a:	46c0      	nop			; (mov r8, r8)
 800125c:	000007ff 	.word	0x000007ff
 8001260:	ff7fffff 	.word	0xff7fffff
 8001264:	fffff801 	.word	0xfffff801
 8001268:	000007fe 	.word	0x000007fe
 800126c:	430f      	orrs	r7, r1
 800126e:	1e7a      	subs	r2, r7, #1
 8001270:	4197      	sbcs	r7, r2
 8001272:	e691      	b.n	8000f98 <__aeabi_dsub+0x94>
 8001274:	4661      	mov	r1, ip
 8001276:	08db      	lsrs	r3, r3, #3
 8001278:	0749      	lsls	r1, r1, #29
 800127a:	430b      	orrs	r3, r1
 800127c:	4661      	mov	r1, ip
 800127e:	08cc      	lsrs	r4, r1, #3
 8001280:	e7b8      	b.n	80011f4 <__aeabi_dsub+0x2f0>
 8001282:	4640      	mov	r0, r8
 8001284:	4cd3      	ldr	r4, [pc, #844]	; (80015d4 <__aeabi_dsub+0x6d0>)
 8001286:	3001      	adds	r0, #1
 8001288:	4220      	tst	r0, r4
 800128a:	d000      	beq.n	800128e <__aeabi_dsub+0x38a>
 800128c:	e0a2      	b.n	80013d4 <__aeabi_dsub+0x4d0>
 800128e:	4640      	mov	r0, r8
 8001290:	2800      	cmp	r0, #0
 8001292:	d000      	beq.n	8001296 <__aeabi_dsub+0x392>
 8001294:	e101      	b.n	800149a <__aeabi_dsub+0x596>
 8001296:	4660      	mov	r0, ip
 8001298:	4318      	orrs	r0, r3
 800129a:	d100      	bne.n	800129e <__aeabi_dsub+0x39a>
 800129c:	e15e      	b.n	800155c <__aeabi_dsub+0x658>
 800129e:	0008      	movs	r0, r1
 80012a0:	4338      	orrs	r0, r7
 80012a2:	d000      	beq.n	80012a6 <__aeabi_dsub+0x3a2>
 80012a4:	e15f      	b.n	8001566 <__aeabi_dsub+0x662>
 80012a6:	4661      	mov	r1, ip
 80012a8:	08db      	lsrs	r3, r3, #3
 80012aa:	0749      	lsls	r1, r1, #29
 80012ac:	430b      	orrs	r3, r1
 80012ae:	4661      	mov	r1, ip
 80012b0:	08cc      	lsrs	r4, r1, #3
 80012b2:	e7a2      	b.n	80011fa <__aeabi_dsub+0x2f6>
 80012b4:	4dc8      	ldr	r5, [pc, #800]	; (80015d8 <__aeabi_dsub+0x6d4>)
 80012b6:	42a8      	cmp	r0, r5
 80012b8:	d100      	bne.n	80012bc <__aeabi_dsub+0x3b8>
 80012ba:	e0cf      	b.n	800145c <__aeabi_dsub+0x558>
 80012bc:	2580      	movs	r5, #128	; 0x80
 80012be:	4664      	mov	r4, ip
 80012c0:	042d      	lsls	r5, r5, #16
 80012c2:	432c      	orrs	r4, r5
 80012c4:	46a4      	mov	ip, r4
 80012c6:	2a38      	cmp	r2, #56	; 0x38
 80012c8:	dc56      	bgt.n	8001378 <__aeabi_dsub+0x474>
 80012ca:	2a1f      	cmp	r2, #31
 80012cc:	dd00      	ble.n	80012d0 <__aeabi_dsub+0x3cc>
 80012ce:	e0d1      	b.n	8001474 <__aeabi_dsub+0x570>
 80012d0:	2520      	movs	r5, #32
 80012d2:	001e      	movs	r6, r3
 80012d4:	1aad      	subs	r5, r5, r2
 80012d6:	4664      	mov	r4, ip
 80012d8:	40ab      	lsls	r3, r5
 80012da:	40ac      	lsls	r4, r5
 80012dc:	40d6      	lsrs	r6, r2
 80012de:	1e5d      	subs	r5, r3, #1
 80012e0:	41ab      	sbcs	r3, r5
 80012e2:	4334      	orrs	r4, r6
 80012e4:	4323      	orrs	r3, r4
 80012e6:	4664      	mov	r4, ip
 80012e8:	40d4      	lsrs	r4, r2
 80012ea:	1b09      	subs	r1, r1, r4
 80012ec:	e049      	b.n	8001382 <__aeabi_dsub+0x47e>
 80012ee:	4660      	mov	r0, ip
 80012f0:	1bdc      	subs	r4, r3, r7
 80012f2:	1a46      	subs	r6, r0, r1
 80012f4:	42a3      	cmp	r3, r4
 80012f6:	4180      	sbcs	r0, r0
 80012f8:	4240      	negs	r0, r0
 80012fa:	4681      	mov	r9, r0
 80012fc:	0030      	movs	r0, r6
 80012fe:	464e      	mov	r6, r9
 8001300:	1b80      	subs	r0, r0, r6
 8001302:	4681      	mov	r9, r0
 8001304:	0200      	lsls	r0, r0, #8
 8001306:	d476      	bmi.n	80013f6 <__aeabi_dsub+0x4f2>
 8001308:	464b      	mov	r3, r9
 800130a:	4323      	orrs	r3, r4
 800130c:	d000      	beq.n	8001310 <__aeabi_dsub+0x40c>
 800130e:	e652      	b.n	8000fb6 <__aeabi_dsub+0xb2>
 8001310:	2400      	movs	r4, #0
 8001312:	2500      	movs	r5, #0
 8001314:	e771      	b.n	80011fa <__aeabi_dsub+0x2f6>
 8001316:	4339      	orrs	r1, r7
 8001318:	000c      	movs	r4, r1
 800131a:	1e62      	subs	r2, r4, #1
 800131c:	4194      	sbcs	r4, r2
 800131e:	18e4      	adds	r4, r4, r3
 8001320:	429c      	cmp	r4, r3
 8001322:	419b      	sbcs	r3, r3
 8001324:	425b      	negs	r3, r3
 8001326:	4463      	add	r3, ip
 8001328:	4699      	mov	r9, r3
 800132a:	464b      	mov	r3, r9
 800132c:	021b      	lsls	r3, r3, #8
 800132e:	d400      	bmi.n	8001332 <__aeabi_dsub+0x42e>
 8001330:	e756      	b.n	80011e0 <__aeabi_dsub+0x2dc>
 8001332:	2301      	movs	r3, #1
 8001334:	469c      	mov	ip, r3
 8001336:	4ba8      	ldr	r3, [pc, #672]	; (80015d8 <__aeabi_dsub+0x6d4>)
 8001338:	44e0      	add	r8, ip
 800133a:	4598      	cmp	r8, r3
 800133c:	d038      	beq.n	80013b0 <__aeabi_dsub+0x4ac>
 800133e:	464b      	mov	r3, r9
 8001340:	48a6      	ldr	r0, [pc, #664]	; (80015dc <__aeabi_dsub+0x6d8>)
 8001342:	2201      	movs	r2, #1
 8001344:	4003      	ands	r3, r0
 8001346:	0018      	movs	r0, r3
 8001348:	0863      	lsrs	r3, r4, #1
 800134a:	4014      	ands	r4, r2
 800134c:	431c      	orrs	r4, r3
 800134e:	07c3      	lsls	r3, r0, #31
 8001350:	431c      	orrs	r4, r3
 8001352:	0843      	lsrs	r3, r0, #1
 8001354:	4699      	mov	r9, r3
 8001356:	e657      	b.n	8001008 <__aeabi_dsub+0x104>
 8001358:	0010      	movs	r0, r2
 800135a:	000e      	movs	r6, r1
 800135c:	3820      	subs	r0, #32
 800135e:	40c6      	lsrs	r6, r0
 8001360:	2a20      	cmp	r2, #32
 8001362:	d004      	beq.n	800136e <__aeabi_dsub+0x46a>
 8001364:	2040      	movs	r0, #64	; 0x40
 8001366:	1a82      	subs	r2, r0, r2
 8001368:	4091      	lsls	r1, r2
 800136a:	430f      	orrs	r7, r1
 800136c:	46b9      	mov	r9, r7
 800136e:	464f      	mov	r7, r9
 8001370:	1e7a      	subs	r2, r7, #1
 8001372:	4197      	sbcs	r7, r2
 8001374:	4337      	orrs	r7, r6
 8001376:	e60f      	b.n	8000f98 <__aeabi_dsub+0x94>
 8001378:	4662      	mov	r2, ip
 800137a:	431a      	orrs	r2, r3
 800137c:	0013      	movs	r3, r2
 800137e:	1e5a      	subs	r2, r3, #1
 8001380:	4193      	sbcs	r3, r2
 8001382:	1afc      	subs	r4, r7, r3
 8001384:	42a7      	cmp	r7, r4
 8001386:	41bf      	sbcs	r7, r7
 8001388:	427f      	negs	r7, r7
 800138a:	1bcb      	subs	r3, r1, r7
 800138c:	4699      	mov	r9, r3
 800138e:	465d      	mov	r5, fp
 8001390:	4680      	mov	r8, r0
 8001392:	e608      	b.n	8000fa6 <__aeabi_dsub+0xa2>
 8001394:	4666      	mov	r6, ip
 8001396:	431e      	orrs	r6, r3
 8001398:	d100      	bne.n	800139c <__aeabi_dsub+0x498>
 800139a:	e0be      	b.n	800151a <__aeabi_dsub+0x616>
 800139c:	1e56      	subs	r6, r2, #1
 800139e:	2a01      	cmp	r2, #1
 80013a0:	d100      	bne.n	80013a4 <__aeabi_dsub+0x4a0>
 80013a2:	e109      	b.n	80015b8 <__aeabi_dsub+0x6b4>
 80013a4:	4c8c      	ldr	r4, [pc, #560]	; (80015d8 <__aeabi_dsub+0x6d4>)
 80013a6:	42a2      	cmp	r2, r4
 80013a8:	d100      	bne.n	80013ac <__aeabi_dsub+0x4a8>
 80013aa:	e119      	b.n	80015e0 <__aeabi_dsub+0x6dc>
 80013ac:	0032      	movs	r2, r6
 80013ae:	e6c1      	b.n	8001134 <__aeabi_dsub+0x230>
 80013b0:	4642      	mov	r2, r8
 80013b2:	2400      	movs	r4, #0
 80013b4:	2300      	movs	r3, #0
 80013b6:	e648      	b.n	800104a <__aeabi_dsub+0x146>
 80013b8:	2020      	movs	r0, #32
 80013ba:	000c      	movs	r4, r1
 80013bc:	1a80      	subs	r0, r0, r2
 80013be:	003e      	movs	r6, r7
 80013c0:	4087      	lsls	r7, r0
 80013c2:	4084      	lsls	r4, r0
 80013c4:	40d6      	lsrs	r6, r2
 80013c6:	1e78      	subs	r0, r7, #1
 80013c8:	4187      	sbcs	r7, r0
 80013ca:	40d1      	lsrs	r1, r2
 80013cc:	4334      	orrs	r4, r6
 80013ce:	433c      	orrs	r4, r7
 80013d0:	448c      	add	ip, r1
 80013d2:	e7a4      	b.n	800131e <__aeabi_dsub+0x41a>
 80013d4:	4a80      	ldr	r2, [pc, #512]	; (80015d8 <__aeabi_dsub+0x6d4>)
 80013d6:	4290      	cmp	r0, r2
 80013d8:	d100      	bne.n	80013dc <__aeabi_dsub+0x4d8>
 80013da:	e0e9      	b.n	80015b0 <__aeabi_dsub+0x6ac>
 80013dc:	19df      	adds	r7, r3, r7
 80013de:	429f      	cmp	r7, r3
 80013e0:	419b      	sbcs	r3, r3
 80013e2:	4461      	add	r1, ip
 80013e4:	425b      	negs	r3, r3
 80013e6:	18c9      	adds	r1, r1, r3
 80013e8:	07cc      	lsls	r4, r1, #31
 80013ea:	087f      	lsrs	r7, r7, #1
 80013ec:	084b      	lsrs	r3, r1, #1
 80013ee:	4699      	mov	r9, r3
 80013f0:	4680      	mov	r8, r0
 80013f2:	433c      	orrs	r4, r7
 80013f4:	e6f4      	b.n	80011e0 <__aeabi_dsub+0x2dc>
 80013f6:	1afc      	subs	r4, r7, r3
 80013f8:	42a7      	cmp	r7, r4
 80013fa:	41bf      	sbcs	r7, r7
 80013fc:	4663      	mov	r3, ip
 80013fe:	427f      	negs	r7, r7
 8001400:	1ac9      	subs	r1, r1, r3
 8001402:	1bcb      	subs	r3, r1, r7
 8001404:	4699      	mov	r9, r3
 8001406:	465d      	mov	r5, fp
 8001408:	e5d5      	b.n	8000fb6 <__aeabi_dsub+0xb2>
 800140a:	08ff      	lsrs	r7, r7, #3
 800140c:	074b      	lsls	r3, r1, #29
 800140e:	465d      	mov	r5, fp
 8001410:	433b      	orrs	r3, r7
 8001412:	08cc      	lsrs	r4, r1, #3
 8001414:	e6ee      	b.n	80011f4 <__aeabi_dsub+0x2f0>
 8001416:	4662      	mov	r2, ip
 8001418:	431a      	orrs	r2, r3
 800141a:	d000      	beq.n	800141e <__aeabi_dsub+0x51a>
 800141c:	e082      	b.n	8001524 <__aeabi_dsub+0x620>
 800141e:	000b      	movs	r3, r1
 8001420:	433b      	orrs	r3, r7
 8001422:	d11b      	bne.n	800145c <__aeabi_dsub+0x558>
 8001424:	2480      	movs	r4, #128	; 0x80
 8001426:	2500      	movs	r5, #0
 8001428:	0324      	lsls	r4, r4, #12
 800142a:	e6f9      	b.n	8001220 <__aeabi_dsub+0x31c>
 800142c:	19dc      	adds	r4, r3, r7
 800142e:	429c      	cmp	r4, r3
 8001430:	419b      	sbcs	r3, r3
 8001432:	4461      	add	r1, ip
 8001434:	4689      	mov	r9, r1
 8001436:	425b      	negs	r3, r3
 8001438:	4499      	add	r9, r3
 800143a:	464b      	mov	r3, r9
 800143c:	021b      	lsls	r3, r3, #8
 800143e:	d444      	bmi.n	80014ca <__aeabi_dsub+0x5c6>
 8001440:	2301      	movs	r3, #1
 8001442:	4698      	mov	r8, r3
 8001444:	e6cc      	b.n	80011e0 <__aeabi_dsub+0x2dc>
 8001446:	1bdc      	subs	r4, r3, r7
 8001448:	4662      	mov	r2, ip
 800144a:	42a3      	cmp	r3, r4
 800144c:	419b      	sbcs	r3, r3
 800144e:	1a51      	subs	r1, r2, r1
 8001450:	425b      	negs	r3, r3
 8001452:	1acb      	subs	r3, r1, r3
 8001454:	4699      	mov	r9, r3
 8001456:	2301      	movs	r3, #1
 8001458:	4698      	mov	r8, r3
 800145a:	e5a4      	b.n	8000fa6 <__aeabi_dsub+0xa2>
 800145c:	08ff      	lsrs	r7, r7, #3
 800145e:	074b      	lsls	r3, r1, #29
 8001460:	465d      	mov	r5, fp
 8001462:	433b      	orrs	r3, r7
 8001464:	08cc      	lsrs	r4, r1, #3
 8001466:	e6d7      	b.n	8001218 <__aeabi_dsub+0x314>
 8001468:	4662      	mov	r2, ip
 800146a:	431a      	orrs	r2, r3
 800146c:	0014      	movs	r4, r2
 800146e:	1e63      	subs	r3, r4, #1
 8001470:	419c      	sbcs	r4, r3
 8001472:	e679      	b.n	8001168 <__aeabi_dsub+0x264>
 8001474:	0015      	movs	r5, r2
 8001476:	4664      	mov	r4, ip
 8001478:	3d20      	subs	r5, #32
 800147a:	40ec      	lsrs	r4, r5
 800147c:	46a0      	mov	r8, r4
 800147e:	2a20      	cmp	r2, #32
 8001480:	d005      	beq.n	800148e <__aeabi_dsub+0x58a>
 8001482:	2540      	movs	r5, #64	; 0x40
 8001484:	4664      	mov	r4, ip
 8001486:	1aaa      	subs	r2, r5, r2
 8001488:	4094      	lsls	r4, r2
 800148a:	4323      	orrs	r3, r4
 800148c:	469a      	mov	sl, r3
 800148e:	4654      	mov	r4, sl
 8001490:	1e63      	subs	r3, r4, #1
 8001492:	419c      	sbcs	r4, r3
 8001494:	4643      	mov	r3, r8
 8001496:	4323      	orrs	r3, r4
 8001498:	e773      	b.n	8001382 <__aeabi_dsub+0x47e>
 800149a:	4662      	mov	r2, ip
 800149c:	431a      	orrs	r2, r3
 800149e:	d023      	beq.n	80014e8 <__aeabi_dsub+0x5e4>
 80014a0:	000a      	movs	r2, r1
 80014a2:	433a      	orrs	r2, r7
 80014a4:	d000      	beq.n	80014a8 <__aeabi_dsub+0x5a4>
 80014a6:	e0a0      	b.n	80015ea <__aeabi_dsub+0x6e6>
 80014a8:	4662      	mov	r2, ip
 80014aa:	08db      	lsrs	r3, r3, #3
 80014ac:	0752      	lsls	r2, r2, #29
 80014ae:	4313      	orrs	r3, r2
 80014b0:	4662      	mov	r2, ip
 80014b2:	08d4      	lsrs	r4, r2, #3
 80014b4:	e6b0      	b.n	8001218 <__aeabi_dsub+0x314>
 80014b6:	000b      	movs	r3, r1
 80014b8:	433b      	orrs	r3, r7
 80014ba:	d100      	bne.n	80014be <__aeabi_dsub+0x5ba>
 80014bc:	e728      	b.n	8001310 <__aeabi_dsub+0x40c>
 80014be:	08ff      	lsrs	r7, r7, #3
 80014c0:	074b      	lsls	r3, r1, #29
 80014c2:	465d      	mov	r5, fp
 80014c4:	433b      	orrs	r3, r7
 80014c6:	08cc      	lsrs	r4, r1, #3
 80014c8:	e697      	b.n	80011fa <__aeabi_dsub+0x2f6>
 80014ca:	2302      	movs	r3, #2
 80014cc:	4698      	mov	r8, r3
 80014ce:	e736      	b.n	800133e <__aeabi_dsub+0x43a>
 80014d0:	1afc      	subs	r4, r7, r3
 80014d2:	42a7      	cmp	r7, r4
 80014d4:	41bf      	sbcs	r7, r7
 80014d6:	4663      	mov	r3, ip
 80014d8:	427f      	negs	r7, r7
 80014da:	1ac9      	subs	r1, r1, r3
 80014dc:	1bcb      	subs	r3, r1, r7
 80014de:	4699      	mov	r9, r3
 80014e0:	2301      	movs	r3, #1
 80014e2:	465d      	mov	r5, fp
 80014e4:	4698      	mov	r8, r3
 80014e6:	e55e      	b.n	8000fa6 <__aeabi_dsub+0xa2>
 80014e8:	074b      	lsls	r3, r1, #29
 80014ea:	08ff      	lsrs	r7, r7, #3
 80014ec:	433b      	orrs	r3, r7
 80014ee:	08cc      	lsrs	r4, r1, #3
 80014f0:	e692      	b.n	8001218 <__aeabi_dsub+0x314>
 80014f2:	1bdc      	subs	r4, r3, r7
 80014f4:	4660      	mov	r0, ip
 80014f6:	42a3      	cmp	r3, r4
 80014f8:	41b6      	sbcs	r6, r6
 80014fa:	1a40      	subs	r0, r0, r1
 80014fc:	4276      	negs	r6, r6
 80014fe:	1b80      	subs	r0, r0, r6
 8001500:	4681      	mov	r9, r0
 8001502:	0200      	lsls	r0, r0, #8
 8001504:	d560      	bpl.n	80015c8 <__aeabi_dsub+0x6c4>
 8001506:	1afc      	subs	r4, r7, r3
 8001508:	42a7      	cmp	r7, r4
 800150a:	41bf      	sbcs	r7, r7
 800150c:	4663      	mov	r3, ip
 800150e:	427f      	negs	r7, r7
 8001510:	1ac9      	subs	r1, r1, r3
 8001512:	1bcb      	subs	r3, r1, r7
 8001514:	4699      	mov	r9, r3
 8001516:	465d      	mov	r5, fp
 8001518:	e576      	b.n	8001008 <__aeabi_dsub+0x104>
 800151a:	08ff      	lsrs	r7, r7, #3
 800151c:	074b      	lsls	r3, r1, #29
 800151e:	433b      	orrs	r3, r7
 8001520:	08cc      	lsrs	r4, r1, #3
 8001522:	e667      	b.n	80011f4 <__aeabi_dsub+0x2f0>
 8001524:	000a      	movs	r2, r1
 8001526:	08db      	lsrs	r3, r3, #3
 8001528:	433a      	orrs	r2, r7
 800152a:	d100      	bne.n	800152e <__aeabi_dsub+0x62a>
 800152c:	e66f      	b.n	800120e <__aeabi_dsub+0x30a>
 800152e:	4662      	mov	r2, ip
 8001530:	0752      	lsls	r2, r2, #29
 8001532:	4313      	orrs	r3, r2
 8001534:	4662      	mov	r2, ip
 8001536:	08d4      	lsrs	r4, r2, #3
 8001538:	2280      	movs	r2, #128	; 0x80
 800153a:	0312      	lsls	r2, r2, #12
 800153c:	4214      	tst	r4, r2
 800153e:	d007      	beq.n	8001550 <__aeabi_dsub+0x64c>
 8001540:	08c8      	lsrs	r0, r1, #3
 8001542:	4210      	tst	r0, r2
 8001544:	d104      	bne.n	8001550 <__aeabi_dsub+0x64c>
 8001546:	465d      	mov	r5, fp
 8001548:	0004      	movs	r4, r0
 800154a:	08fb      	lsrs	r3, r7, #3
 800154c:	0749      	lsls	r1, r1, #29
 800154e:	430b      	orrs	r3, r1
 8001550:	0f5a      	lsrs	r2, r3, #29
 8001552:	00db      	lsls	r3, r3, #3
 8001554:	08db      	lsrs	r3, r3, #3
 8001556:	0752      	lsls	r2, r2, #29
 8001558:	4313      	orrs	r3, r2
 800155a:	e65d      	b.n	8001218 <__aeabi_dsub+0x314>
 800155c:	074b      	lsls	r3, r1, #29
 800155e:	08ff      	lsrs	r7, r7, #3
 8001560:	433b      	orrs	r3, r7
 8001562:	08cc      	lsrs	r4, r1, #3
 8001564:	e649      	b.n	80011fa <__aeabi_dsub+0x2f6>
 8001566:	19dc      	adds	r4, r3, r7
 8001568:	429c      	cmp	r4, r3
 800156a:	419b      	sbcs	r3, r3
 800156c:	4461      	add	r1, ip
 800156e:	4689      	mov	r9, r1
 8001570:	425b      	negs	r3, r3
 8001572:	4499      	add	r9, r3
 8001574:	464b      	mov	r3, r9
 8001576:	021b      	lsls	r3, r3, #8
 8001578:	d400      	bmi.n	800157c <__aeabi_dsub+0x678>
 800157a:	e631      	b.n	80011e0 <__aeabi_dsub+0x2dc>
 800157c:	464a      	mov	r2, r9
 800157e:	4b17      	ldr	r3, [pc, #92]	; (80015dc <__aeabi_dsub+0x6d8>)
 8001580:	401a      	ands	r2, r3
 8001582:	2301      	movs	r3, #1
 8001584:	4691      	mov	r9, r2
 8001586:	4698      	mov	r8, r3
 8001588:	e62a      	b.n	80011e0 <__aeabi_dsub+0x2dc>
 800158a:	0016      	movs	r6, r2
 800158c:	4664      	mov	r4, ip
 800158e:	3e20      	subs	r6, #32
 8001590:	40f4      	lsrs	r4, r6
 8001592:	46a0      	mov	r8, r4
 8001594:	2a20      	cmp	r2, #32
 8001596:	d005      	beq.n	80015a4 <__aeabi_dsub+0x6a0>
 8001598:	2640      	movs	r6, #64	; 0x40
 800159a:	4664      	mov	r4, ip
 800159c:	1ab2      	subs	r2, r6, r2
 800159e:	4094      	lsls	r4, r2
 80015a0:	4323      	orrs	r3, r4
 80015a2:	469a      	mov	sl, r3
 80015a4:	4654      	mov	r4, sl
 80015a6:	1e63      	subs	r3, r4, #1
 80015a8:	419c      	sbcs	r4, r3
 80015aa:	4643      	mov	r3, r8
 80015ac:	431c      	orrs	r4, r3
 80015ae:	e5db      	b.n	8001168 <__aeabi_dsub+0x264>
 80015b0:	0002      	movs	r2, r0
 80015b2:	2400      	movs	r4, #0
 80015b4:	2300      	movs	r3, #0
 80015b6:	e548      	b.n	800104a <__aeabi_dsub+0x146>
 80015b8:	19dc      	adds	r4, r3, r7
 80015ba:	42bc      	cmp	r4, r7
 80015bc:	41bf      	sbcs	r7, r7
 80015be:	4461      	add	r1, ip
 80015c0:	4689      	mov	r9, r1
 80015c2:	427f      	negs	r7, r7
 80015c4:	44b9      	add	r9, r7
 80015c6:	e738      	b.n	800143a <__aeabi_dsub+0x536>
 80015c8:	464b      	mov	r3, r9
 80015ca:	4323      	orrs	r3, r4
 80015cc:	d100      	bne.n	80015d0 <__aeabi_dsub+0x6cc>
 80015ce:	e69f      	b.n	8001310 <__aeabi_dsub+0x40c>
 80015d0:	e606      	b.n	80011e0 <__aeabi_dsub+0x2dc>
 80015d2:	46c0      	nop			; (mov r8, r8)
 80015d4:	000007fe 	.word	0x000007fe
 80015d8:	000007ff 	.word	0x000007ff
 80015dc:	ff7fffff 	.word	0xff7fffff
 80015e0:	08ff      	lsrs	r7, r7, #3
 80015e2:	074b      	lsls	r3, r1, #29
 80015e4:	433b      	orrs	r3, r7
 80015e6:	08cc      	lsrs	r4, r1, #3
 80015e8:	e616      	b.n	8001218 <__aeabi_dsub+0x314>
 80015ea:	4662      	mov	r2, ip
 80015ec:	08db      	lsrs	r3, r3, #3
 80015ee:	0752      	lsls	r2, r2, #29
 80015f0:	4313      	orrs	r3, r2
 80015f2:	4662      	mov	r2, ip
 80015f4:	08d4      	lsrs	r4, r2, #3
 80015f6:	2280      	movs	r2, #128	; 0x80
 80015f8:	0312      	lsls	r2, r2, #12
 80015fa:	4214      	tst	r4, r2
 80015fc:	d007      	beq.n	800160e <__aeabi_dsub+0x70a>
 80015fe:	08c8      	lsrs	r0, r1, #3
 8001600:	4210      	tst	r0, r2
 8001602:	d104      	bne.n	800160e <__aeabi_dsub+0x70a>
 8001604:	465d      	mov	r5, fp
 8001606:	0004      	movs	r4, r0
 8001608:	08fb      	lsrs	r3, r7, #3
 800160a:	0749      	lsls	r1, r1, #29
 800160c:	430b      	orrs	r3, r1
 800160e:	0f5a      	lsrs	r2, r3, #29
 8001610:	00db      	lsls	r3, r3, #3
 8001612:	0752      	lsls	r2, r2, #29
 8001614:	08db      	lsrs	r3, r3, #3
 8001616:	4313      	orrs	r3, r2
 8001618:	e5fe      	b.n	8001218 <__aeabi_dsub+0x314>
 800161a:	2300      	movs	r3, #0
 800161c:	4a01      	ldr	r2, [pc, #4]	; (8001624 <__aeabi_dsub+0x720>)
 800161e:	001c      	movs	r4, r3
 8001620:	e513      	b.n	800104a <__aeabi_dsub+0x146>
 8001622:	46c0      	nop			; (mov r8, r8)
 8001624:	000007ff 	.word	0x000007ff

08001628 <__aeabi_d2iz>:
 8001628:	000a      	movs	r2, r1
 800162a:	b530      	push	{r4, r5, lr}
 800162c:	4c13      	ldr	r4, [pc, #76]	; (800167c <__aeabi_d2iz+0x54>)
 800162e:	0053      	lsls	r3, r2, #1
 8001630:	0309      	lsls	r1, r1, #12
 8001632:	0005      	movs	r5, r0
 8001634:	0b09      	lsrs	r1, r1, #12
 8001636:	2000      	movs	r0, #0
 8001638:	0d5b      	lsrs	r3, r3, #21
 800163a:	0fd2      	lsrs	r2, r2, #31
 800163c:	42a3      	cmp	r3, r4
 800163e:	dd04      	ble.n	800164a <__aeabi_d2iz+0x22>
 8001640:	480f      	ldr	r0, [pc, #60]	; (8001680 <__aeabi_d2iz+0x58>)
 8001642:	4283      	cmp	r3, r0
 8001644:	dd02      	ble.n	800164c <__aeabi_d2iz+0x24>
 8001646:	4b0f      	ldr	r3, [pc, #60]	; (8001684 <__aeabi_d2iz+0x5c>)
 8001648:	18d0      	adds	r0, r2, r3
 800164a:	bd30      	pop	{r4, r5, pc}
 800164c:	2080      	movs	r0, #128	; 0x80
 800164e:	0340      	lsls	r0, r0, #13
 8001650:	4301      	orrs	r1, r0
 8001652:	480d      	ldr	r0, [pc, #52]	; (8001688 <__aeabi_d2iz+0x60>)
 8001654:	1ac0      	subs	r0, r0, r3
 8001656:	281f      	cmp	r0, #31
 8001658:	dd08      	ble.n	800166c <__aeabi_d2iz+0x44>
 800165a:	480c      	ldr	r0, [pc, #48]	; (800168c <__aeabi_d2iz+0x64>)
 800165c:	1ac3      	subs	r3, r0, r3
 800165e:	40d9      	lsrs	r1, r3
 8001660:	000b      	movs	r3, r1
 8001662:	4258      	negs	r0, r3
 8001664:	2a00      	cmp	r2, #0
 8001666:	d1f0      	bne.n	800164a <__aeabi_d2iz+0x22>
 8001668:	0018      	movs	r0, r3
 800166a:	e7ee      	b.n	800164a <__aeabi_d2iz+0x22>
 800166c:	4c08      	ldr	r4, [pc, #32]	; (8001690 <__aeabi_d2iz+0x68>)
 800166e:	40c5      	lsrs	r5, r0
 8001670:	46a4      	mov	ip, r4
 8001672:	4463      	add	r3, ip
 8001674:	4099      	lsls	r1, r3
 8001676:	000b      	movs	r3, r1
 8001678:	432b      	orrs	r3, r5
 800167a:	e7f2      	b.n	8001662 <__aeabi_d2iz+0x3a>
 800167c:	000003fe 	.word	0x000003fe
 8001680:	0000041d 	.word	0x0000041d
 8001684:	7fffffff 	.word	0x7fffffff
 8001688:	00000433 	.word	0x00000433
 800168c:	00000413 	.word	0x00000413
 8001690:	fffffbed 	.word	0xfffffbed

08001694 <__aeabi_ui2d>:
 8001694:	b510      	push	{r4, lr}
 8001696:	1e04      	subs	r4, r0, #0
 8001698:	d010      	beq.n	80016bc <__aeabi_ui2d+0x28>
 800169a:	f000 f85f 	bl	800175c <__clzsi2>
 800169e:	4b0f      	ldr	r3, [pc, #60]	; (80016dc <__aeabi_ui2d+0x48>)
 80016a0:	1a1b      	subs	r3, r3, r0
 80016a2:	280a      	cmp	r0, #10
 80016a4:	dc11      	bgt.n	80016ca <__aeabi_ui2d+0x36>
 80016a6:	220b      	movs	r2, #11
 80016a8:	0021      	movs	r1, r4
 80016aa:	1a12      	subs	r2, r2, r0
 80016ac:	40d1      	lsrs	r1, r2
 80016ae:	3015      	adds	r0, #21
 80016b0:	030a      	lsls	r2, r1, #12
 80016b2:	055b      	lsls	r3, r3, #21
 80016b4:	4084      	lsls	r4, r0
 80016b6:	0b12      	lsrs	r2, r2, #12
 80016b8:	0d5b      	lsrs	r3, r3, #21
 80016ba:	e001      	b.n	80016c0 <__aeabi_ui2d+0x2c>
 80016bc:	2300      	movs	r3, #0
 80016be:	2200      	movs	r2, #0
 80016c0:	051b      	lsls	r3, r3, #20
 80016c2:	4313      	orrs	r3, r2
 80016c4:	0020      	movs	r0, r4
 80016c6:	0019      	movs	r1, r3
 80016c8:	bd10      	pop	{r4, pc}
 80016ca:	0022      	movs	r2, r4
 80016cc:	380b      	subs	r0, #11
 80016ce:	4082      	lsls	r2, r0
 80016d0:	055b      	lsls	r3, r3, #21
 80016d2:	0312      	lsls	r2, r2, #12
 80016d4:	2400      	movs	r4, #0
 80016d6:	0b12      	lsrs	r2, r2, #12
 80016d8:	0d5b      	lsrs	r3, r3, #21
 80016da:	e7f1      	b.n	80016c0 <__aeabi_ui2d+0x2c>
 80016dc:	0000041e 	.word	0x0000041e

080016e0 <__aeabi_cdrcmple>:
 80016e0:	4684      	mov	ip, r0
 80016e2:	0010      	movs	r0, r2
 80016e4:	4662      	mov	r2, ip
 80016e6:	468c      	mov	ip, r1
 80016e8:	0019      	movs	r1, r3
 80016ea:	4663      	mov	r3, ip
 80016ec:	e000      	b.n	80016f0 <__aeabi_cdcmpeq>
 80016ee:	46c0      	nop			; (mov r8, r8)

080016f0 <__aeabi_cdcmpeq>:
 80016f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80016f2:	f000 f8f9 	bl	80018e8 <__ledf2>
 80016f6:	2800      	cmp	r0, #0
 80016f8:	d401      	bmi.n	80016fe <__aeabi_cdcmpeq+0xe>
 80016fa:	2100      	movs	r1, #0
 80016fc:	42c8      	cmn	r0, r1
 80016fe:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08001700 <__aeabi_dcmpeq>:
 8001700:	b510      	push	{r4, lr}
 8001702:	f000 f849 	bl	8001798 <__eqdf2>
 8001706:	4240      	negs	r0, r0
 8001708:	3001      	adds	r0, #1
 800170a:	bd10      	pop	{r4, pc}

0800170c <__aeabi_dcmplt>:
 800170c:	b510      	push	{r4, lr}
 800170e:	f000 f8eb 	bl	80018e8 <__ledf2>
 8001712:	2800      	cmp	r0, #0
 8001714:	db01      	blt.n	800171a <__aeabi_dcmplt+0xe>
 8001716:	2000      	movs	r0, #0
 8001718:	bd10      	pop	{r4, pc}
 800171a:	2001      	movs	r0, #1
 800171c:	bd10      	pop	{r4, pc}
 800171e:	46c0      	nop			; (mov r8, r8)

08001720 <__aeabi_dcmple>:
 8001720:	b510      	push	{r4, lr}
 8001722:	f000 f8e1 	bl	80018e8 <__ledf2>
 8001726:	2800      	cmp	r0, #0
 8001728:	dd01      	ble.n	800172e <__aeabi_dcmple+0xe>
 800172a:	2000      	movs	r0, #0
 800172c:	bd10      	pop	{r4, pc}
 800172e:	2001      	movs	r0, #1
 8001730:	bd10      	pop	{r4, pc}
 8001732:	46c0      	nop			; (mov r8, r8)

08001734 <__aeabi_dcmpgt>:
 8001734:	b510      	push	{r4, lr}
 8001736:	f000 f871 	bl	800181c <__gedf2>
 800173a:	2800      	cmp	r0, #0
 800173c:	dc01      	bgt.n	8001742 <__aeabi_dcmpgt+0xe>
 800173e:	2000      	movs	r0, #0
 8001740:	bd10      	pop	{r4, pc}
 8001742:	2001      	movs	r0, #1
 8001744:	bd10      	pop	{r4, pc}
 8001746:	46c0      	nop			; (mov r8, r8)

08001748 <__aeabi_dcmpge>:
 8001748:	b510      	push	{r4, lr}
 800174a:	f000 f867 	bl	800181c <__gedf2>
 800174e:	2800      	cmp	r0, #0
 8001750:	da01      	bge.n	8001756 <__aeabi_dcmpge+0xe>
 8001752:	2000      	movs	r0, #0
 8001754:	bd10      	pop	{r4, pc}
 8001756:	2001      	movs	r0, #1
 8001758:	bd10      	pop	{r4, pc}
 800175a:	46c0      	nop			; (mov r8, r8)

0800175c <__clzsi2>:
 800175c:	211c      	movs	r1, #28
 800175e:	2301      	movs	r3, #1
 8001760:	041b      	lsls	r3, r3, #16
 8001762:	4298      	cmp	r0, r3
 8001764:	d301      	bcc.n	800176a <__clzsi2+0xe>
 8001766:	0c00      	lsrs	r0, r0, #16
 8001768:	3910      	subs	r1, #16
 800176a:	0a1b      	lsrs	r3, r3, #8
 800176c:	4298      	cmp	r0, r3
 800176e:	d301      	bcc.n	8001774 <__clzsi2+0x18>
 8001770:	0a00      	lsrs	r0, r0, #8
 8001772:	3908      	subs	r1, #8
 8001774:	091b      	lsrs	r3, r3, #4
 8001776:	4298      	cmp	r0, r3
 8001778:	d301      	bcc.n	800177e <__clzsi2+0x22>
 800177a:	0900      	lsrs	r0, r0, #4
 800177c:	3904      	subs	r1, #4
 800177e:	a202      	add	r2, pc, #8	; (adr r2, 8001788 <__clzsi2+0x2c>)
 8001780:	5c10      	ldrb	r0, [r2, r0]
 8001782:	1840      	adds	r0, r0, r1
 8001784:	4770      	bx	lr
 8001786:	46c0      	nop			; (mov r8, r8)
 8001788:	02020304 	.word	0x02020304
 800178c:	01010101 	.word	0x01010101
	...

08001798 <__eqdf2>:
 8001798:	b5f0      	push	{r4, r5, r6, r7, lr}
 800179a:	464e      	mov	r6, r9
 800179c:	4645      	mov	r5, r8
 800179e:	46de      	mov	lr, fp
 80017a0:	4657      	mov	r7, sl
 80017a2:	4690      	mov	r8, r2
 80017a4:	b5e0      	push	{r5, r6, r7, lr}
 80017a6:	0017      	movs	r7, r2
 80017a8:	031a      	lsls	r2, r3, #12
 80017aa:	0b12      	lsrs	r2, r2, #12
 80017ac:	0005      	movs	r5, r0
 80017ae:	4684      	mov	ip, r0
 80017b0:	4819      	ldr	r0, [pc, #100]	; (8001818 <__eqdf2+0x80>)
 80017b2:	030e      	lsls	r6, r1, #12
 80017b4:	004c      	lsls	r4, r1, #1
 80017b6:	4691      	mov	r9, r2
 80017b8:	005a      	lsls	r2, r3, #1
 80017ba:	0fdb      	lsrs	r3, r3, #31
 80017bc:	469b      	mov	fp, r3
 80017be:	0b36      	lsrs	r6, r6, #12
 80017c0:	0d64      	lsrs	r4, r4, #21
 80017c2:	0fc9      	lsrs	r1, r1, #31
 80017c4:	0d52      	lsrs	r2, r2, #21
 80017c6:	4284      	cmp	r4, r0
 80017c8:	d019      	beq.n	80017fe <__eqdf2+0x66>
 80017ca:	4282      	cmp	r2, r0
 80017cc:	d010      	beq.n	80017f0 <__eqdf2+0x58>
 80017ce:	2001      	movs	r0, #1
 80017d0:	4294      	cmp	r4, r2
 80017d2:	d10e      	bne.n	80017f2 <__eqdf2+0x5a>
 80017d4:	454e      	cmp	r6, r9
 80017d6:	d10c      	bne.n	80017f2 <__eqdf2+0x5a>
 80017d8:	2001      	movs	r0, #1
 80017da:	45c4      	cmp	ip, r8
 80017dc:	d109      	bne.n	80017f2 <__eqdf2+0x5a>
 80017de:	4559      	cmp	r1, fp
 80017e0:	d017      	beq.n	8001812 <__eqdf2+0x7a>
 80017e2:	2c00      	cmp	r4, #0
 80017e4:	d105      	bne.n	80017f2 <__eqdf2+0x5a>
 80017e6:	0030      	movs	r0, r6
 80017e8:	4328      	orrs	r0, r5
 80017ea:	1e43      	subs	r3, r0, #1
 80017ec:	4198      	sbcs	r0, r3
 80017ee:	e000      	b.n	80017f2 <__eqdf2+0x5a>
 80017f0:	2001      	movs	r0, #1
 80017f2:	bcf0      	pop	{r4, r5, r6, r7}
 80017f4:	46bb      	mov	fp, r7
 80017f6:	46b2      	mov	sl, r6
 80017f8:	46a9      	mov	r9, r5
 80017fa:	46a0      	mov	r8, r4
 80017fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80017fe:	0033      	movs	r3, r6
 8001800:	2001      	movs	r0, #1
 8001802:	432b      	orrs	r3, r5
 8001804:	d1f5      	bne.n	80017f2 <__eqdf2+0x5a>
 8001806:	42a2      	cmp	r2, r4
 8001808:	d1f3      	bne.n	80017f2 <__eqdf2+0x5a>
 800180a:	464b      	mov	r3, r9
 800180c:	433b      	orrs	r3, r7
 800180e:	d1f0      	bne.n	80017f2 <__eqdf2+0x5a>
 8001810:	e7e2      	b.n	80017d8 <__eqdf2+0x40>
 8001812:	2000      	movs	r0, #0
 8001814:	e7ed      	b.n	80017f2 <__eqdf2+0x5a>
 8001816:	46c0      	nop			; (mov r8, r8)
 8001818:	000007ff 	.word	0x000007ff

0800181c <__gedf2>:
 800181c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800181e:	4647      	mov	r7, r8
 8001820:	46ce      	mov	lr, r9
 8001822:	0004      	movs	r4, r0
 8001824:	0018      	movs	r0, r3
 8001826:	0016      	movs	r6, r2
 8001828:	031b      	lsls	r3, r3, #12
 800182a:	0b1b      	lsrs	r3, r3, #12
 800182c:	4d2d      	ldr	r5, [pc, #180]	; (80018e4 <__gedf2+0xc8>)
 800182e:	004a      	lsls	r2, r1, #1
 8001830:	4699      	mov	r9, r3
 8001832:	b580      	push	{r7, lr}
 8001834:	0043      	lsls	r3, r0, #1
 8001836:	030f      	lsls	r7, r1, #12
 8001838:	46a4      	mov	ip, r4
 800183a:	46b0      	mov	r8, r6
 800183c:	0b3f      	lsrs	r7, r7, #12
 800183e:	0d52      	lsrs	r2, r2, #21
 8001840:	0fc9      	lsrs	r1, r1, #31
 8001842:	0d5b      	lsrs	r3, r3, #21
 8001844:	0fc0      	lsrs	r0, r0, #31
 8001846:	42aa      	cmp	r2, r5
 8001848:	d021      	beq.n	800188e <__gedf2+0x72>
 800184a:	42ab      	cmp	r3, r5
 800184c:	d013      	beq.n	8001876 <__gedf2+0x5a>
 800184e:	2a00      	cmp	r2, #0
 8001850:	d122      	bne.n	8001898 <__gedf2+0x7c>
 8001852:	433c      	orrs	r4, r7
 8001854:	2b00      	cmp	r3, #0
 8001856:	d102      	bne.n	800185e <__gedf2+0x42>
 8001858:	464d      	mov	r5, r9
 800185a:	432e      	orrs	r6, r5
 800185c:	d022      	beq.n	80018a4 <__gedf2+0x88>
 800185e:	2c00      	cmp	r4, #0
 8001860:	d010      	beq.n	8001884 <__gedf2+0x68>
 8001862:	4281      	cmp	r1, r0
 8001864:	d022      	beq.n	80018ac <__gedf2+0x90>
 8001866:	2002      	movs	r0, #2
 8001868:	3901      	subs	r1, #1
 800186a:	4008      	ands	r0, r1
 800186c:	3801      	subs	r0, #1
 800186e:	bcc0      	pop	{r6, r7}
 8001870:	46b9      	mov	r9, r7
 8001872:	46b0      	mov	r8, r6
 8001874:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001876:	464d      	mov	r5, r9
 8001878:	432e      	orrs	r6, r5
 800187a:	d129      	bne.n	80018d0 <__gedf2+0xb4>
 800187c:	2a00      	cmp	r2, #0
 800187e:	d1f0      	bne.n	8001862 <__gedf2+0x46>
 8001880:	433c      	orrs	r4, r7
 8001882:	d1ee      	bne.n	8001862 <__gedf2+0x46>
 8001884:	2800      	cmp	r0, #0
 8001886:	d1f2      	bne.n	800186e <__gedf2+0x52>
 8001888:	2001      	movs	r0, #1
 800188a:	4240      	negs	r0, r0
 800188c:	e7ef      	b.n	800186e <__gedf2+0x52>
 800188e:	003d      	movs	r5, r7
 8001890:	4325      	orrs	r5, r4
 8001892:	d11d      	bne.n	80018d0 <__gedf2+0xb4>
 8001894:	4293      	cmp	r3, r2
 8001896:	d0ee      	beq.n	8001876 <__gedf2+0x5a>
 8001898:	2b00      	cmp	r3, #0
 800189a:	d1e2      	bne.n	8001862 <__gedf2+0x46>
 800189c:	464c      	mov	r4, r9
 800189e:	4326      	orrs	r6, r4
 80018a0:	d1df      	bne.n	8001862 <__gedf2+0x46>
 80018a2:	e7e0      	b.n	8001866 <__gedf2+0x4a>
 80018a4:	2000      	movs	r0, #0
 80018a6:	2c00      	cmp	r4, #0
 80018a8:	d0e1      	beq.n	800186e <__gedf2+0x52>
 80018aa:	e7dc      	b.n	8001866 <__gedf2+0x4a>
 80018ac:	429a      	cmp	r2, r3
 80018ae:	dc0a      	bgt.n	80018c6 <__gedf2+0xaa>
 80018b0:	dbe8      	blt.n	8001884 <__gedf2+0x68>
 80018b2:	454f      	cmp	r7, r9
 80018b4:	d8d7      	bhi.n	8001866 <__gedf2+0x4a>
 80018b6:	d00e      	beq.n	80018d6 <__gedf2+0xba>
 80018b8:	2000      	movs	r0, #0
 80018ba:	454f      	cmp	r7, r9
 80018bc:	d2d7      	bcs.n	800186e <__gedf2+0x52>
 80018be:	2900      	cmp	r1, #0
 80018c0:	d0e2      	beq.n	8001888 <__gedf2+0x6c>
 80018c2:	0008      	movs	r0, r1
 80018c4:	e7d3      	b.n	800186e <__gedf2+0x52>
 80018c6:	4243      	negs	r3, r0
 80018c8:	4158      	adcs	r0, r3
 80018ca:	0040      	lsls	r0, r0, #1
 80018cc:	3801      	subs	r0, #1
 80018ce:	e7ce      	b.n	800186e <__gedf2+0x52>
 80018d0:	2002      	movs	r0, #2
 80018d2:	4240      	negs	r0, r0
 80018d4:	e7cb      	b.n	800186e <__gedf2+0x52>
 80018d6:	45c4      	cmp	ip, r8
 80018d8:	d8c5      	bhi.n	8001866 <__gedf2+0x4a>
 80018da:	2000      	movs	r0, #0
 80018dc:	45c4      	cmp	ip, r8
 80018de:	d2c6      	bcs.n	800186e <__gedf2+0x52>
 80018e0:	e7ed      	b.n	80018be <__gedf2+0xa2>
 80018e2:	46c0      	nop			; (mov r8, r8)
 80018e4:	000007ff 	.word	0x000007ff

080018e8 <__ledf2>:
 80018e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80018ea:	4647      	mov	r7, r8
 80018ec:	46ce      	mov	lr, r9
 80018ee:	0004      	movs	r4, r0
 80018f0:	0018      	movs	r0, r3
 80018f2:	0016      	movs	r6, r2
 80018f4:	031b      	lsls	r3, r3, #12
 80018f6:	0b1b      	lsrs	r3, r3, #12
 80018f8:	4d2c      	ldr	r5, [pc, #176]	; (80019ac <__ledf2+0xc4>)
 80018fa:	004a      	lsls	r2, r1, #1
 80018fc:	4699      	mov	r9, r3
 80018fe:	b580      	push	{r7, lr}
 8001900:	0043      	lsls	r3, r0, #1
 8001902:	030f      	lsls	r7, r1, #12
 8001904:	46a4      	mov	ip, r4
 8001906:	46b0      	mov	r8, r6
 8001908:	0b3f      	lsrs	r7, r7, #12
 800190a:	0d52      	lsrs	r2, r2, #21
 800190c:	0fc9      	lsrs	r1, r1, #31
 800190e:	0d5b      	lsrs	r3, r3, #21
 8001910:	0fc0      	lsrs	r0, r0, #31
 8001912:	42aa      	cmp	r2, r5
 8001914:	d00d      	beq.n	8001932 <__ledf2+0x4a>
 8001916:	42ab      	cmp	r3, r5
 8001918:	d010      	beq.n	800193c <__ledf2+0x54>
 800191a:	2a00      	cmp	r2, #0
 800191c:	d127      	bne.n	800196e <__ledf2+0x86>
 800191e:	433c      	orrs	r4, r7
 8001920:	2b00      	cmp	r3, #0
 8001922:	d111      	bne.n	8001948 <__ledf2+0x60>
 8001924:	464d      	mov	r5, r9
 8001926:	432e      	orrs	r6, r5
 8001928:	d10e      	bne.n	8001948 <__ledf2+0x60>
 800192a:	2000      	movs	r0, #0
 800192c:	2c00      	cmp	r4, #0
 800192e:	d015      	beq.n	800195c <__ledf2+0x74>
 8001930:	e00e      	b.n	8001950 <__ledf2+0x68>
 8001932:	003d      	movs	r5, r7
 8001934:	4325      	orrs	r5, r4
 8001936:	d110      	bne.n	800195a <__ledf2+0x72>
 8001938:	4293      	cmp	r3, r2
 800193a:	d118      	bne.n	800196e <__ledf2+0x86>
 800193c:	464d      	mov	r5, r9
 800193e:	432e      	orrs	r6, r5
 8001940:	d10b      	bne.n	800195a <__ledf2+0x72>
 8001942:	2a00      	cmp	r2, #0
 8001944:	d102      	bne.n	800194c <__ledf2+0x64>
 8001946:	433c      	orrs	r4, r7
 8001948:	2c00      	cmp	r4, #0
 800194a:	d00b      	beq.n	8001964 <__ledf2+0x7c>
 800194c:	4281      	cmp	r1, r0
 800194e:	d014      	beq.n	800197a <__ledf2+0x92>
 8001950:	2002      	movs	r0, #2
 8001952:	3901      	subs	r1, #1
 8001954:	4008      	ands	r0, r1
 8001956:	3801      	subs	r0, #1
 8001958:	e000      	b.n	800195c <__ledf2+0x74>
 800195a:	2002      	movs	r0, #2
 800195c:	bcc0      	pop	{r6, r7}
 800195e:	46b9      	mov	r9, r7
 8001960:	46b0      	mov	r8, r6
 8001962:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001964:	2800      	cmp	r0, #0
 8001966:	d1f9      	bne.n	800195c <__ledf2+0x74>
 8001968:	2001      	movs	r0, #1
 800196a:	4240      	negs	r0, r0
 800196c:	e7f6      	b.n	800195c <__ledf2+0x74>
 800196e:	2b00      	cmp	r3, #0
 8001970:	d1ec      	bne.n	800194c <__ledf2+0x64>
 8001972:	464c      	mov	r4, r9
 8001974:	4326      	orrs	r6, r4
 8001976:	d1e9      	bne.n	800194c <__ledf2+0x64>
 8001978:	e7ea      	b.n	8001950 <__ledf2+0x68>
 800197a:	429a      	cmp	r2, r3
 800197c:	dd04      	ble.n	8001988 <__ledf2+0xa0>
 800197e:	4243      	negs	r3, r0
 8001980:	4158      	adcs	r0, r3
 8001982:	0040      	lsls	r0, r0, #1
 8001984:	3801      	subs	r0, #1
 8001986:	e7e9      	b.n	800195c <__ledf2+0x74>
 8001988:	429a      	cmp	r2, r3
 800198a:	dbeb      	blt.n	8001964 <__ledf2+0x7c>
 800198c:	454f      	cmp	r7, r9
 800198e:	d8df      	bhi.n	8001950 <__ledf2+0x68>
 8001990:	d006      	beq.n	80019a0 <__ledf2+0xb8>
 8001992:	2000      	movs	r0, #0
 8001994:	454f      	cmp	r7, r9
 8001996:	d2e1      	bcs.n	800195c <__ledf2+0x74>
 8001998:	2900      	cmp	r1, #0
 800199a:	d0e5      	beq.n	8001968 <__ledf2+0x80>
 800199c:	0008      	movs	r0, r1
 800199e:	e7dd      	b.n	800195c <__ledf2+0x74>
 80019a0:	45c4      	cmp	ip, r8
 80019a2:	d8d5      	bhi.n	8001950 <__ledf2+0x68>
 80019a4:	2000      	movs	r0, #0
 80019a6:	45c4      	cmp	ip, r8
 80019a8:	d2d8      	bcs.n	800195c <__ledf2+0x74>
 80019aa:	e7f5      	b.n	8001998 <__ledf2+0xb0>
 80019ac:	000007ff 	.word	0x000007ff

080019b0 <GPS_parse_lat>:
uint8_t GPS_fix = 0;
char GPS_sentence[NMEA_MAX_SENTENCE_LENGTH];
uint8_t GPS_msg_id = 0;
bool GPS_msg_started = 0;

uint32_t GPS_parse_lat(char *input) {
 80019b0:	b590      	push	{r4, r7, lr}
 80019b2:	b087      	sub	sp, #28
 80019b4:	af00      	add	r7, sp, #0
 80019b6:	6078      	str	r0, [r7, #4]
    int degrees = (input[0] - '0') * 10 + (input[1] - '0');
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	781b      	ldrb	r3, [r3, #0]
 80019bc:	3b30      	subs	r3, #48	; 0x30
 80019be:	001a      	movs	r2, r3
 80019c0:	0013      	movs	r3, r2
 80019c2:	009b      	lsls	r3, r3, #2
 80019c4:	189b      	adds	r3, r3, r2
 80019c6:	005b      	lsls	r3, r3, #1
 80019c8:	001a      	movs	r2, r3
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	3301      	adds	r3, #1
 80019ce:	781b      	ldrb	r3, [r3, #0]
 80019d0:	3b30      	subs	r3, #48	; 0x30
 80019d2:	18d3      	adds	r3, r2, r3
 80019d4:	617b      	str	r3, [r7, #20]
    uint32_t minutes = (input[2] - '0') * 100000 + (input[3] - '0') * 10000 + (input[5] - '0') * 1000 + (input[6] - '0') * 100 + (input[7] - '0') * 10 + (input[8] - '0');
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	3302      	adds	r3, #2
 80019da:	781b      	ldrb	r3, [r3, #0]
 80019dc:	3b30      	subs	r3, #48	; 0x30
 80019de:	4a26      	ldr	r2, [pc, #152]	; (8001a78 <GPS_parse_lat+0xc8>)
 80019e0:	435a      	muls	r2, r3
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	3303      	adds	r3, #3
 80019e6:	781b      	ldrb	r3, [r3, #0]
 80019e8:	3b30      	subs	r3, #48	; 0x30
 80019ea:	4924      	ldr	r1, [pc, #144]	; (8001a7c <GPS_parse_lat+0xcc>)
 80019ec:	434b      	muls	r3, r1
 80019ee:	18d1      	adds	r1, r2, r3
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	3305      	adds	r3, #5
 80019f4:	781b      	ldrb	r3, [r3, #0]
 80019f6:	3b30      	subs	r3, #48	; 0x30
 80019f8:	001a      	movs	r2, r3
 80019fa:	0013      	movs	r3, r2
 80019fc:	015b      	lsls	r3, r3, #5
 80019fe:	1a9b      	subs	r3, r3, r2
 8001a00:	009b      	lsls	r3, r3, #2
 8001a02:	189b      	adds	r3, r3, r2
 8001a04:	00db      	lsls	r3, r3, #3
 8001a06:	18ca      	adds	r2, r1, r3
 8001a08:	687b      	ldr	r3, [r7, #4]
 8001a0a:	3306      	adds	r3, #6
 8001a0c:	781b      	ldrb	r3, [r3, #0]
 8001a0e:	3b30      	subs	r3, #48	; 0x30
 8001a10:	2164      	movs	r1, #100	; 0x64
 8001a12:	434b      	muls	r3, r1
 8001a14:	18d1      	adds	r1, r2, r3
 8001a16:	687b      	ldr	r3, [r7, #4]
 8001a18:	3307      	adds	r3, #7
 8001a1a:	781b      	ldrb	r3, [r3, #0]
 8001a1c:	3b30      	subs	r3, #48	; 0x30
 8001a1e:	001a      	movs	r2, r3
 8001a20:	0013      	movs	r3, r2
 8001a22:	009b      	lsls	r3, r3, #2
 8001a24:	189b      	adds	r3, r3, r2
 8001a26:	005b      	lsls	r3, r3, #1
 8001a28:	18ca      	adds	r2, r1, r3
 8001a2a:	687b      	ldr	r3, [r7, #4]
 8001a2c:	3308      	adds	r3, #8
 8001a2e:	781b      	ldrb	r3, [r3, #0]
 8001a30:	3b30      	subs	r3, #48	; 0x30
 8001a32:	18d3      	adds	r3, r2, r3
 8001a34:	613b      	str	r3, [r7, #16]
    uint32_t result = (degrees * 10000000) + (uint32_t)((double)minutes / 60.0 * 1000);
 8001a36:	697b      	ldr	r3, [r7, #20]
 8001a38:	4a11      	ldr	r2, [pc, #68]	; (8001a80 <GPS_parse_lat+0xd0>)
 8001a3a:	4353      	muls	r3, r2
 8001a3c:	001c      	movs	r4, r3
 8001a3e:	6938      	ldr	r0, [r7, #16]
 8001a40:	f7ff fe28 	bl	8001694 <__aeabi_ui2d>
 8001a44:	2200      	movs	r2, #0
 8001a46:	4b0f      	ldr	r3, [pc, #60]	; (8001a84 <GPS_parse_lat+0xd4>)
 8001a48:	f7fe fcfa 	bl	8000440 <__aeabi_ddiv>
 8001a4c:	0002      	movs	r2, r0
 8001a4e:	000b      	movs	r3, r1
 8001a50:	0010      	movs	r0, r2
 8001a52:	0019      	movs	r1, r3
 8001a54:	2200      	movs	r2, #0
 8001a56:	4b0c      	ldr	r3, [pc, #48]	; (8001a88 <GPS_parse_lat+0xd8>)
 8001a58:	f7fe ffe8 	bl	8000a2c <__aeabi_dmul>
 8001a5c:	0002      	movs	r2, r0
 8001a5e:	000b      	movs	r3, r1
 8001a60:	0010      	movs	r0, r2
 8001a62:	0019      	movs	r1, r3
 8001a64:	f7fe fcce 	bl	8000404 <__aeabi_d2uiz>
 8001a68:	0003      	movs	r3, r0
 8001a6a:	18e3      	adds	r3, r4, r3
 8001a6c:	60fb      	str	r3, [r7, #12]
    return result;
 8001a6e:	68fb      	ldr	r3, [r7, #12]
}
 8001a70:	0018      	movs	r0, r3
 8001a72:	46bd      	mov	sp, r7
 8001a74:	b007      	add	sp, #28
 8001a76:	bd90      	pop	{r4, r7, pc}
 8001a78:	000186a0 	.word	0x000186a0
 8001a7c:	00002710 	.word	0x00002710
 8001a80:	00989680 	.word	0x00989680
 8001a84:	404e0000 	.word	0x404e0000
 8001a88:	408f4000 	.word	0x408f4000

08001a8c <GPS_parse_lon>:

uint32_t GPS_parse_lon(char *input) {
 8001a8c:	b590      	push	{r4, r7, lr}
 8001a8e:	b087      	sub	sp, #28
 8001a90:	af00      	add	r7, sp, #0
 8001a92:	6078      	str	r0, [r7, #4]
    int degrees = (input[1] - '0') * 10 + (input[2] - '0');
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	3301      	adds	r3, #1
 8001a98:	781b      	ldrb	r3, [r3, #0]
 8001a9a:	3b30      	subs	r3, #48	; 0x30
 8001a9c:	001a      	movs	r2, r3
 8001a9e:	0013      	movs	r3, r2
 8001aa0:	009b      	lsls	r3, r3, #2
 8001aa2:	189b      	adds	r3, r3, r2
 8001aa4:	005b      	lsls	r3, r3, #1
 8001aa6:	001a      	movs	r2, r3
 8001aa8:	687b      	ldr	r3, [r7, #4]
 8001aaa:	3302      	adds	r3, #2
 8001aac:	781b      	ldrb	r3, [r3, #0]
 8001aae:	3b30      	subs	r3, #48	; 0x30
 8001ab0:	18d3      	adds	r3, r2, r3
 8001ab2:	617b      	str	r3, [r7, #20]
    uint32_t minutes = (input[3] - '0') * 100000 + (input[4] - '0') * 10000 + (input[6] - '0') * 1000 + (input[7] - '0') * 100 + (input[8] - '0') * 10 + (input[9] - '0');
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	3303      	adds	r3, #3
 8001ab8:	781b      	ldrb	r3, [r3, #0]
 8001aba:	3b30      	subs	r3, #48	; 0x30
 8001abc:	4a26      	ldr	r2, [pc, #152]	; (8001b58 <GPS_parse_lon+0xcc>)
 8001abe:	435a      	muls	r2, r3
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	3304      	adds	r3, #4
 8001ac4:	781b      	ldrb	r3, [r3, #0]
 8001ac6:	3b30      	subs	r3, #48	; 0x30
 8001ac8:	4924      	ldr	r1, [pc, #144]	; (8001b5c <GPS_parse_lon+0xd0>)
 8001aca:	434b      	muls	r3, r1
 8001acc:	18d1      	adds	r1, r2, r3
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	3306      	adds	r3, #6
 8001ad2:	781b      	ldrb	r3, [r3, #0]
 8001ad4:	3b30      	subs	r3, #48	; 0x30
 8001ad6:	001a      	movs	r2, r3
 8001ad8:	0013      	movs	r3, r2
 8001ada:	015b      	lsls	r3, r3, #5
 8001adc:	1a9b      	subs	r3, r3, r2
 8001ade:	009b      	lsls	r3, r3, #2
 8001ae0:	189b      	adds	r3, r3, r2
 8001ae2:	00db      	lsls	r3, r3, #3
 8001ae4:	18ca      	adds	r2, r1, r3
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	3307      	adds	r3, #7
 8001aea:	781b      	ldrb	r3, [r3, #0]
 8001aec:	3b30      	subs	r3, #48	; 0x30
 8001aee:	2164      	movs	r1, #100	; 0x64
 8001af0:	434b      	muls	r3, r1
 8001af2:	18d1      	adds	r1, r2, r3
 8001af4:	687b      	ldr	r3, [r7, #4]
 8001af6:	3308      	adds	r3, #8
 8001af8:	781b      	ldrb	r3, [r3, #0]
 8001afa:	3b30      	subs	r3, #48	; 0x30
 8001afc:	001a      	movs	r2, r3
 8001afe:	0013      	movs	r3, r2
 8001b00:	009b      	lsls	r3, r3, #2
 8001b02:	189b      	adds	r3, r3, r2
 8001b04:	005b      	lsls	r3, r3, #1
 8001b06:	18ca      	adds	r2, r1, r3
 8001b08:	687b      	ldr	r3, [r7, #4]
 8001b0a:	3309      	adds	r3, #9
 8001b0c:	781b      	ldrb	r3, [r3, #0]
 8001b0e:	3b30      	subs	r3, #48	; 0x30
 8001b10:	18d3      	adds	r3, r2, r3
 8001b12:	613b      	str	r3, [r7, #16]
    uint32_t result = (degrees * 10000000) + (uint32_t)((double)minutes / 60.0 * 1000);
 8001b14:	697b      	ldr	r3, [r7, #20]
 8001b16:	4a12      	ldr	r2, [pc, #72]	; (8001b60 <GPS_parse_lon+0xd4>)
 8001b18:	4353      	muls	r3, r2
 8001b1a:	001c      	movs	r4, r3
 8001b1c:	6938      	ldr	r0, [r7, #16]
 8001b1e:	f7ff fdb9 	bl	8001694 <__aeabi_ui2d>
 8001b22:	2200      	movs	r2, #0
 8001b24:	4b0f      	ldr	r3, [pc, #60]	; (8001b64 <GPS_parse_lon+0xd8>)
 8001b26:	f7fe fc8b 	bl	8000440 <__aeabi_ddiv>
 8001b2a:	0002      	movs	r2, r0
 8001b2c:	000b      	movs	r3, r1
 8001b2e:	0010      	movs	r0, r2
 8001b30:	0019      	movs	r1, r3
 8001b32:	2200      	movs	r2, #0
 8001b34:	4b0c      	ldr	r3, [pc, #48]	; (8001b68 <GPS_parse_lon+0xdc>)
 8001b36:	f7fe ff79 	bl	8000a2c <__aeabi_dmul>
 8001b3a:	0002      	movs	r2, r0
 8001b3c:	000b      	movs	r3, r1
 8001b3e:	0010      	movs	r0, r2
 8001b40:	0019      	movs	r1, r3
 8001b42:	f7fe fc5f 	bl	8000404 <__aeabi_d2uiz>
 8001b46:	0003      	movs	r3, r0
 8001b48:	18e3      	adds	r3, r4, r3
 8001b4a:	60fb      	str	r3, [r7, #12]
    return result;
 8001b4c:	68fb      	ldr	r3, [r7, #12]
}
 8001b4e:	0018      	movs	r0, r3
 8001b50:	46bd      	mov	sp, r7
 8001b52:	b007      	add	sp, #28
 8001b54:	bd90      	pop	{r4, r7, pc}
 8001b56:	46c0      	nop			; (mov r8, r8)
 8001b58:	000186a0 	.word	0x000186a0
 8001b5c:	00002710 	.word	0x00002710
 8001b60:	00989680 	.word	0x00989680
 8001b64:	404e0000 	.word	0x404e0000
 8001b68:	408f4000 	.word	0x408f4000

08001b6c <GPS_parse_sign>:


int32_t GPS_parse_sign(char *input, uint32_t latlon) {
 8001b6c:	b580      	push	{r7, lr}
 8001b6e:	b084      	sub	sp, #16
 8001b70:	af00      	add	r7, sp, #0
 8001b72:	6078      	str	r0, [r7, #4]
 8001b74:	6039      	str	r1, [r7, #0]
	int32_t result = latlon;
 8001b76:	683b      	ldr	r3, [r7, #0]
 8001b78:	60fb      	str	r3, [r7, #12]
	if((*input == 83) || (*input == 87)) {
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	781b      	ldrb	r3, [r3, #0]
 8001b7e:	2b53      	cmp	r3, #83	; 0x53
 8001b80:	d003      	beq.n	8001b8a <GPS_parse_sign+0x1e>
 8001b82:	687b      	ldr	r3, [r7, #4]
 8001b84:	781b      	ldrb	r3, [r3, #0]
 8001b86:	2b57      	cmp	r3, #87	; 0x57
 8001b88:	d102      	bne.n	8001b90 <GPS_parse_sign+0x24>
		result = (int32_t)(0 - latlon);
 8001b8a:	683b      	ldr	r3, [r7, #0]
 8001b8c:	425b      	negs	r3, r3
 8001b8e:	60fb      	str	r3, [r7, #12]
	}
	return result;
 8001b90:	68fb      	ldr	r3, [r7, #12]
}
 8001b92:	0018      	movs	r0, r3
 8001b94:	46bd      	mov	sp, r7
 8001b96:	b004      	add	sp, #16
 8001b98:	bd80      	pop	{r7, pc}
	...

08001b9c <GPS_parse>:

bool GPS_parse(char c) {
 8001b9c:	b580      	push	{r7, lr}
 8001b9e:	b084      	sub	sp, #16
 8001ba0:	af00      	add	r7, sp, #0
 8001ba2:	0002      	movs	r2, r0
 8001ba4:	1dfb      	adds	r3, r7, #7
 8001ba6:	701a      	strb	r2, [r3, #0]
	if(c == '$') {
 8001ba8:	1dfb      	adds	r3, r7, #7
 8001baa:	781b      	ldrb	r3, [r3, #0]
 8001bac:	2b24      	cmp	r3, #36	; 0x24
 8001bae:	d106      	bne.n	8001bbe <GPS_parse+0x22>
		GPS_msg_id = 0;
 8001bb0:	4b56      	ldr	r3, [pc, #344]	; (8001d0c <GPS_parse+0x170>)
 8001bb2:	2200      	movs	r2, #0
 8001bb4:	701a      	strb	r2, [r3, #0]
		GPS_msg_started = true;
 8001bb6:	4b56      	ldr	r3, [pc, #344]	; (8001d10 <GPS_parse+0x174>)
 8001bb8:	2201      	movs	r2, #1
 8001bba:	701a      	strb	r2, [r3, #0]
 8001bbc:	e0a0      	b.n	8001d00 <GPS_parse+0x164>
	}
	else if(c == '\r' && GPS_msg_started) {
 8001bbe:	1dfb      	adds	r3, r7, #7
 8001bc0:	781b      	ldrb	r3, [r3, #0]
 8001bc2:	2b0d      	cmp	r3, #13
 8001bc4:	d000      	beq.n	8001bc8 <GPS_parse+0x2c>
 8001bc6:	e084      	b.n	8001cd2 <GPS_parse+0x136>
 8001bc8:	4b51      	ldr	r3, [pc, #324]	; (8001d10 <GPS_parse+0x174>)
 8001bca:	781b      	ldrb	r3, [r3, #0]
 8001bcc:	2b00      	cmp	r3, #0
 8001bce:	d100      	bne.n	8001bd2 <GPS_parse+0x36>
 8001bd0:	e07f      	b.n	8001cd2 <GPS_parse+0x136>
		GPS_sentence[GPS_msg_id] = '\0';
 8001bd2:	4b4e      	ldr	r3, [pc, #312]	; (8001d0c <GPS_parse+0x170>)
 8001bd4:	781b      	ldrb	r3, [r3, #0]
 8001bd6:	001a      	movs	r2, r3
 8001bd8:	4b4e      	ldr	r3, [pc, #312]	; (8001d14 <GPS_parse+0x178>)
 8001bda:	2100      	movs	r1, #0
 8001bdc:	5499      	strb	r1, [r3, r2]
		GPS_msg_id = 0;
 8001bde:	4b4b      	ldr	r3, [pc, #300]	; (8001d0c <GPS_parse+0x170>)
 8001be0:	2200      	movs	r2, #0
 8001be2:	701a      	strb	r2, [r3, #0]
		GPS_msg_started = false;
 8001be4:	4b4a      	ldr	r3, [pc, #296]	; (8001d10 <GPS_parse+0x174>)
 8001be6:	2200      	movs	r2, #0
 8001be8:	701a      	strb	r2, [r3, #0]

		if ((GPS_sentence[2] == 'G') && (GPS_sentence[3] == 'G') && (GPS_sentence[4] == 'A')) {
 8001bea:	4b4a      	ldr	r3, [pc, #296]	; (8001d14 <GPS_parse+0x178>)
 8001bec:	789b      	ldrb	r3, [r3, #2]
 8001bee:	2b47      	cmp	r3, #71	; 0x47
 8001bf0:	d000      	beq.n	8001bf4 <GPS_parse+0x58>
 8001bf2:	e084      	b.n	8001cfe <GPS_parse+0x162>
 8001bf4:	4b47      	ldr	r3, [pc, #284]	; (8001d14 <GPS_parse+0x178>)
 8001bf6:	78db      	ldrb	r3, [r3, #3]
 8001bf8:	2b47      	cmp	r3, #71	; 0x47
 8001bfa:	d000      	beq.n	8001bfe <GPS_parse+0x62>
 8001bfc:	e07f      	b.n	8001cfe <GPS_parse+0x162>
 8001bfe:	4b45      	ldr	r3, [pc, #276]	; (8001d14 <GPS_parse+0x178>)
 8001c00:	791b      	ldrb	r3, [r3, #4]
 8001c02:	2b41      	cmp	r3, #65	; 0x41
 8001c04:	d000      	beq.n	8001c08 <GPS_parse+0x6c>
 8001c06:	e07a      	b.n	8001cfe <GPS_parse+0x162>
			char *token = strtok(GPS_sentence, ",");
 8001c08:	4a43      	ldr	r2, [pc, #268]	; (8001d18 <GPS_parse+0x17c>)
 8001c0a:	4b42      	ldr	r3, [pc, #264]	; (8001d14 <GPS_parse+0x178>)
 8001c0c:	0011      	movs	r1, r2
 8001c0e:	0018      	movs	r0, r3
 8001c10:	f001 fb78 	bl	8003304 <strtok>
 8001c14:	0003      	movs	r3, r0
 8001c16:	60fb      	str	r3, [r7, #12]
			int field_count = 0;
 8001c18:	2300      	movs	r3, #0
 8001c1a:	60bb      	str	r3, [r7, #8]
			while (token != NULL && field_count < 15) {
 8001c1c:	e052      	b.n	8001cc4 <GPS_parse+0x128>
				switch (field_count) {
 8001c1e:	68bb      	ldr	r3, [r7, #8]
 8001c20:	2b09      	cmp	r3, #9
 8001c22:	d845      	bhi.n	8001cb0 <GPS_parse+0x114>
 8001c24:	68bb      	ldr	r3, [r7, #8]
 8001c26:	009a      	lsls	r2, r3, #2
 8001c28:	4b3c      	ldr	r3, [pc, #240]	; (8001d1c <GPS_parse+0x180>)
 8001c2a:	18d3      	adds	r3, r2, r3
 8001c2c:	681b      	ldr	r3, [r3, #0]
 8001c2e:	469f      	mov	pc, r3
					case 2:
						GPS_lat_unsigned = GPS_parse_lat(token);
 8001c30:	68fb      	ldr	r3, [r7, #12]
 8001c32:	0018      	movs	r0, r3
 8001c34:	f7ff febc 	bl	80019b0 <GPS_parse_lat>
 8001c38:	0002      	movs	r2, r0
 8001c3a:	4b39      	ldr	r3, [pc, #228]	; (8001d20 <GPS_parse+0x184>)
 8001c3c:	601a      	str	r2, [r3, #0]
						break;
 8001c3e:	e037      	b.n	8001cb0 <GPS_parse+0x114>
					case 3:
						GPS_lat = GPS_parse_sign(token, GPS_lat_unsigned);
 8001c40:	4b37      	ldr	r3, [pc, #220]	; (8001d20 <GPS_parse+0x184>)
 8001c42:	681a      	ldr	r2, [r3, #0]
 8001c44:	68fb      	ldr	r3, [r7, #12]
 8001c46:	0011      	movs	r1, r2
 8001c48:	0018      	movs	r0, r3
 8001c4a:	f7ff ff8f 	bl	8001b6c <GPS_parse_sign>
 8001c4e:	0002      	movs	r2, r0
 8001c50:	4b34      	ldr	r3, [pc, #208]	; (8001d24 <GPS_parse+0x188>)
 8001c52:	601a      	str	r2, [r3, #0]
						break;
 8001c54:	e02c      	b.n	8001cb0 <GPS_parse+0x114>
					case 4:
						GPS_lon_unsigned = GPS_parse_lon(token);
 8001c56:	68fb      	ldr	r3, [r7, #12]
 8001c58:	0018      	movs	r0, r3
 8001c5a:	f7ff ff17 	bl	8001a8c <GPS_parse_lon>
 8001c5e:	0002      	movs	r2, r0
 8001c60:	4b31      	ldr	r3, [pc, #196]	; (8001d28 <GPS_parse+0x18c>)
 8001c62:	601a      	str	r2, [r3, #0]
						break;
 8001c64:	e024      	b.n	8001cb0 <GPS_parse+0x114>
					case 5:
						GPS_lon = GPS_parse_sign(token, GPS_lon_unsigned);
 8001c66:	4b30      	ldr	r3, [pc, #192]	; (8001d28 <GPS_parse+0x18c>)
 8001c68:	681a      	ldr	r2, [r3, #0]
 8001c6a:	68fb      	ldr	r3, [r7, #12]
 8001c6c:	0011      	movs	r1, r2
 8001c6e:	0018      	movs	r0, r3
 8001c70:	f7ff ff7c 	bl	8001b6c <GPS_parse_sign>
 8001c74:	0002      	movs	r2, r0
 8001c76:	4b2d      	ldr	r3, [pc, #180]	; (8001d2c <GPS_parse+0x190>)
 8001c78:	601a      	str	r2, [r3, #0]
						break;
 8001c7a:	e019      	b.n	8001cb0 <GPS_parse+0x114>
					case 6:
						GPS_fix = atoi(token);
 8001c7c:	68fb      	ldr	r3, [r7, #12]
 8001c7e:	0018      	movs	r0, r3
 8001c80:	f001 faf7 	bl	8003272 <atoi>
 8001c84:	0003      	movs	r3, r0
 8001c86:	b2da      	uxtb	r2, r3
 8001c88:	4b29      	ldr	r3, [pc, #164]	; (8001d30 <GPS_parse+0x194>)
 8001c8a:	701a      	strb	r2, [r3, #0]
						break;
 8001c8c:	e010      	b.n	8001cb0 <GPS_parse+0x114>
					case 7:
						GPS_sat_count = atoi(token);
 8001c8e:	68fb      	ldr	r3, [r7, #12]
 8001c90:	0018      	movs	r0, r3
 8001c92:	f001 faee 	bl	8003272 <atoi>
 8001c96:	0003      	movs	r3, r0
 8001c98:	b2da      	uxtb	r2, r3
 8001c9a:	4b26      	ldr	r3, [pc, #152]	; (8001d34 <GPS_parse+0x198>)
 8001c9c:	701a      	strb	r2, [r3, #0]
						break;
 8001c9e:	e007      	b.n	8001cb0 <GPS_parse+0x114>
					case 9:
						GPS_alt = atol(token);
 8001ca0:	68fb      	ldr	r3, [r7, #12]
 8001ca2:	0018      	movs	r0, r3
 8001ca4:	f001 faeb 	bl	800327e <atol>
 8001ca8:	0002      	movs	r2, r0
 8001caa:	4b23      	ldr	r3, [pc, #140]	; (8001d38 <GPS_parse+0x19c>)
 8001cac:	601a      	str	r2, [r3, #0]
						break;
 8001cae:	46c0      	nop			; (mov r8, r8)
				}
				token = strtok(NULL, ",");
 8001cb0:	4b19      	ldr	r3, [pc, #100]	; (8001d18 <GPS_parse+0x17c>)
 8001cb2:	0019      	movs	r1, r3
 8001cb4:	2000      	movs	r0, #0
 8001cb6:	f001 fb25 	bl	8003304 <strtok>
 8001cba:	0003      	movs	r3, r0
 8001cbc:	60fb      	str	r3, [r7, #12]
				field_count++;
 8001cbe:	68bb      	ldr	r3, [r7, #8]
 8001cc0:	3301      	adds	r3, #1
 8001cc2:	60bb      	str	r3, [r7, #8]
			while (token != NULL && field_count < 15) {
 8001cc4:	68fb      	ldr	r3, [r7, #12]
 8001cc6:	2b00      	cmp	r3, #0
 8001cc8:	d019      	beq.n	8001cfe <GPS_parse+0x162>
 8001cca:	68bb      	ldr	r3, [r7, #8]
 8001ccc:	2b0e      	cmp	r3, #14
 8001cce:	dda6      	ble.n	8001c1e <GPS_parse+0x82>
		if ((GPS_sentence[2] == 'G') && (GPS_sentence[3] == 'G') && (GPS_sentence[4] == 'A')) {
 8001cd0:	e015      	b.n	8001cfe <GPS_parse+0x162>
			}
		}
	}
	else if(GPS_msg_started && GPS_msg_id < NMEA_MAX_SENTENCE_LENGTH) {
 8001cd2:	4b0f      	ldr	r3, [pc, #60]	; (8001d10 <GPS_parse+0x174>)
 8001cd4:	781b      	ldrb	r3, [r3, #0]
 8001cd6:	2b00      	cmp	r3, #0
 8001cd8:	d012      	beq.n	8001d00 <GPS_parse+0x164>
 8001cda:	4b0c      	ldr	r3, [pc, #48]	; (8001d0c <GPS_parse+0x170>)
 8001cdc:	781b      	ldrb	r3, [r3, #0]
 8001cde:	2b51      	cmp	r3, #81	; 0x51
 8001ce0:	d80e      	bhi.n	8001d00 <GPS_parse+0x164>
		GPS_sentence[GPS_msg_id] = c;
 8001ce2:	4b0a      	ldr	r3, [pc, #40]	; (8001d0c <GPS_parse+0x170>)
 8001ce4:	781b      	ldrb	r3, [r3, #0]
 8001ce6:	0019      	movs	r1, r3
 8001ce8:	4b0a      	ldr	r3, [pc, #40]	; (8001d14 <GPS_parse+0x178>)
 8001cea:	1dfa      	adds	r2, r7, #7
 8001cec:	7812      	ldrb	r2, [r2, #0]
 8001cee:	545a      	strb	r2, [r3, r1]
		GPS_msg_id++;
 8001cf0:	4b06      	ldr	r3, [pc, #24]	; (8001d0c <GPS_parse+0x170>)
 8001cf2:	781b      	ldrb	r3, [r3, #0]
 8001cf4:	3301      	adds	r3, #1
 8001cf6:	b2da      	uxtb	r2, r3
 8001cf8:	4b04      	ldr	r3, [pc, #16]	; (8001d0c <GPS_parse+0x170>)
 8001cfa:	701a      	strb	r2, [r3, #0]
 8001cfc:	e000      	b.n	8001d00 <GPS_parse+0x164>
		if ((GPS_sentence[2] == 'G') && (GPS_sentence[3] == 'G') && (GPS_sentence[4] == 'A')) {
 8001cfe:	46c0      	nop			; (mov r8, r8)
	}
	return 0;
 8001d00:	2300      	movs	r3, #0
}
 8001d02:	0018      	movs	r0, r3
 8001d04:	46bd      	mov	sp, r7
 8001d06:	b004      	add	sp, #16
 8001d08:	bd80      	pop	{r7, pc}
 8001d0a:	46c0      	nop			; (mov r8, r8)
 8001d0c:	200000ea 	.word	0x200000ea
 8001d10:	200000eb 	.word	0x200000eb
 8001d14:	20000098 	.word	0x20000098
 8001d18:	080045a8 	.word	0x080045a8
 8001d1c:	08004634 	.word	0x08004634
 8001d20:	20000080 	.word	0x20000080
 8001d24:	20000088 	.word	0x20000088
 8001d28:	20000084 	.word	0x20000084
 8001d2c:	2000008c 	.word	0x2000008c
 8001d30:	20000095 	.word	0x20000095
 8001d34:	20000094 	.word	0x20000094
 8001d38:	20000090 	.word	0x20000090

08001d3c <RADIO_setupLoRaTX>:
#include "lora.h"

int RADIO_setupLoRaTX(uint32_t frequency, int32_t offset, uint8_t modParam1,
	uint8_t modParam2, uint8_t modParam3, uint8_t modParam4, uint8_t device) {
 8001d3c:	b5b0      	push	{r4, r5, r7, lr}
 8001d3e:	b08c      	sub	sp, #48	; 0x30
 8001d40:	af02      	add	r7, sp, #8
 8001d42:	60f8      	str	r0, [r7, #12]
 8001d44:	60b9      	str	r1, [r7, #8]
 8001d46:	0019      	movs	r1, r3
 8001d48:	1dfb      	adds	r3, r7, #7
 8001d4a:	701a      	strb	r2, [r3, #0]
 8001d4c:	1dbb      	adds	r3, r7, #6
 8001d4e:	1c0a      	adds	r2, r1, #0
 8001d50:	701a      	strb	r2, [r3, #0]

	sx126x_status_t status = sx126x_set_standby(0, SX126X_STANDBY_CFG_RC);
 8001d52:	2527      	movs	r5, #39	; 0x27
 8001d54:	197c      	adds	r4, r7, r5
 8001d56:	2100      	movs	r1, #0
 8001d58:	2000      	movs	r0, #0
 8001d5a:	f000 fadd 	bl	8002318 <sx126x_set_standby>
 8001d5e:	0003      	movs	r3, r0
 8001d60:	7023      	strb	r3, [r4, #0]


	if(status == SX126X_STATUS_OK)
 8001d62:	197b      	adds	r3, r7, r5
 8001d64:	781b      	ldrb	r3, [r3, #0]
 8001d66:	2b00      	cmp	r3, #0
 8001d68:	d106      	bne.n	8001d78 <RADIO_setupLoRaTX+0x3c>
		status = sx126x_set_reg_mode(0, SX126X_REG_MODE_DCDC);
 8001d6a:	197c      	adds	r4, r7, r5
 8001d6c:	2101      	movs	r1, #1
 8001d6e:	2000      	movs	r0, #0
 8001d70:	f000 fb35 	bl	80023de <sx126x_set_reg_mode>
 8001d74:	0003      	movs	r3, r0
 8001d76:	7023      	strb	r3, [r4, #0]

	sx126x_pa_cfg_params_t sx126x_pa_cfg_params_d;
	sx126x_pa_cfg_params_d.pa_duty_cycle = 0x04;
 8001d78:	2120      	movs	r1, #32
 8001d7a:	187b      	adds	r3, r7, r1
 8001d7c:	2204      	movs	r2, #4
 8001d7e:	701a      	strb	r2, [r3, #0]
	sx126x_pa_cfg_params_d.hp_max 	  	 = 0x07;
 8001d80:	187b      	adds	r3, r7, r1
 8001d82:	2207      	movs	r2, #7
 8001d84:	705a      	strb	r2, [r3, #1]
	sx126x_pa_cfg_params_d.device_sel 	 = 0x00;
 8001d86:	187b      	adds	r3, r7, r1
 8001d88:	2200      	movs	r2, #0
 8001d8a:	709a      	strb	r2, [r3, #2]
	sx126x_pa_cfg_params_d.pa_lut 	  	 = 0x01;
 8001d8c:	187b      	adds	r3, r7, r1
 8001d8e:	2201      	movs	r2, #1
 8001d90:	70da      	strb	r2, [r3, #3]
	if(status == SX126X_STATUS_OK)
 8001d92:	2227      	movs	r2, #39	; 0x27
 8001d94:	18bb      	adds	r3, r7, r2
 8001d96:	781b      	ldrb	r3, [r3, #0]
 8001d98:	2b00      	cmp	r3, #0
 8001d9a:	d107      	bne.n	8001dac <RADIO_setupLoRaTX+0x70>
			status = sx126x_set_pa_cfg(0, &sx126x_pa_cfg_params_d);
 8001d9c:	18bc      	adds	r4, r7, r2
 8001d9e:	187b      	adds	r3, r7, r1
 8001da0:	0019      	movs	r1, r3
 8001da2:	2000      	movs	r0, #0
 8001da4:	f000 fb3a 	bl	800241c <sx126x_set_pa_cfg>
 8001da8:	0003      	movs	r3, r0
 8001daa:	7023      	strb	r3, [r4, #0]

	if(status == SX126X_STATUS_OK)
 8001dac:	2327      	movs	r3, #39	; 0x27
 8001dae:	18fb      	adds	r3, r7, r3
 8001db0:	781b      	ldrb	r3, [r3, #0]
 8001db2:	2b00      	cmp	r3, #0
 8001db4:	d102      	bne.n	8001dbc <RADIO_setupLoRaTX+0x80>
			//status = sx126x_set_dio3_as_tcxo_ctrl(0, SX126X_TCXO_CTRL_3_3V, 100);
	HW_DelayMs(5);
 8001db6:	2005      	movs	r0, #5
 8001db8:	f001 f8c8 	bl	8002f4c <HW_DelayMs>

	if(status == SX126X_STATUS_OK)
 8001dbc:	2227      	movs	r2, #39	; 0x27
 8001dbe:	18bb      	adds	r3, r7, r2
 8001dc0:	781b      	ldrb	r3, [r3, #0]
 8001dc2:	2b00      	cmp	r3, #0
 8001dc4:	d10e      	bne.n	8001de4 <RADIO_setupLoRaTX+0xa8>
			//status = sx126x_cal(0, SX126X_CAL_ALL);	//is required after setting TCXO

	if(status == SX126X_STATUS_OK)
 8001dc6:	18bb      	adds	r3, r7, r2
 8001dc8:	781b      	ldrb	r3, [r3, #0]
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d10a      	bne.n	8001de4 <RADIO_setupLoRaTX+0xa8>
			//status = sx126x_cal_img(0, frequency);

	if(status == SX126X_STATUS_OK)
 8001dce:	18bb      	adds	r3, r7, r2
 8001dd0:	781b      	ldrb	r3, [r3, #0]
 8001dd2:	2b00      	cmp	r3, #0
 8001dd4:	d106      	bne.n	8001de4 <RADIO_setupLoRaTX+0xa8>
			status = sx126x_set_dio2_as_rf_sw_ctrl(0, true);
 8001dd6:	18bc      	adds	r4, r7, r2
 8001dd8:	2101      	movs	r1, #1
 8001dda:	2000      	movs	r0, #0
 8001ddc:	f000 fcb0 	bl	8002740 <sx126x_set_dio2_as_rf_sw_ctrl>
 8001de0:	0003      	movs	r3, r0
 8001de2:	7023      	strb	r3, [r4, #0]

	if(status == SX126X_STATUS_OK)
 8001de4:	2227      	movs	r2, #39	; 0x27
 8001de6:	18bb      	adds	r3, r7, r2
 8001de8:	781b      	ldrb	r3, [r3, #0]
 8001dea:	2b00      	cmp	r3, #0
 8001dec:	d106      	bne.n	8001dfc <RADIO_setupLoRaTX+0xc0>
			status = sx126x_set_pkt_type(0, SX126X_PKT_TYPE_LORA);
 8001dee:	18bc      	adds	r4, r7, r2
 8001df0:	2101      	movs	r1, #1
 8001df2:	2000      	movs	r0, #0
 8001df4:	f000 fd08 	bl	8002808 <sx126x_set_pkt_type>
 8001df8:	0003      	movs	r3, r0
 8001dfa:	7023      	strb	r3, [r4, #0]

	if(status == SX126X_STATUS_OK)
 8001dfc:	2227      	movs	r2, #39	; 0x27
 8001dfe:	18bb      	adds	r3, r7, r2
 8001e00:	781b      	ldrb	r3, [r3, #0]
 8001e02:	2b00      	cmp	r3, #0
 8001e04:	d107      	bne.n	8001e16 <RADIO_setupLoRaTX+0xda>
			status = sx126x_set_rf_freq(0, frequency);
 8001e06:	18bc      	adds	r4, r7, r2
 8001e08:	68fb      	ldr	r3, [r7, #12]
 8001e0a:	0019      	movs	r1, r3
 8001e0c:	2000      	movs	r0, #0
 8001e0e:	f000 fcb7 	bl	8002780 <sx126x_set_rf_freq>
 8001e12:	0003      	movs	r3, r0
 8001e14:	7023      	strb	r3, [r4, #0]

	sx126x_mod_params_lora_t sx126x_mod_params_lora_d;
	sx126x_mod_params_lora_d.bw   = modParam2;
 8001e16:	211c      	movs	r1, #28
 8001e18:	187b      	adds	r3, r7, r1
 8001e1a:	1dba      	adds	r2, r7, #6
 8001e1c:	7812      	ldrb	r2, [r2, #0]
 8001e1e:	705a      	strb	r2, [r3, #1]
	sx126x_mod_params_lora_d.cr   = modParam3;
 8001e20:	187a      	adds	r2, r7, r1
 8001e22:	2338      	movs	r3, #56	; 0x38
 8001e24:	18fb      	adds	r3, r7, r3
 8001e26:	781b      	ldrb	r3, [r3, #0]
 8001e28:	7093      	strb	r3, [r2, #2]
	sx126x_mod_params_lora_d.ldro = modParam4;
 8001e2a:	187b      	adds	r3, r7, r1
 8001e2c:	223c      	movs	r2, #60	; 0x3c
 8001e2e:	18ba      	adds	r2, r7, r2
 8001e30:	7812      	ldrb	r2, [r2, #0]
 8001e32:	70da      	strb	r2, [r3, #3]
	sx126x_mod_params_lora_d.sf   = modParam1;
 8001e34:	187b      	adds	r3, r7, r1
 8001e36:	1dfa      	adds	r2, r7, #7
 8001e38:	7812      	ldrb	r2, [r2, #0]
 8001e3a:	701a      	strb	r2, [r3, #0]
	if(status == SX126X_STATUS_OK)
 8001e3c:	2227      	movs	r2, #39	; 0x27
 8001e3e:	18bb      	adds	r3, r7, r2
 8001e40:	781b      	ldrb	r3, [r3, #0]
 8001e42:	2b00      	cmp	r3, #0
 8001e44:	d107      	bne.n	8001e56 <RADIO_setupLoRaTX+0x11a>
			status = sx126x_set_lora_mod_params(0, &sx126x_mod_params_lora_d);
 8001e46:	18bc      	adds	r4, r7, r2
 8001e48:	187b      	adds	r3, r7, r1
 8001e4a:	0019      	movs	r1, r3
 8001e4c:	2000      	movs	r0, #0
 8001e4e:	f000 fd2b 	bl	80028a8 <sx126x_set_lora_mod_params>
 8001e52:	0003      	movs	r3, r0
 8001e54:	7023      	strb	r3, [r4, #0]
	if(status == SX126X_STATUS_OK)
 8001e56:	2227      	movs	r2, #39	; 0x27
 8001e58:	18bb      	adds	r3, r7, r2
 8001e5a:	781b      	ldrb	r3, [r3, #0]
 8001e5c:	2b00      	cmp	r3, #0
 8001e5e:	d107      	bne.n	8001e70 <RADIO_setupLoRaTX+0x134>
			status = sx126x_set_buffer_base_address(0, 0, 0);
 8001e60:	18bc      	adds	r4, r7, r2
 8001e62:	2200      	movs	r2, #0
 8001e64:	2100      	movs	r1, #0
 8001e66:	2000      	movs	r0, #0
 8001e68:	f000 fdec 	bl	8002a44 <sx126x_set_buffer_base_address>
 8001e6c:	0003      	movs	r3, r0
 8001e6e:	7023      	strb	r3, [r4, #0]

	sx126x_pkt_params_lora_t sx126x_pkt_params_lora_d;
	sx126x_pkt_params_lora_d.crc_is_on 				= true;
 8001e70:	2114      	movs	r1, #20
 8001e72:	187b      	adds	r3, r7, r1
 8001e74:	2201      	movs	r2, #1
 8001e76:	711a      	strb	r2, [r3, #4]
	sx126x_pkt_params_lora_d.header_type 			= SX126X_LORA_PKT_EXPLICIT;
 8001e78:	187b      	adds	r3, r7, r1
 8001e7a:	2200      	movs	r2, #0
 8001e7c:	709a      	strb	r2, [r3, #2]
	sx126x_pkt_params_lora_d.invert_iq_is_on 		= false;
 8001e7e:	187b      	adds	r3, r7, r1
 8001e80:	2200      	movs	r2, #0
 8001e82:	715a      	strb	r2, [r3, #5]
	sx126x_pkt_params_lora_d.pld_len_in_bytes 		= 255;
 8001e84:	187b      	adds	r3, r7, r1
 8001e86:	22ff      	movs	r2, #255	; 0xff
 8001e88:	70da      	strb	r2, [r3, #3]
	sx126x_pkt_params_lora_d.preamble_len_in_symb 	= 8;
 8001e8a:	187b      	adds	r3, r7, r1
 8001e8c:	2208      	movs	r2, #8
 8001e8e:	801a      	strh	r2, [r3, #0]
	if(status == SX126X_STATUS_OK)
 8001e90:	2227      	movs	r2, #39	; 0x27
 8001e92:	18bb      	adds	r3, r7, r2
 8001e94:	781b      	ldrb	r3, [r3, #0]
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	d107      	bne.n	8001eaa <RADIO_setupLoRaTX+0x16e>
			status = sx126x_set_lora_pkt_params(0, &sx126x_pkt_params_lora_d);
 8001e9a:	18bc      	adds	r4, r7, r2
 8001e9c:	187b      	adds	r3, r7, r1
 8001e9e:	0019      	movs	r1, r3
 8001ea0:	2000      	movs	r0, #0
 8001ea2:	f000 fd47 	bl	8002934 <sx126x_set_lora_pkt_params>
 8001ea6:	0003      	movs	r3, r0
 8001ea8:	7023      	strb	r3, [r4, #0]

	if(status == SX126X_STATUS_OK)
 8001eaa:	2227      	movs	r2, #39	; 0x27
 8001eac:	18bb      	adds	r3, r7, r2
 8001eae:	781b      	ldrb	r3, [r3, #0]
 8001eb0:	2b00      	cmp	r3, #0
 8001eb2:	d10a      	bne.n	8001eca <RADIO_setupLoRaTX+0x18e>
			status = sx126x_set_dio_irq_params(0, SX126X_IRQ_ALL,
 8001eb4:	18bc      	adds	r4, r7, r2
 8001eb6:	4a0b      	ldr	r2, [pc, #44]	; (8001ee4 <RADIO_setupLoRaTX+0x1a8>)
 8001eb8:	490b      	ldr	r1, [pc, #44]	; (8001ee8 <RADIO_setupLoRaTX+0x1ac>)
 8001eba:	2300      	movs	r3, #0
 8001ebc:	9300      	str	r3, [sp, #0]
 8001ebe:	2300      	movs	r3, #0
 8001ec0:	2000      	movs	r0, #0
 8001ec2:	f000 fb76 	bl	80025b2 <sx126x_set_dio_irq_params>
 8001ec6:	0003      	movs	r3, r0
 8001ec8:	7023      	strb	r3, [r4, #0]
								(SX126X_IRQ_TX_DONE + SX126X_IRQ_TIMEOUT+ SX126X_IRQ_RX_DONE),
								 SX126X_IRQ_NONE, SX126X_IRQ_NONE);

	if(status == SX126X_STATUS_OK)
 8001eca:	2327      	movs	r3, #39	; 0x27
 8001ecc:	18fb      	adds	r3, r7, r3
 8001ece:	781b      	ldrb	r3, [r3, #0]
 8001ed0:	2b00      	cmp	r3, #0
 8001ed2:	d101      	bne.n	8001ed8 <RADIO_setupLoRaTX+0x19c>
		return 0;
 8001ed4:	2300      	movs	r3, #0
 8001ed6:	e000      	b.n	8001eda <RADIO_setupLoRaTX+0x19e>

	return 1;
 8001ed8:	2301      	movs	r3, #1
}
 8001eda:	0018      	movs	r0, r3
 8001edc:	46bd      	mov	sp, r7
 8001ede:	b00a      	add	sp, #40	; 0x28
 8001ee0:	bdb0      	pop	{r4, r5, r7, pc}
 8001ee2:	46c0      	nop			; (mov r8, r8)
 8001ee4:	00000203 	.word	0x00000203
 8001ee8:	000003ff 	.word	0x000003ff

08001eec <RADIO_modeLORA>:


int RADIO_modeLORA(uint32_t frequency, int8_t txpower) {
 8001eec:	b5b0      	push	{r4, r5, r7, lr}
 8001eee:	b088      	sub	sp, #32
 8001ef0:	af04      	add	r7, sp, #16
 8001ef2:	6078      	str	r0, [r7, #4]
 8001ef4:	000a      	movs	r2, r1
 8001ef6:	1cfb      	adds	r3, r7, #3
 8001ef8:	701a      	strb	r2, [r3, #0]
	sx126x_status_t status = sx126x_clear_irq_status(0, SX126X_IRQ_ALL);
 8001efa:	250f      	movs	r5, #15
 8001efc:	197c      	adds	r4, r7, r5
 8001efe:	4b1b      	ldr	r3, [pc, #108]	; (8001f6c <RADIO_modeLORA+0x80>)
 8001f00:	0019      	movs	r1, r3
 8001f02:	2000      	movs	r0, #0
 8001f04:	f000 fbee 	bl	80026e4 <sx126x_clear_irq_status>
 8001f08:	0003      	movs	r3, r0
 8001f0a:	7023      	strb	r3, [r4, #0]

	if(status == SX126X_STATUS_OK){
 8001f0c:	002c      	movs	r4, r5
 8001f0e:	193b      	adds	r3, r7, r4
 8001f10:	781b      	ldrb	r3, [r3, #0]
 8001f12:	2b00      	cmp	r3, #0
 8001f14:	d10e      	bne.n	8001f34 <RADIO_modeLORA+0x48>
		status = (sx126x_status_t)RADIO_setupLoRaTX(frequency, 0, SX126X_LORA_SF8, SX126X_LORA_BW_125, SX126X_LORA_CR_4_5,
 8001f16:	6878      	ldr	r0, [r7, #4]
 8001f18:	2302      	movs	r3, #2
 8001f1a:	9302      	str	r3, [sp, #8]
 8001f1c:	2302      	movs	r3, #2
 8001f1e:	9301      	str	r3, [sp, #4]
 8001f20:	2301      	movs	r3, #1
 8001f22:	9300      	str	r3, [sp, #0]
 8001f24:	2304      	movs	r3, #4
 8001f26:	2208      	movs	r2, #8
 8001f28:	2100      	movs	r1, #0
 8001f2a:	f7ff ff07 	bl	8001d3c <RADIO_setupLoRaTX>
 8001f2e:	0002      	movs	r2, r0
 8001f30:	193b      	adds	r3, r7, r4
 8001f32:	701a      	strb	r2, [r3, #0]
							0x02, 0x02);
	}

	if(status == SX126X_STATUS_OK){
 8001f34:	220f      	movs	r2, #15
 8001f36:	18bb      	adds	r3, r7, r2
 8001f38:	781b      	ldrb	r3, [r3, #0]
 8001f3a:	2b00      	cmp	r3, #0
 8001f3c:	d10a      	bne.n	8001f54 <RADIO_modeLORA+0x68>
		status = sx126x_set_tx_params(0, txpower, SX126X_RAMP_10_US);
 8001f3e:	18bc      	adds	r4, r7, r2
 8001f40:	1cfb      	adds	r3, r7, #3
 8001f42:	781b      	ldrb	r3, [r3, #0]
 8001f44:	b25b      	sxtb	r3, r3
 8001f46:	2200      	movs	r2, #0
 8001f48:	0019      	movs	r1, r3
 8001f4a:	2000      	movs	r0, #0
 8001f4c:	f000 fc7c 	bl	8002848 <sx126x_set_tx_params>
 8001f50:	0003      	movs	r3, r0
 8001f52:	7023      	strb	r3, [r4, #0]
	}

	if(status == SX126X_STATUS_OK)
 8001f54:	230f      	movs	r3, #15
 8001f56:	18fb      	adds	r3, r7, r3
 8001f58:	781b      	ldrb	r3, [r3, #0]
 8001f5a:	2b00      	cmp	r3, #0
 8001f5c:	d101      	bne.n	8001f62 <RADIO_modeLORA+0x76>
		return 0;
 8001f5e:	2300      	movs	r3, #0
 8001f60:	e000      	b.n	8001f64 <RADIO_modeLORA+0x78>

	return 1;
 8001f62:	2301      	movs	r3, #1
}
 8001f64:	0018      	movs	r0, r3
 8001f66:	46bd      	mov	sp, r7
 8001f68:	b004      	add	sp, #16
 8001f6a:	bdb0      	pop	{r4, r5, r7, pc}
 8001f6c:	000003ff 	.word	0x000003ff

08001f70 <RADIO_init>:

int RADIO_init()
{
 8001f70:	b580      	push	{r7, lr}
 8001f72:	af00      	add	r7, sp, #0
	//SX126X_initIO();
	sx126x_set_trimming_capacitor_values(0, 0, 0);
 8001f74:	2200      	movs	r2, #0
 8001f76:	2100      	movs	r1, #0
 8001f78:	2000      	movs	r0, #0
 8001f7a:	f000 fdc7 	bl	8002b0c <sx126x_set_trimming_capacitor_values>
	sx126x_set_dio2_as_rf_sw_ctrl(0, true);
 8001f7e:	2101      	movs	r1, #1
 8001f80:	2000      	movs	r0, #0
 8001f82:	f000 fbdd 	bl	8002740 <sx126x_set_dio2_as_rf_sw_ctrl>
	HW_DelayMs(20);
 8001f86:	2014      	movs	r0, #20
 8001f88:	f000 ffe0 	bl	8002f4c <HW_DelayMs>

	RADIO_modeLORA(433000000UL, 0);
 8001f8c:	4b04      	ldr	r3, [pc, #16]	; (8001fa0 <RADIO_init+0x30>)
 8001f8e:	2100      	movs	r1, #0
 8001f90:	0018      	movs	r0, r3
 8001f92:	f7ff ffab 	bl	8001eec <RADIO_modeLORA>

	return 0;
 8001f96:	2300      	movs	r3, #0
}
 8001f98:	0018      	movs	r0, r3
 8001f9a:	46bd      	mov	sp, r7
 8001f9c:	bd80      	pop	{r7, pc}
 8001f9e:	46c0      	nop			; (mov r8, r8)
 8001fa0:	19cf0e40 	.word	0x19cf0e40

08001fa4 <RADIO_readIrqStatus>:




uint16_t RADIO_readIrqStatus(){
 8001fa4:	b580      	push	{r7, lr}
 8001fa6:	b082      	sub	sp, #8
 8001fa8:	af00      	add	r7, sp, #0
	uint16_t res = 0;
 8001faa:	1dbb      	adds	r3, r7, #6
 8001fac:	2200      	movs	r2, #0
 8001fae:	801a      	strh	r2, [r3, #0]
	sx126x_get_irq_status(0, (sx126x_irq_mask_t*) &res );
 8001fb0:	1dbb      	adds	r3, r7, #6
 8001fb2:	0019      	movs	r1, r3
 8001fb4:	2000      	movs	r0, #0
 8001fb6:	f000 fb5d 	bl	8002674 <sx126x_get_irq_status>

	return res;
 8001fba:	1dbb      	adds	r3, r7, #6
 8001fbc:	881b      	ldrh	r3, [r3, #0]
}
 8001fbe:	0018      	movs	r0, r3
 8001fc0:	46bd      	mov	sp, r7
 8001fc2:	b002      	add	sp, #8
 8001fc4:	bd80      	pop	{r7, pc}
	...

08001fc8 <RADIO_sendPacketLoRa>:

int RADIO_sendPacketLoRa(uint8_t *txbuffer, uint16_t size, uint32_t txtimeout) {
 8001fc8:	b590      	push	{r4, r7, lr}
 8001fca:	b089      	sub	sp, #36	; 0x24
 8001fcc:	af00      	add	r7, sp, #0
 8001fce:	60f8      	str	r0, [r7, #12]
 8001fd0:	607a      	str	r2, [r7, #4]
 8001fd2:	200a      	movs	r0, #10
 8001fd4:	183b      	adds	r3, r7, r0
 8001fd6:	1c0a      	adds	r2, r1, #0
 8001fd8:	801a      	strh	r2, [r3, #0]
	if ((size == 0) || (size > 256)) {
 8001fda:	0002      	movs	r2, r0
 8001fdc:	18bb      	adds	r3, r7, r2
 8001fde:	881b      	ldrh	r3, [r3, #0]
 8001fe0:	2b00      	cmp	r3, #0
 8001fe2:	d005      	beq.n	8001ff0 <RADIO_sendPacketLoRa+0x28>
 8001fe4:	18bb      	adds	r3, r7, r2
 8001fe6:	881a      	ldrh	r2, [r3, #0]
 8001fe8:	2380      	movs	r3, #128	; 0x80
 8001fea:	005b      	lsls	r3, r3, #1
 8001fec:	429a      	cmp	r2, r3
 8001fee:	d901      	bls.n	8001ff4 <RADIO_sendPacketLoRa+0x2c>
		return 1;
 8001ff0:	2301      	movs	r3, #1
 8001ff2:	e05a      	b.n	80020aa <RADIO_sendPacketLoRa+0xe2>
	}

	sx126x_set_standby(0, SX126X_STANDBY_CFG_RC);
 8001ff4:	2100      	movs	r1, #0
 8001ff6:	2000      	movs	r0, #0
 8001ff8:	f000 f98e 	bl	8002318 <sx126x_set_standby>

	sx126x_set_buffer_base_address(0, 0, 0);
 8001ffc:	2200      	movs	r2, #0
 8001ffe:	2100      	movs	r1, #0
 8002000:	2000      	movs	r0, #0
 8002002:	f000 fd1f 	bl	8002a44 <sx126x_set_buffer_base_address>

	sx126x_write_buffer(0, 0, txbuffer,	size);
 8002006:	240a      	movs	r4, #10
 8002008:	193b      	adds	r3, r7, r4
 800200a:	881b      	ldrh	r3, [r3, #0]
 800200c:	b2db      	uxtb	r3, r3
 800200e:	68fa      	ldr	r2, [r7, #12]
 8002010:	2100      	movs	r1, #0
 8002012:	2000      	movs	r0, #0
 8002014:	f000 faa3 	bl	800255e <sx126x_write_buffer>

	sx126x_pkt_params_lora_t sx126x_pkt_params_lora_d;
	sx126x_pkt_params_lora_d.crc_is_on 				= true;
 8002018:	2118      	movs	r1, #24
 800201a:	187b      	adds	r3, r7, r1
 800201c:	2201      	movs	r2, #1
 800201e:	711a      	strb	r2, [r3, #4]
	sx126x_pkt_params_lora_d.header_type 			= SX126X_LORA_PKT_EXPLICIT;
 8002020:	187b      	adds	r3, r7, r1
 8002022:	2200      	movs	r2, #0
 8002024:	709a      	strb	r2, [r3, #2]
	sx126x_pkt_params_lora_d.invert_iq_is_on 		= false;
 8002026:	187b      	adds	r3, r7, r1
 8002028:	2200      	movs	r2, #0
 800202a:	715a      	strb	r2, [r3, #5]
	sx126x_pkt_params_lora_d.pld_len_in_bytes 		= size;
 800202c:	193b      	adds	r3, r7, r4
 800202e:	881b      	ldrh	r3, [r3, #0]
 8002030:	b2da      	uxtb	r2, r3
 8002032:	187b      	adds	r3, r7, r1
 8002034:	70da      	strb	r2, [r3, #3]
	sx126x_pkt_params_lora_d.preamble_len_in_symb 	= 8;
 8002036:	187b      	adds	r3, r7, r1
 8002038:	2208      	movs	r2, #8
 800203a:	801a      	strh	r2, [r3, #0]

	sx126x_set_lora_pkt_params(0, &sx126x_pkt_params_lora_d);
 800203c:	187b      	adds	r3, r7, r1
 800203e:	0019      	movs	r1, r3
 8002040:	2000      	movs	r0, #0
 8002042:	f000 fc77 	bl	8002934 <sx126x_set_lora_pkt_params>

	sx126x_set_tx(0, txtimeout);	//this starts the TX
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	0019      	movs	r1, r3
 800204a:	2000      	movs	r0, #0
 800204c:	f000 f983 	bl	8002356 <sx126x_set_tx>

	if(txtimeout){
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	2b00      	cmp	r3, #0
 8002054:	d028      	beq.n	80020a8 <RADIO_sendPacketLoRa+0xe0>
		volatile uint16_t timeout = 10000;
 8002056:	2316      	movs	r3, #22
 8002058:	18fb      	adds	r3, r7, r3
 800205a:	4a16      	ldr	r2, [pc, #88]	; (80020b4 <RADIO_sendPacketLoRa+0xec>)
 800205c:	801a      	strh	r2, [r3, #0]
		while ((!(RADIO_readIrqStatus() & SX126X_IRQ_TX_DONE)) && timeout){	//Wait for TX done
 800205e:	e00a      	b.n	8002076 <RADIO_sendPacketLoRa+0xae>
			HW_DelayMs(1);
 8002060:	2001      	movs	r0, #1
 8002062:	f000 ff73 	bl	8002f4c <HW_DelayMs>
			timeout--;
 8002066:	2116      	movs	r1, #22
 8002068:	187b      	adds	r3, r7, r1
 800206a:	881b      	ldrh	r3, [r3, #0]
 800206c:	b29b      	uxth	r3, r3
 800206e:	3b01      	subs	r3, #1
 8002070:	b29a      	uxth	r2, r3
 8002072:	187b      	adds	r3, r7, r1
 8002074:	801a      	strh	r2, [r3, #0]
		while ((!(RADIO_readIrqStatus() & SX126X_IRQ_TX_DONE)) && timeout){	//Wait for TX done
 8002076:	f7ff ff95 	bl	8001fa4 <RADIO_readIrqStatus>
 800207a:	0003      	movs	r3, r0
 800207c:	001a      	movs	r2, r3
 800207e:	2301      	movs	r3, #1
 8002080:	4013      	ands	r3, r2
 8002082:	d105      	bne.n	8002090 <RADIO_sendPacketLoRa+0xc8>
 8002084:	2316      	movs	r3, #22
 8002086:	18fb      	adds	r3, r7, r3
 8002088:	881b      	ldrh	r3, [r3, #0]
 800208a:	b29b      	uxth	r3, r3
 800208c:	2b00      	cmp	r3, #0
 800208e:	d1e7      	bne.n	8002060 <RADIO_sendPacketLoRa+0x98>
		}

		if (RADIO_readIrqStatus() & SX126X_IRQ_TIMEOUT) {        //check for timeout
 8002090:	f7ff ff88 	bl	8001fa4 <RADIO_readIrqStatus>
 8002094:	0003      	movs	r3, r0
 8002096:	001a      	movs	r2, r3
 8002098:	2380      	movs	r3, #128	; 0x80
 800209a:	009b      	lsls	r3, r3, #2
 800209c:	4013      	ands	r3, r2
 800209e:	d001      	beq.n	80020a4 <RADIO_sendPacketLoRa+0xdc>
			return 1;
 80020a0:	2301      	movs	r3, #1
 80020a2:	e002      	b.n	80020aa <RADIO_sendPacketLoRa+0xe2>
		} else {
			return 0;
 80020a4:	2300      	movs	r3, #0
 80020a6:	e000      	b.n	80020aa <RADIO_sendPacketLoRa+0xe2>
		}
	}

	return 0;
 80020a8:	2300      	movs	r3, #0
}
 80020aa:	0018      	movs	r0, r3
 80020ac:	46bd      	mov	sp, r7
 80020ae:	b009      	add	sp, #36	; 0x24
 80020b0:	bd90      	pop	{r4, r7, pc}
 80020b2:	46c0      	nop			; (mov r8, r8)
 80020b4:	00002710 	.word	0x00002710

080020b8 <read_analogSensors>:
volatile char uartReceivedByte = '\0';
DataPackageRF_t telemetryPacket;

uint8_t vbat;

void read_analogSensors(uint8_t *voltage) {
 80020b8:	b580      	push	{r7, lr}
 80020ba:	b082      	sub	sp, #8
 80020bc:	af00      	add	r7, sp, #0
 80020be:	6078      	str	r0, [r7, #4]
	*voltage = (uint32_t)((HW_readADC(3)*1000 / 4095 * 33 * 3) / 1000); //Returns battery voltage * 10
 80020c0:	2003      	movs	r0, #3
 80020c2:	f001 f899 	bl	80031f8 <HW_readADC>
 80020c6:	0002      	movs	r2, r0
 80020c8:	0013      	movs	r3, r2
 80020ca:	015b      	lsls	r3, r3, #5
 80020cc:	1a9b      	subs	r3, r3, r2
 80020ce:	009b      	lsls	r3, r3, #2
 80020d0:	189b      	adds	r3, r3, r2
 80020d2:	00db      	lsls	r3, r3, #3
 80020d4:	490b      	ldr	r1, [pc, #44]	; (8002104 <read_analogSensors+0x4c>)
 80020d6:	0018      	movs	r0, r3
 80020d8:	f7fe f8a8 	bl	800022c <__divsi3>
 80020dc:	0003      	movs	r3, r0
 80020de:	001a      	movs	r2, r3
 80020e0:	0013      	movs	r3, r2
 80020e2:	005b      	lsls	r3, r3, #1
 80020e4:	189b      	adds	r3, r3, r2
 80020e6:	015a      	lsls	r2, r3, #5
 80020e8:	189b      	adds	r3, r3, r2
 80020ea:	22fa      	movs	r2, #250	; 0xfa
 80020ec:	0091      	lsls	r1, r2, #2
 80020ee:	0018      	movs	r0, r3
 80020f0:	f7fe f89c 	bl	800022c <__divsi3>
 80020f4:	0003      	movs	r3, r0
 80020f6:	b2da      	uxtb	r2, r3
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	701a      	strb	r2, [r3, #0]
}
 80020fc:	46c0      	nop			; (mov r8, r8)
 80020fe:	46bd      	mov	sp, r7
 8002100:	b002      	add	sp, #8
 8002102:	bd80      	pop	{r7, pc}
 8002104:	00000fff 	.word	0x00000fff

08002108 <pack_data>:

void pack_data() {
 8002108:	b5b0      	push	{r4, r5, r7, lr}
 800210a:	af00      	add	r7, sp, #0
	read_analogSensors(&vbat);
 800210c:	4b54      	ldr	r3, [pc, #336]	; (8002260 <pack_data+0x158>)
 800210e:	0018      	movs	r0, r3
 8002110:	f7ff ffd2 	bl	80020b8 <read_analogSensors>
	telemetryPacket.vbat_10 = vbat;
 8002114:	4b52      	ldr	r3, [pc, #328]	; (8002260 <pack_data+0x158>)
 8002116:	781a      	ldrb	r2, [r3, #0]
 8002118:	4b52      	ldr	r3, [pc, #328]	; (8002264 <pack_data+0x15c>)
 800211a:	731a      	strb	r2, [r3, #12]
	telemetryPacket.packet_id = 0x00AA; //We specify what type of frame we're sending, in this case the big 48 byte struct
 800211c:	4b51      	ldr	r3, [pc, #324]	; (8002264 <pack_data+0x15c>)
 800211e:	22aa      	movs	r2, #170	; 0xaa
 8002120:	801a      	strh	r2, [r3, #0]
	telemetryPacket.lat = GPS_lat;
 8002122:	4b51      	ldr	r3, [pc, #324]	; (8002268 <pack_data+0x160>)
 8002124:	681a      	ldr	r2, [r3, #0]
 8002126:	4b4f      	ldr	r3, [pc, #316]	; (8002264 <pack_data+0x15c>)
 8002128:	3323      	adds	r3, #35	; 0x23
 800212a:	21ff      	movs	r1, #255	; 0xff
 800212c:	4011      	ands	r1, r2
 800212e:	000c      	movs	r4, r1
 8002130:	7819      	ldrb	r1, [r3, #0]
 8002132:	2000      	movs	r0, #0
 8002134:	4001      	ands	r1, r0
 8002136:	1c08      	adds	r0, r1, #0
 8002138:	1c21      	adds	r1, r4, #0
 800213a:	4301      	orrs	r1, r0
 800213c:	7019      	strb	r1, [r3, #0]
 800213e:	0a11      	lsrs	r1, r2, #8
 8002140:	20ff      	movs	r0, #255	; 0xff
 8002142:	4001      	ands	r1, r0
 8002144:	000c      	movs	r4, r1
 8002146:	7859      	ldrb	r1, [r3, #1]
 8002148:	2000      	movs	r0, #0
 800214a:	4001      	ands	r1, r0
 800214c:	1c08      	adds	r0, r1, #0
 800214e:	1c21      	adds	r1, r4, #0
 8002150:	4301      	orrs	r1, r0
 8002152:	7059      	strb	r1, [r3, #1]
 8002154:	0c11      	lsrs	r1, r2, #16
 8002156:	20ff      	movs	r0, #255	; 0xff
 8002158:	4001      	ands	r1, r0
 800215a:	000c      	movs	r4, r1
 800215c:	7899      	ldrb	r1, [r3, #2]
 800215e:	2000      	movs	r0, #0
 8002160:	4001      	ands	r1, r0
 8002162:	1c08      	adds	r0, r1, #0
 8002164:	1c21      	adds	r1, r4, #0
 8002166:	4301      	orrs	r1, r0
 8002168:	7099      	strb	r1, [r3, #2]
 800216a:	0e10      	lsrs	r0, r2, #24
 800216c:	78da      	ldrb	r2, [r3, #3]
 800216e:	2100      	movs	r1, #0
 8002170:	400a      	ands	r2, r1
 8002172:	1c11      	adds	r1, r2, #0
 8002174:	1c02      	adds	r2, r0, #0
 8002176:	430a      	orrs	r2, r1
 8002178:	70da      	strb	r2, [r3, #3]
	telemetryPacket.lon = GPS_lon;
 800217a:	4b3c      	ldr	r3, [pc, #240]	; (800226c <pack_data+0x164>)
 800217c:	681a      	ldr	r2, [r3, #0]
 800217e:	4b39      	ldr	r3, [pc, #228]	; (8002264 <pack_data+0x15c>)
 8002180:	3327      	adds	r3, #39	; 0x27
 8002182:	21ff      	movs	r1, #255	; 0xff
 8002184:	4011      	ands	r1, r2
 8002186:	000c      	movs	r4, r1
 8002188:	7819      	ldrb	r1, [r3, #0]
 800218a:	2000      	movs	r0, #0
 800218c:	4001      	ands	r1, r0
 800218e:	1c08      	adds	r0, r1, #0
 8002190:	1c21      	adds	r1, r4, #0
 8002192:	4301      	orrs	r1, r0
 8002194:	7019      	strb	r1, [r3, #0]
 8002196:	0a11      	lsrs	r1, r2, #8
 8002198:	20ff      	movs	r0, #255	; 0xff
 800219a:	4001      	ands	r1, r0
 800219c:	000c      	movs	r4, r1
 800219e:	7859      	ldrb	r1, [r3, #1]
 80021a0:	2000      	movs	r0, #0
 80021a2:	4001      	ands	r1, r0
 80021a4:	1c08      	adds	r0, r1, #0
 80021a6:	1c21      	adds	r1, r4, #0
 80021a8:	4301      	orrs	r1, r0
 80021aa:	7059      	strb	r1, [r3, #1]
 80021ac:	0c11      	lsrs	r1, r2, #16
 80021ae:	20ff      	movs	r0, #255	; 0xff
 80021b0:	4001      	ands	r1, r0
 80021b2:	000c      	movs	r4, r1
 80021b4:	7899      	ldrb	r1, [r3, #2]
 80021b6:	2000      	movs	r0, #0
 80021b8:	4001      	ands	r1, r0
 80021ba:	1c08      	adds	r0, r1, #0
 80021bc:	1c21      	adds	r1, r4, #0
 80021be:	4301      	orrs	r1, r0
 80021c0:	7099      	strb	r1, [r3, #2]
 80021c2:	0e10      	lsrs	r0, r2, #24
 80021c4:	78da      	ldrb	r2, [r3, #3]
 80021c6:	2100      	movs	r1, #0
 80021c8:	400a      	ands	r2, r1
 80021ca:	1c11      	adds	r1, r2, #0
 80021cc:	1c02      	adds	r2, r0, #0
 80021ce:	430a      	orrs	r2, r1
 80021d0:	70da      	strb	r2, [r3, #3]
	telemetryPacket.alti_gps = GPS_alt * 1000; //To mm
 80021d2:	4b27      	ldr	r3, [pc, #156]	; (8002270 <pack_data+0x168>)
 80021d4:	681a      	ldr	r2, [r3, #0]
 80021d6:	0013      	movs	r3, r2
 80021d8:	015b      	lsls	r3, r3, #5
 80021da:	1a9b      	subs	r3, r3, r2
 80021dc:	009b      	lsls	r3, r3, #2
 80021de:	189b      	adds	r3, r3, r2
 80021e0:	00db      	lsls	r3, r3, #3
 80021e2:	001a      	movs	r2, r3
 80021e4:	4b1f      	ldr	r3, [pc, #124]	; (8002264 <pack_data+0x15c>)
 80021e6:	332b      	adds	r3, #43	; 0x2b
 80021e8:	21ff      	movs	r1, #255	; 0xff
 80021ea:	4011      	ands	r1, r2
 80021ec:	000c      	movs	r4, r1
 80021ee:	7819      	ldrb	r1, [r3, #0]
 80021f0:	2000      	movs	r0, #0
 80021f2:	4001      	ands	r1, r0
 80021f4:	1c08      	adds	r0, r1, #0
 80021f6:	1c21      	adds	r1, r4, #0
 80021f8:	4301      	orrs	r1, r0
 80021fa:	7019      	strb	r1, [r3, #0]
 80021fc:	0a11      	lsrs	r1, r2, #8
 80021fe:	20ff      	movs	r0, #255	; 0xff
 8002200:	4001      	ands	r1, r0
 8002202:	000c      	movs	r4, r1
 8002204:	7859      	ldrb	r1, [r3, #1]
 8002206:	2000      	movs	r0, #0
 8002208:	4001      	ands	r1, r0
 800220a:	1c08      	adds	r0, r1, #0
 800220c:	1c21      	adds	r1, r4, #0
 800220e:	4301      	orrs	r1, r0
 8002210:	7059      	strb	r1, [r3, #1]
 8002212:	0c11      	lsrs	r1, r2, #16
 8002214:	20ff      	movs	r0, #255	; 0xff
 8002216:	4001      	ands	r1, r0
 8002218:	000c      	movs	r4, r1
 800221a:	7899      	ldrb	r1, [r3, #2]
 800221c:	2000      	movs	r0, #0
 800221e:	4001      	ands	r1, r0
 8002220:	1c08      	adds	r0, r1, #0
 8002222:	1c21      	adds	r1, r4, #0
 8002224:	4301      	orrs	r1, r0
 8002226:	7099      	strb	r1, [r3, #2]
 8002228:	0e10      	lsrs	r0, r2, #24
 800222a:	78da      	ldrb	r2, [r3, #3]
 800222c:	2100      	movs	r1, #0
 800222e:	400a      	ands	r2, r1
 8002230:	1c11      	adds	r1, r2, #0
 8002232:	1c02      	adds	r2, r0, #0
 8002234:	430a      	orrs	r2, r1
 8002236:	70da      	strb	r2, [r3, #3]
	telemetryPacket.sats_fix = ((GPS_fix & 3) << 6) | (GPS_sat_count & 0x3F);
 8002238:	4b0e      	ldr	r3, [pc, #56]	; (8002274 <pack_data+0x16c>)
 800223a:	781b      	ldrb	r3, [r3, #0]
 800223c:	019b      	lsls	r3, r3, #6
 800223e:	b25a      	sxtb	r2, r3
 8002240:	4b0d      	ldr	r3, [pc, #52]	; (8002278 <pack_data+0x170>)
 8002242:	781b      	ldrb	r3, [r3, #0]
 8002244:	b25b      	sxtb	r3, r3
 8002246:	213f      	movs	r1, #63	; 0x3f
 8002248:	400b      	ands	r3, r1
 800224a:	b25b      	sxtb	r3, r3
 800224c:	4313      	orrs	r3, r2
 800224e:	b25b      	sxtb	r3, r3
 8002250:	b2d9      	uxtb	r1, r3
 8002252:	4b04      	ldr	r3, [pc, #16]	; (8002264 <pack_data+0x15c>)
 8002254:	222f      	movs	r2, #47	; 0x2f
 8002256:	5499      	strb	r1, [r3, r2]
}
 8002258:	46c0      	nop			; (mov r8, r8)
 800225a:	46bd      	mov	sp, r7
 800225c:	bdb0      	pop	{r4, r5, r7, pc}
 800225e:	46c0      	nop			; (mov r8, r8)
 8002260:	20000120 	.word	0x20000120
 8002264:	200000f0 	.word	0x200000f0
 8002268:	20000088 	.word	0x20000088
 800226c:	2000008c 	.word	0x2000008c
 8002270:	20000090 	.word	0x20000090
 8002274:	20000095 	.word	0x20000095
 8002278:	20000094 	.word	0x20000094

0800227c <send_data_lora>:

void send_data_lora(uint8_t* data) {
 800227c:	b580      	push	{r7, lr}
 800227e:	b082      	sub	sp, #8
 8002280:	af00      	add	r7, sp, #0
 8002282:	6078      	str	r0, [r7, #4]
	HW_writeLED(1);
 8002284:	2001      	movs	r0, #1
 8002286:	f000 fe87 	bl	8002f98 <HW_writeLED>
	RADIO_sendPacketLoRa(data, sizeof(DataPackageRF_t), 500);
 800228a:	23fa      	movs	r3, #250	; 0xfa
 800228c:	005a      	lsls	r2, r3, #1
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	2130      	movs	r1, #48	; 0x30
 8002292:	0018      	movs	r0, r3
 8002294:	f7ff fe98 	bl	8001fc8 <RADIO_sendPacketLoRa>
	HW_DelayMs(50);
 8002298:	2032      	movs	r0, #50	; 0x32
 800229a:	f000 fe57 	bl	8002f4c <HW_DelayMs>
	HW_writeLED(0);
 800229e:	2000      	movs	r0, #0
 80022a0:	f000 fe7a 	bl	8002f98 <HW_writeLED>
}
 80022a4:	46c0      	nop			; (mov r8, r8)
 80022a6:	46bd      	mov	sp, r7
 80022a8:	b002      	add	sp, #8
 80022aa:	bd80      	pop	{r7, pc}

080022ac <main>:

int main(void)
{
 80022ac:	b580      	push	{r7, lr}
 80022ae:	af00      	add	r7, sp, #0
	HW_trackerHwInit();
 80022b0:	f000 fe84 	bl	8002fbc <HW_trackerHwInit>
	RADIO_init();
 80022b4:	f7ff fe5c 	bl	8001f70 <RADIO_init>
	RADIO_modeLORA(TRACKER_FREQUENCY_0, TRACKER_TXPOWER_LOW);
 80022b8:	4b07      	ldr	r3, [pc, #28]	; (80022d8 <main+0x2c>)
 80022ba:	210a      	movs	r1, #10
 80022bc:	0018      	movs	r0, r3
 80022be:	f7ff fe15 	bl	8001eec <RADIO_modeLORA>

	while(1) {
		if(1==1/*GPS_sat_count > 2*/) {
			pack_data();
 80022c2:	f7ff ff21 	bl	8002108 <pack_data>
			send_data_lora(&telemetryPacket);
 80022c6:	4b05      	ldr	r3, [pc, #20]	; (80022dc <main+0x30>)
 80022c8:	0018      	movs	r0, r3
 80022ca:	f7ff ffd7 	bl	800227c <send_data_lora>
			HW_DelayMs(TRACKER_TRANSMISSION_SPACING);
 80022ce:	4b04      	ldr	r3, [pc, #16]	; (80022e0 <main+0x34>)
 80022d0:	0018      	movs	r0, r3
 80022d2:	f000 fe3b 	bl	8002f4c <HW_DelayMs>
		if(1==1/*GPS_sat_count > 2*/) {
 80022d6:	e7f4      	b.n	80022c2 <main+0x16>
 80022d8:	19d772b0 	.word	0x19d772b0
 80022dc:	200000f0 	.word	0x200000f0
 80022e0:	000005dc 	.word	0x000005dc

080022e4 <USART1_IRQHandler>:
		}
	}
}

void USART1_IRQHandler(void) {
 80022e4:	b580      	push	{r7, lr}
 80022e6:	af00      	add	r7, sp, #0
	if(USART1->ISR & USART_ISR_RXNE_RXFNE) {
 80022e8:	4b09      	ldr	r3, [pc, #36]	; (8002310 <USART1_IRQHandler+0x2c>)
 80022ea:	69db      	ldr	r3, [r3, #28]
 80022ec:	2220      	movs	r2, #32
 80022ee:	4013      	ands	r3, r2
 80022f0:	d00a      	beq.n	8002308 <USART1_IRQHandler+0x24>
		uartReceivedByte = USART1->RDR;
 80022f2:	4b07      	ldr	r3, [pc, #28]	; (8002310 <USART1_IRQHandler+0x2c>)
 80022f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022f6:	b2da      	uxtb	r2, r3
 80022f8:	4b06      	ldr	r3, [pc, #24]	; (8002314 <USART1_IRQHandler+0x30>)
 80022fa:	701a      	strb	r2, [r3, #0]
		GPS_parse(uartReceivedByte);
 80022fc:	4b05      	ldr	r3, [pc, #20]	; (8002314 <USART1_IRQHandler+0x30>)
 80022fe:	781b      	ldrb	r3, [r3, #0]
 8002300:	b2db      	uxtb	r3, r3
 8002302:	0018      	movs	r0, r3
 8002304:	f7ff fc4a 	bl	8001b9c <GPS_parse>
	}
}
 8002308:	46c0      	nop			; (mov r8, r8)
 800230a:	46bd      	mov	sp, r7
 800230c:	bd80      	pop	{r7, pc}
 800230e:	46c0      	nop			; (mov r8, r8)
 8002310:	40013800 	.word	0x40013800
 8002314:	200000ec 	.word	0x200000ec

08002318 <sx126x_set_standby>:

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_SLEEP, 0, 0 );
}

sx126x_status_t sx126x_set_standby( const void* context, const sx126x_standby_cfg_t cfg )
{
 8002318:	b580      	push	{r7, lr}
 800231a:	b086      	sub	sp, #24
 800231c:	af02      	add	r7, sp, #8
 800231e:	6078      	str	r0, [r7, #4]
 8002320:	000a      	movs	r2, r1
 8002322:	1cfb      	adds	r3, r7, #3
 8002324:	701a      	strb	r2, [r3, #0]
    uint8_t buf[SX126X_SIZE_SET_STANDBY] = { 0 };
 8002326:	210c      	movs	r1, #12
 8002328:	187b      	adds	r3, r7, r1
 800232a:	2200      	movs	r2, #0
 800232c:	801a      	strh	r2, [r3, #0]

    buf[0] = SX126X_SET_STANDBY;
 800232e:	187b      	adds	r3, r7, r1
 8002330:	2280      	movs	r2, #128	; 0x80
 8002332:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t ) cfg;
 8002334:	187b      	adds	r3, r7, r1
 8002336:	1cfa      	adds	r2, r7, #3
 8002338:	7812      	ldrb	r2, [r2, #0]
 800233a:	705a      	strb	r2, [r3, #1]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_STANDBY, 0, 0 );
 800233c:	1879      	adds	r1, r7, r1
 800233e:	6878      	ldr	r0, [r7, #4]
 8002340:	2300      	movs	r3, #0
 8002342:	9300      	str	r3, [sp, #0]
 8002344:	2300      	movs	r3, #0
 8002346:	2202      	movs	r2, #2
 8002348:	f000 fc58 	bl	8002bfc <sx126x_hal_write>
 800234c:	0003      	movs	r3, r0
}
 800234e:	0018      	movs	r0, r3
 8002350:	46bd      	mov	sp, r7
 8002352:	b004      	add	sp, #16
 8002354:	bd80      	pop	{r7, pc}

08002356 <sx126x_set_tx>:

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_FS, 0, 0 );
}

sx126x_status_t sx126x_set_tx( const void* context, const uint32_t timeout_in_ms )
{
 8002356:	b580      	push	{r7, lr}
 8002358:	b084      	sub	sp, #16
 800235a:	af00      	add	r7, sp, #0
 800235c:	6078      	str	r0, [r7, #4]
 800235e:	6039      	str	r1, [r7, #0]
    if( timeout_in_ms > SX126X_MAX_TIMEOUT_IN_MS )
 8002360:	683a      	ldr	r2, [r7, #0]
 8002362:	2380      	movs	r3, #128	; 0x80
 8002364:	02db      	lsls	r3, r3, #11
 8002366:	429a      	cmp	r2, r3
 8002368:	d301      	bcc.n	800236e <sx126x_set_tx+0x18>
    {
        return SX126X_STATUS_UNKNOWN_VALUE;
 800236a:	2302      	movs	r3, #2
 800236c:	e00c      	b.n	8002388 <sx126x_set_tx+0x32>
    }

    const uint32_t timeout_in_rtc_step = sx126x_convert_timeout_in_ms_to_rtc_step( timeout_in_ms );
 800236e:	683b      	ldr	r3, [r7, #0]
 8002370:	0018      	movs	r0, r3
 8002372:	f000 fbc1 	bl	8002af8 <sx126x_convert_timeout_in_ms_to_rtc_step>
 8002376:	0003      	movs	r3, r0
 8002378:	60fb      	str	r3, [r7, #12]

    return sx126x_set_tx_with_timeout_in_rtc_step( context, timeout_in_rtc_step );
 800237a:	68fa      	ldr	r2, [r7, #12]
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	0011      	movs	r1, r2
 8002380:	0018      	movs	r0, r3
 8002382:	f000 f805 	bl	8002390 <sx126x_set_tx_with_timeout_in_rtc_step>
 8002386:	0003      	movs	r3, r0
}
 8002388:	0018      	movs	r0, r3
 800238a:	46bd      	mov	sp, r7
 800238c:	b004      	add	sp, #16
 800238e:	bd80      	pop	{r7, pc}

08002390 <sx126x_set_tx_with_timeout_in_rtc_step>:

sx126x_status_t sx126x_set_tx_with_timeout_in_rtc_step( const void* context, const uint32_t timeout_in_rtc_step )
{
 8002390:	b580      	push	{r7, lr}
 8002392:	b086      	sub	sp, #24
 8002394:	af02      	add	r7, sp, #8
 8002396:	6078      	str	r0, [r7, #4]
 8002398:	6039      	str	r1, [r7, #0]
    uint8_t buf[SX126X_SIZE_SET_TX] = { 0 };
 800239a:	210c      	movs	r1, #12
 800239c:	187b      	adds	r3, r7, r1
 800239e:	2200      	movs	r2, #0
 80023a0:	601a      	str	r2, [r3, #0]

    buf[0] = SX126X_SET_TX;
 80023a2:	187b      	adds	r3, r7, r1
 80023a4:	2283      	movs	r2, #131	; 0x83
 80023a6:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t )( timeout_in_rtc_step >> 16 );
 80023a8:	683b      	ldr	r3, [r7, #0]
 80023aa:	0c1b      	lsrs	r3, r3, #16
 80023ac:	b2da      	uxtb	r2, r3
 80023ae:	187b      	adds	r3, r7, r1
 80023b0:	705a      	strb	r2, [r3, #1]
    buf[2] = ( uint8_t )( timeout_in_rtc_step >> 8 );
 80023b2:	683b      	ldr	r3, [r7, #0]
 80023b4:	0a1b      	lsrs	r3, r3, #8
 80023b6:	b2da      	uxtb	r2, r3
 80023b8:	187b      	adds	r3, r7, r1
 80023ba:	709a      	strb	r2, [r3, #2]
    buf[3] = ( uint8_t )( timeout_in_rtc_step >> 0 );
 80023bc:	683b      	ldr	r3, [r7, #0]
 80023be:	b2da      	uxtb	r2, r3
 80023c0:	187b      	adds	r3, r7, r1
 80023c2:	70da      	strb	r2, [r3, #3]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_TX, 0, 0 );
 80023c4:	1879      	adds	r1, r7, r1
 80023c6:	6878      	ldr	r0, [r7, #4]
 80023c8:	2300      	movs	r3, #0
 80023ca:	9300      	str	r3, [sp, #0]
 80023cc:	2300      	movs	r3, #0
 80023ce:	2204      	movs	r2, #4
 80023d0:	f000 fc14 	bl	8002bfc <sx126x_hal_write>
 80023d4:	0003      	movs	r3, r0
}
 80023d6:	0018      	movs	r0, r3
 80023d8:	46bd      	mov	sp, r7
 80023da:	b004      	add	sp, #16
 80023dc:	bd80      	pop	{r7, pc}

080023de <sx126x_set_reg_mode>:

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_TX_INFINITE_PREAMBLE, 0, 0 );
}

sx126x_status_t sx126x_set_reg_mode( const void* context, const sx126x_reg_mod_t mode )
{
 80023de:	b580      	push	{r7, lr}
 80023e0:	b086      	sub	sp, #24
 80023e2:	af02      	add	r7, sp, #8
 80023e4:	6078      	str	r0, [r7, #4]
 80023e6:	000a      	movs	r2, r1
 80023e8:	1cfb      	adds	r3, r7, #3
 80023ea:	701a      	strb	r2, [r3, #0]
    uint8_t buf[SX126X_SIZE_SET_REGULATOR_MODE] = { 0 };
 80023ec:	210c      	movs	r1, #12
 80023ee:	187b      	adds	r3, r7, r1
 80023f0:	2200      	movs	r2, #0
 80023f2:	801a      	strh	r2, [r3, #0]

    buf[0] = SX126X_SET_REGULATOR_MODE;
 80023f4:	187b      	adds	r3, r7, r1
 80023f6:	2296      	movs	r2, #150	; 0x96
 80023f8:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t ) mode;
 80023fa:	187b      	adds	r3, r7, r1
 80023fc:	1cfa      	adds	r2, r7, #3
 80023fe:	7812      	ldrb	r2, [r2, #0]
 8002400:	705a      	strb	r2, [r3, #1]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_REGULATOR_MODE, 0, 0 );
 8002402:	1879      	adds	r1, r7, r1
 8002404:	6878      	ldr	r0, [r7, #4]
 8002406:	2300      	movs	r3, #0
 8002408:	9300      	str	r3, [sp, #0]
 800240a:	2300      	movs	r3, #0
 800240c:	2202      	movs	r2, #2
 800240e:	f000 fbf5 	bl	8002bfc <sx126x_hal_write>
 8002412:	0003      	movs	r3, r0
}
 8002414:	0018      	movs	r0, r3
 8002416:	46bd      	mov	sp, r7
 8002418:	b004      	add	sp, #16
 800241a:	bd80      	pop	{r7, pc}

0800241c <sx126x_set_pa_cfg>:

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_CALIBRATE_IMAGE, 0, 0 );
}

sx126x_status_t sx126x_set_pa_cfg( const void* context, const sx126x_pa_cfg_params_t* params )
{
 800241c:	b580      	push	{r7, lr}
 800241e:	b086      	sub	sp, #24
 8002420:	af02      	add	r7, sp, #8
 8002422:	6078      	str	r0, [r7, #4]
 8002424:	6039      	str	r1, [r7, #0]
    uint8_t buf[SX126X_SIZE_SET_PA_CFG] = { 0 };
 8002426:	2108      	movs	r1, #8
 8002428:	187b      	adds	r3, r7, r1
 800242a:	2200      	movs	r2, #0
 800242c:	601a      	str	r2, [r3, #0]
 800242e:	2200      	movs	r2, #0
 8002430:	711a      	strb	r2, [r3, #4]

    buf[0] = SX126X_SET_PA_CFG;
 8002432:	187b      	adds	r3, r7, r1
 8002434:	2295      	movs	r2, #149	; 0x95
 8002436:	701a      	strb	r2, [r3, #0]

    buf[1] = params->pa_duty_cycle;
 8002438:	683b      	ldr	r3, [r7, #0]
 800243a:	781a      	ldrb	r2, [r3, #0]
 800243c:	187b      	adds	r3, r7, r1
 800243e:	705a      	strb	r2, [r3, #1]
    buf[2] = params->hp_max;
 8002440:	683b      	ldr	r3, [r7, #0]
 8002442:	785a      	ldrb	r2, [r3, #1]
 8002444:	187b      	adds	r3, r7, r1
 8002446:	709a      	strb	r2, [r3, #2]
    buf[3] = params->device_sel;
 8002448:	683b      	ldr	r3, [r7, #0]
 800244a:	789a      	ldrb	r2, [r3, #2]
 800244c:	187b      	adds	r3, r7, r1
 800244e:	70da      	strb	r2, [r3, #3]
    buf[4] = params->pa_lut;
 8002450:	683b      	ldr	r3, [r7, #0]
 8002452:	78da      	ldrb	r2, [r3, #3]
 8002454:	187b      	adds	r3, r7, r1
 8002456:	711a      	strb	r2, [r3, #4]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_PA_CFG, 0, 0 );
 8002458:	1879      	adds	r1, r7, r1
 800245a:	6878      	ldr	r0, [r7, #4]
 800245c:	2300      	movs	r3, #0
 800245e:	9300      	str	r3, [sp, #0]
 8002460:	2300      	movs	r3, #0
 8002462:	2205      	movs	r2, #5
 8002464:	f000 fbca 	bl	8002bfc <sx126x_hal_write>
 8002468:	0003      	movs	r3, r0
}
 800246a:	0018      	movs	r0, r3
 800246c:	46bd      	mov	sp, r7
 800246e:	b004      	add	sp, #16
 8002470:	bd80      	pop	{r7, pc}
	...

08002474 <sx126x_write_register>:
// Registers and buffer Access
//

sx126x_status_t sx126x_write_register( const void* context, const uint16_t address, const uint8_t* buffer,
                                       const uint8_t size )
{
 8002474:	b5b0      	push	{r4, r5, r7, lr}
 8002476:	b088      	sub	sp, #32
 8002478:	af02      	add	r7, sp, #8
 800247a:	60f8      	str	r0, [r7, #12]
 800247c:	0008      	movs	r0, r1
 800247e:	607a      	str	r2, [r7, #4]
 8002480:	0019      	movs	r1, r3
 8002482:	240a      	movs	r4, #10
 8002484:	193b      	adds	r3, r7, r4
 8002486:	1c02      	adds	r2, r0, #0
 8002488:	801a      	strh	r2, [r3, #0]
 800248a:	2509      	movs	r5, #9
 800248c:	197b      	adds	r3, r7, r5
 800248e:	1c0a      	adds	r2, r1, #0
 8002490:	701a      	strb	r2, [r3, #0]
    uint8_t buf[SX126X_SIZE_WRITE_REGISTER] = { 0 };
 8002492:	2014      	movs	r0, #20
 8002494:	183b      	adds	r3, r7, r0
 8002496:	4a13      	ldr	r2, [pc, #76]	; (80024e4 <sx126x_write_register+0x70>)
 8002498:	8812      	ldrh	r2, [r2, #0]
 800249a:	801a      	strh	r2, [r3, #0]
 800249c:	2202      	movs	r2, #2
 800249e:	2100      	movs	r1, #0
 80024a0:	5499      	strb	r1, [r3, r2]

    buf[0] = SX126X_WRITE_REGISTER;
 80024a2:	0001      	movs	r1, r0
 80024a4:	187b      	adds	r3, r7, r1
 80024a6:	220d      	movs	r2, #13
 80024a8:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t )( address >> 8 );
 80024aa:	193b      	adds	r3, r7, r4
 80024ac:	881b      	ldrh	r3, [r3, #0]
 80024ae:	0a1b      	lsrs	r3, r3, #8
 80024b0:	b29b      	uxth	r3, r3
 80024b2:	b2da      	uxtb	r2, r3
 80024b4:	187b      	adds	r3, r7, r1
 80024b6:	705a      	strb	r2, [r3, #1]
    buf[2] = ( uint8_t )( address >> 0 );
 80024b8:	193b      	adds	r3, r7, r4
 80024ba:	881b      	ldrh	r3, [r3, #0]
 80024bc:	b2da      	uxtb	r2, r3
 80024be:	187b      	adds	r3, r7, r1
 80024c0:	709a      	strb	r2, [r3, #2]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_WRITE_REGISTER, buffer, size );
 80024c2:	197b      	adds	r3, r7, r5
 80024c4:	781b      	ldrb	r3, [r3, #0]
 80024c6:	b29b      	uxth	r3, r3
 80024c8:	687a      	ldr	r2, [r7, #4]
 80024ca:	1879      	adds	r1, r7, r1
 80024cc:	68f8      	ldr	r0, [r7, #12]
 80024ce:	9300      	str	r3, [sp, #0]
 80024d0:	0013      	movs	r3, r2
 80024d2:	2203      	movs	r2, #3
 80024d4:	f000 fb92 	bl	8002bfc <sx126x_hal_write>
 80024d8:	0003      	movs	r3, r0
}
 80024da:	0018      	movs	r0, r3
 80024dc:	46bd      	mov	sp, r7
 80024de:	b006      	add	sp, #24
 80024e0:	bdb0      	pop	{r4, r5, r7, pc}
 80024e2:	46c0      	nop			; (mov r8, r8)
 80024e4:	080045b0 	.word	0x080045b0

080024e8 <sx126x_read_register>:

sx126x_status_t sx126x_read_register( const void* context, const uint16_t address, uint8_t* buffer, const uint8_t size )
{
 80024e8:	b5b0      	push	{r4, r5, r7, lr}
 80024ea:	b088      	sub	sp, #32
 80024ec:	af02      	add	r7, sp, #8
 80024ee:	60f8      	str	r0, [r7, #12]
 80024f0:	0008      	movs	r0, r1
 80024f2:	607a      	str	r2, [r7, #4]
 80024f4:	0019      	movs	r1, r3
 80024f6:	240a      	movs	r4, #10
 80024f8:	193b      	adds	r3, r7, r4
 80024fa:	1c02      	adds	r2, r0, #0
 80024fc:	801a      	strh	r2, [r3, #0]
 80024fe:	2509      	movs	r5, #9
 8002500:	197b      	adds	r3, r7, r5
 8002502:	1c0a      	adds	r2, r1, #0
 8002504:	701a      	strb	r2, [r3, #0]
    uint8_t         buf[SX126X_SIZE_READ_REGISTER] = { 0 };
 8002506:	2110      	movs	r1, #16
 8002508:	187b      	adds	r3, r7, r1
 800250a:	2200      	movs	r2, #0
 800250c:	601a      	str	r2, [r3, #0]
    sx126x_status_t status                         = SX126X_STATUS_ERROR;
 800250e:	2017      	movs	r0, #23
 8002510:	183b      	adds	r3, r7, r0
 8002512:	2203      	movs	r2, #3
 8002514:	701a      	strb	r2, [r3, #0]

    buf[0] = SX126X_READ_REGISTER;
 8002516:	187b      	adds	r3, r7, r1
 8002518:	221d      	movs	r2, #29
 800251a:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t )( address >> 8 );
 800251c:	193b      	adds	r3, r7, r4
 800251e:	881b      	ldrh	r3, [r3, #0]
 8002520:	0a1b      	lsrs	r3, r3, #8
 8002522:	b29b      	uxth	r3, r3
 8002524:	b2da      	uxtb	r2, r3
 8002526:	187b      	adds	r3, r7, r1
 8002528:	705a      	strb	r2, [r3, #1]
    buf[2] = ( uint8_t )( address >> 0 );
 800252a:	193b      	adds	r3, r7, r4
 800252c:	881b      	ldrh	r3, [r3, #0]
 800252e:	b2da      	uxtb	r2, r3
 8002530:	187b      	adds	r3, r7, r1
 8002532:	709a      	strb	r2, [r3, #2]

    status = ( sx126x_status_t ) sx126x_hal_read( context, buf, SX126X_SIZE_READ_REGISTER, buffer, size );
 8002534:	197b      	adds	r3, r7, r5
 8002536:	781b      	ldrb	r3, [r3, #0]
 8002538:	b29b      	uxth	r3, r3
 800253a:	0005      	movs	r5, r0
 800253c:	183c      	adds	r4, r7, r0
 800253e:	687a      	ldr	r2, [r7, #4]
 8002540:	1879      	adds	r1, r7, r1
 8002542:	68f8      	ldr	r0, [r7, #12]
 8002544:	9300      	str	r3, [sp, #0]
 8002546:	0013      	movs	r3, r2
 8002548:	2204      	movs	r2, #4
 800254a:	f000 fbd6 	bl	8002cfa <sx126x_hal_read>
 800254e:	0003      	movs	r3, r0
 8002550:	7023      	strb	r3, [r4, #0]

    return status;
 8002552:	197b      	adds	r3, r7, r5
 8002554:	781b      	ldrb	r3, [r3, #0]
}
 8002556:	0018      	movs	r0, r3
 8002558:	46bd      	mov	sp, r7
 800255a:	b006      	add	sp, #24
 800255c:	bdb0      	pop	{r4, r5, r7, pc}

0800255e <sx126x_write_buffer>:

sx126x_status_t sx126x_write_buffer( const void* context, const uint8_t offset, const uint8_t* buffer,
                                     const uint8_t size )
{
 800255e:	b590      	push	{r4, r7, lr}
 8002560:	b089      	sub	sp, #36	; 0x24
 8002562:	af02      	add	r7, sp, #8
 8002564:	60f8      	str	r0, [r7, #12]
 8002566:	0008      	movs	r0, r1
 8002568:	607a      	str	r2, [r7, #4]
 800256a:	0019      	movs	r1, r3
 800256c:	240b      	movs	r4, #11
 800256e:	193b      	adds	r3, r7, r4
 8002570:	1c02      	adds	r2, r0, #0
 8002572:	701a      	strb	r2, [r3, #0]
 8002574:	200a      	movs	r0, #10
 8002576:	183b      	adds	r3, r7, r0
 8002578:	1c0a      	adds	r2, r1, #0
 800257a:	701a      	strb	r2, [r3, #0]
    uint8_t buf[SX126X_SIZE_WRITE_BUFFER] = { 0 };
 800257c:	2114      	movs	r1, #20
 800257e:	187b      	adds	r3, r7, r1
 8002580:	2200      	movs	r2, #0
 8002582:	801a      	strh	r2, [r3, #0]

    buf[0] = SX126X_WRITE_BUFFER;
 8002584:	187b      	adds	r3, r7, r1
 8002586:	220e      	movs	r2, #14
 8002588:	701a      	strb	r2, [r3, #0]

    buf[1] = offset;
 800258a:	187b      	adds	r3, r7, r1
 800258c:	193a      	adds	r2, r7, r4
 800258e:	7812      	ldrb	r2, [r2, #0]
 8002590:	705a      	strb	r2, [r3, #1]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_WRITE_BUFFER, buffer, size );
 8002592:	183b      	adds	r3, r7, r0
 8002594:	781b      	ldrb	r3, [r3, #0]
 8002596:	b29b      	uxth	r3, r3
 8002598:	687a      	ldr	r2, [r7, #4]
 800259a:	1879      	adds	r1, r7, r1
 800259c:	68f8      	ldr	r0, [r7, #12]
 800259e:	9300      	str	r3, [sp, #0]
 80025a0:	0013      	movs	r3, r2
 80025a2:	2202      	movs	r2, #2
 80025a4:	f000 fb2a 	bl	8002bfc <sx126x_hal_write>
 80025a8:	0003      	movs	r3, r0
}
 80025aa:	0018      	movs	r0, r3
 80025ac:	46bd      	mov	sp, r7
 80025ae:	b007      	add	sp, #28
 80025b0:	bd90      	pop	{r4, r7, pc}

080025b2 <sx126x_set_dio_irq_params>:
//
// DIO and IRQ Control Functions
//
sx126x_status_t sx126x_set_dio_irq_params( const void* context, const uint16_t irq_mask, const uint16_t dio1_mask,
                                           const uint16_t dio2_mask, const uint16_t dio3_mask )
{
 80025b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80025b4:	b08b      	sub	sp, #44	; 0x2c
 80025b6:	af02      	add	r7, sp, #8
 80025b8:	60f8      	str	r0, [r7, #12]
 80025ba:	000c      	movs	r4, r1
 80025bc:	0010      	movs	r0, r2
 80025be:	0019      	movs	r1, r3
 80025c0:	250a      	movs	r5, #10
 80025c2:	197b      	adds	r3, r7, r5
 80025c4:	1c22      	adds	r2, r4, #0
 80025c6:	801a      	strh	r2, [r3, #0]
 80025c8:	2608      	movs	r6, #8
 80025ca:	19bb      	adds	r3, r7, r6
 80025cc:	1c02      	adds	r2, r0, #0
 80025ce:	801a      	strh	r2, [r3, #0]
 80025d0:	1dbb      	adds	r3, r7, #6
 80025d2:	1c0a      	adds	r2, r1, #0
 80025d4:	801a      	strh	r2, [r3, #0]
    uint8_t buf[SX126X_SIZE_SET_DIO_IRQ_PARAMS] = { 0 };
 80025d6:	2414      	movs	r4, #20
 80025d8:	193b      	adds	r3, r7, r4
 80025da:	2200      	movs	r2, #0
 80025dc:	601a      	str	r2, [r3, #0]
 80025de:	3304      	adds	r3, #4
 80025e0:	2205      	movs	r2, #5
 80025e2:	2100      	movs	r1, #0
 80025e4:	0018      	movs	r0, r3
 80025e6:	f000 fe84 	bl	80032f2 <memset>

    buf[0] = SX126X_SET_DIO_IRQ_PARAMS;
 80025ea:	0021      	movs	r1, r4
 80025ec:	187b      	adds	r3, r7, r1
 80025ee:	2208      	movs	r2, #8
 80025f0:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t )( irq_mask >> 8 );
 80025f2:	197b      	adds	r3, r7, r5
 80025f4:	881b      	ldrh	r3, [r3, #0]
 80025f6:	0a1b      	lsrs	r3, r3, #8
 80025f8:	b29b      	uxth	r3, r3
 80025fa:	b2da      	uxtb	r2, r3
 80025fc:	187b      	adds	r3, r7, r1
 80025fe:	705a      	strb	r2, [r3, #1]
    buf[2] = ( uint8_t )( irq_mask >> 0 );
 8002600:	197b      	adds	r3, r7, r5
 8002602:	881b      	ldrh	r3, [r3, #0]
 8002604:	b2da      	uxtb	r2, r3
 8002606:	187b      	adds	r3, r7, r1
 8002608:	709a      	strb	r2, [r3, #2]

    buf[3] = ( uint8_t )( dio1_mask >> 8 );
 800260a:	19bb      	adds	r3, r7, r6
 800260c:	881b      	ldrh	r3, [r3, #0]
 800260e:	0a1b      	lsrs	r3, r3, #8
 8002610:	b29b      	uxth	r3, r3
 8002612:	b2da      	uxtb	r2, r3
 8002614:	187b      	adds	r3, r7, r1
 8002616:	70da      	strb	r2, [r3, #3]
    buf[4] = ( uint8_t )( dio1_mask >> 0 );
 8002618:	19bb      	adds	r3, r7, r6
 800261a:	881b      	ldrh	r3, [r3, #0]
 800261c:	b2da      	uxtb	r2, r3
 800261e:	187b      	adds	r3, r7, r1
 8002620:	711a      	strb	r2, [r3, #4]

    buf[5] = ( uint8_t )( dio2_mask >> 8 );
 8002622:	1dbb      	adds	r3, r7, #6
 8002624:	881b      	ldrh	r3, [r3, #0]
 8002626:	0a1b      	lsrs	r3, r3, #8
 8002628:	b29b      	uxth	r3, r3
 800262a:	b2da      	uxtb	r2, r3
 800262c:	187b      	adds	r3, r7, r1
 800262e:	715a      	strb	r2, [r3, #5]
    buf[6] = ( uint8_t )( dio2_mask >> 0 );
 8002630:	1dbb      	adds	r3, r7, #6
 8002632:	881b      	ldrh	r3, [r3, #0]
 8002634:	b2da      	uxtb	r2, r3
 8002636:	187b      	adds	r3, r7, r1
 8002638:	719a      	strb	r2, [r3, #6]

    buf[7] = ( uint8_t )( dio3_mask >> 8 );
 800263a:	2030      	movs	r0, #48	; 0x30
 800263c:	2408      	movs	r4, #8
 800263e:	1903      	adds	r3, r0, r4
 8002640:	19db      	adds	r3, r3, r7
 8002642:	881b      	ldrh	r3, [r3, #0]
 8002644:	0a1b      	lsrs	r3, r3, #8
 8002646:	b29b      	uxth	r3, r3
 8002648:	b2da      	uxtb	r2, r3
 800264a:	187b      	adds	r3, r7, r1
 800264c:	71da      	strb	r2, [r3, #7]
    buf[8] = ( uint8_t )( dio3_mask >> 0 );
 800264e:	1903      	adds	r3, r0, r4
 8002650:	19db      	adds	r3, r3, r7
 8002652:	881b      	ldrh	r3, [r3, #0]
 8002654:	b2da      	uxtb	r2, r3
 8002656:	187b      	adds	r3, r7, r1
 8002658:	721a      	strb	r2, [r3, #8]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_DIO_IRQ_PARAMS, 0, 0 );
 800265a:	1879      	adds	r1, r7, r1
 800265c:	68f8      	ldr	r0, [r7, #12]
 800265e:	2300      	movs	r3, #0
 8002660:	9300      	str	r3, [sp, #0]
 8002662:	2300      	movs	r3, #0
 8002664:	2209      	movs	r2, #9
 8002666:	f000 fac9 	bl	8002bfc <sx126x_hal_write>
 800266a:	0003      	movs	r3, r0
}
 800266c:	0018      	movs	r0, r3
 800266e:	46bd      	mov	sp, r7
 8002670:	b009      	add	sp, #36	; 0x24
 8002672:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002674 <sx126x_get_irq_status>:

sx126x_status_t sx126x_get_irq_status( const void* context, sx126x_irq_mask_t* irq )
{
 8002674:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002676:	b087      	sub	sp, #28
 8002678:	af02      	add	r7, sp, #8
 800267a:	6078      	str	r0, [r7, #4]
 800267c:	6039      	str	r1, [r7, #0]
    uint8_t         buf[SX126X_SIZE_GET_IRQ_STATUS]        = { 0 };
 800267e:	200c      	movs	r0, #12
 8002680:	183b      	adds	r3, r7, r0
 8002682:	2200      	movs	r2, #0
 8002684:	801a      	strh	r2, [r3, #0]
    uint8_t         irq_local[sizeof( sx126x_irq_mask_t )] = { 0x00 };
 8002686:	2108      	movs	r1, #8
 8002688:	187b      	adds	r3, r7, r1
 800268a:	2200      	movs	r2, #0
 800268c:	801a      	strh	r2, [r3, #0]
    sx126x_status_t status                                 = SX126X_STATUS_ERROR;
 800268e:	260f      	movs	r6, #15
 8002690:	19bb      	adds	r3, r7, r6
 8002692:	2203      	movs	r2, #3
 8002694:	701a      	strb	r2, [r3, #0]

    buf[0] = SX126X_GET_IRQ_STATUS;
 8002696:	183b      	adds	r3, r7, r0
 8002698:	2212      	movs	r2, #18
 800269a:	701a      	strb	r2, [r3, #0]

    status = ( sx126x_status_t ) sx126x_hal_read( context, buf, SX126X_SIZE_GET_IRQ_STATUS, irq_local,
 800269c:	19bc      	adds	r4, r7, r6
 800269e:	000d      	movs	r5, r1
 80026a0:	187b      	adds	r3, r7, r1
 80026a2:	1839      	adds	r1, r7, r0
 80026a4:	6878      	ldr	r0, [r7, #4]
 80026a6:	2202      	movs	r2, #2
 80026a8:	9200      	str	r2, [sp, #0]
 80026aa:	2202      	movs	r2, #2
 80026ac:	f000 fb25 	bl	8002cfa <sx126x_hal_read>
 80026b0:	0003      	movs	r3, r0
 80026b2:	7023      	strb	r3, [r4, #0]
                                                  sizeof( sx126x_irq_mask_t ) );

    if( status == SX126X_STATUS_OK )
 80026b4:	19bb      	adds	r3, r7, r6
 80026b6:	781b      	ldrb	r3, [r3, #0]
 80026b8:	2b00      	cmp	r3, #0
 80026ba:	d10b      	bne.n	80026d4 <sx126x_get_irq_status+0x60>
    {
        *irq = ( ( sx126x_irq_mask_t ) irq_local[0] << 8 ) + ( ( sx126x_irq_mask_t ) irq_local[1] << 0 );
 80026bc:	197b      	adds	r3, r7, r5
 80026be:	781b      	ldrb	r3, [r3, #0]
 80026c0:	b29b      	uxth	r3, r3
 80026c2:	021b      	lsls	r3, r3, #8
 80026c4:	b29a      	uxth	r2, r3
 80026c6:	197b      	adds	r3, r7, r5
 80026c8:	785b      	ldrb	r3, [r3, #1]
 80026ca:	b29b      	uxth	r3, r3
 80026cc:	18d3      	adds	r3, r2, r3
 80026ce:	b29a      	uxth	r2, r3
 80026d0:	683b      	ldr	r3, [r7, #0]
 80026d2:	801a      	strh	r2, [r3, #0]
    }

    return status;
 80026d4:	230f      	movs	r3, #15
 80026d6:	18fb      	adds	r3, r7, r3
 80026d8:	781b      	ldrb	r3, [r3, #0]
}
 80026da:	0018      	movs	r0, r3
 80026dc:	46bd      	mov	sp, r7
 80026de:	b005      	add	sp, #20
 80026e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080026e4 <sx126x_clear_irq_status>:

sx126x_status_t sx126x_clear_irq_status( const void* context, const sx126x_irq_mask_t irq_mask )
{
 80026e4:	b580      	push	{r7, lr}
 80026e6:	b086      	sub	sp, #24
 80026e8:	af02      	add	r7, sp, #8
 80026ea:	6078      	str	r0, [r7, #4]
 80026ec:	000a      	movs	r2, r1
 80026ee:	1cbb      	adds	r3, r7, #2
 80026f0:	801a      	strh	r2, [r3, #0]
    uint8_t buf[SX126X_SIZE_CLR_IRQ_STATUS] = { 0 };
 80026f2:	200c      	movs	r0, #12
 80026f4:	183b      	adds	r3, r7, r0
 80026f6:	4a11      	ldr	r2, [pc, #68]	; (800273c <sx126x_clear_irq_status+0x58>)
 80026f8:	8812      	ldrh	r2, [r2, #0]
 80026fa:	801a      	strh	r2, [r3, #0]
 80026fc:	2202      	movs	r2, #2
 80026fe:	2100      	movs	r1, #0
 8002700:	5499      	strb	r1, [r3, r2]

    buf[0] = SX126X_CLR_IRQ_STATUS;
 8002702:	0001      	movs	r1, r0
 8002704:	187b      	adds	r3, r7, r1
 8002706:	2202      	movs	r2, #2
 8002708:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t )( irq_mask >> 8 );
 800270a:	1cbb      	adds	r3, r7, #2
 800270c:	881b      	ldrh	r3, [r3, #0]
 800270e:	0a1b      	lsrs	r3, r3, #8
 8002710:	b29b      	uxth	r3, r3
 8002712:	b2da      	uxtb	r2, r3
 8002714:	187b      	adds	r3, r7, r1
 8002716:	705a      	strb	r2, [r3, #1]
    buf[2] = ( uint8_t )( irq_mask >> 0 );
 8002718:	1cbb      	adds	r3, r7, #2
 800271a:	881b      	ldrh	r3, [r3, #0]
 800271c:	b2da      	uxtb	r2, r3
 800271e:	187b      	adds	r3, r7, r1
 8002720:	709a      	strb	r2, [r3, #2]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_CLR_IRQ_STATUS, 0, 0 );
 8002722:	1879      	adds	r1, r7, r1
 8002724:	6878      	ldr	r0, [r7, #4]
 8002726:	2300      	movs	r3, #0
 8002728:	9300      	str	r3, [sp, #0]
 800272a:	2300      	movs	r3, #0
 800272c:	2203      	movs	r2, #3
 800272e:	f000 fa65 	bl	8002bfc <sx126x_hal_write>
 8002732:	0003      	movs	r3, r0
}
 8002734:	0018      	movs	r0, r3
 8002736:	46bd      	mov	sp, r7
 8002738:	b004      	add	sp, #16
 800273a:	bd80      	pop	{r7, pc}
 800273c:	080045b0 	.word	0x080045b0

08002740 <sx126x_set_dio2_as_rf_sw_ctrl>:
    }
    return status;
}

sx126x_status_t sx126x_set_dio2_as_rf_sw_ctrl( const void* context, const bool enable )
{
 8002740:	b580      	push	{r7, lr}
 8002742:	b086      	sub	sp, #24
 8002744:	af02      	add	r7, sp, #8
 8002746:	6078      	str	r0, [r7, #4]
 8002748:	000a      	movs	r2, r1
 800274a:	1cfb      	adds	r3, r7, #3
 800274c:	701a      	strb	r2, [r3, #0]
    uint8_t buf[SX126X_SIZE_SET_DIO2_AS_RF_SWITCH_CTRL] = { 0 };
 800274e:	210c      	movs	r1, #12
 8002750:	187b      	adds	r3, r7, r1
 8002752:	2200      	movs	r2, #0
 8002754:	801a      	strh	r2, [r3, #0]

    buf[0] = SX126X_SET_DIO2_AS_RF_SWITCH_CTRL;
 8002756:	187b      	adds	r3, r7, r1
 8002758:	229d      	movs	r2, #157	; 0x9d
 800275a:	701a      	strb	r2, [r3, #0]

    buf[1] = ( enable == true ) ? 1 : 0;
 800275c:	1cfb      	adds	r3, r7, #3
 800275e:	781b      	ldrb	r3, [r3, #0]
 8002760:	001a      	movs	r2, r3
 8002762:	187b      	adds	r3, r7, r1
 8002764:	705a      	strb	r2, [r3, #1]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_DIO2_AS_RF_SWITCH_CTRL, 0, 0 );
 8002766:	1879      	adds	r1, r7, r1
 8002768:	6878      	ldr	r0, [r7, #4]
 800276a:	2300      	movs	r3, #0
 800276c:	9300      	str	r3, [sp, #0]
 800276e:	2300      	movs	r3, #0
 8002770:	2202      	movs	r2, #2
 8002772:	f000 fa43 	bl	8002bfc <sx126x_hal_write>
 8002776:	0003      	movs	r3, r0
}
 8002778:	0018      	movs	r0, r3
 800277a:	46bd      	mov	sp, r7
 800277c:	b004      	add	sp, #16
 800277e:	bd80      	pop	{r7, pc}

08002780 <sx126x_set_rf_freq>:
//
// RF Modulation and Packet-Related Functions
//

sx126x_status_t sx126x_set_rf_freq( const void* context, const uint32_t freq_in_hz )
{
 8002780:	b580      	push	{r7, lr}
 8002782:	b084      	sub	sp, #16
 8002784:	af00      	add	r7, sp, #0
 8002786:	6078      	str	r0, [r7, #4]
 8002788:	6039      	str	r1, [r7, #0]
    const uint32_t freq = sx126x_convert_freq_in_hz_to_pll_step( freq_in_hz );
 800278a:	683b      	ldr	r3, [r7, #0]
 800278c:	0018      	movs	r0, r3
 800278e:	f000 f987 	bl	8002aa0 <sx126x_convert_freq_in_hz_to_pll_step>
 8002792:	0003      	movs	r3, r0
 8002794:	60fb      	str	r3, [r7, #12]

    return sx126x_set_rf_freq_in_pll_steps( context, freq );
 8002796:	68fa      	ldr	r2, [r7, #12]
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	0011      	movs	r1, r2
 800279c:	0018      	movs	r0, r3
 800279e:	f000 f805 	bl	80027ac <sx126x_set_rf_freq_in_pll_steps>
 80027a2:	0003      	movs	r3, r0
}
 80027a4:	0018      	movs	r0, r3
 80027a6:	46bd      	mov	sp, r7
 80027a8:	b004      	add	sp, #16
 80027aa:	bd80      	pop	{r7, pc}

080027ac <sx126x_set_rf_freq_in_pll_steps>:

sx126x_status_t sx126x_set_rf_freq_in_pll_steps( const void* context, const uint32_t freq )
{
 80027ac:	b580      	push	{r7, lr}
 80027ae:	b086      	sub	sp, #24
 80027b0:	af02      	add	r7, sp, #8
 80027b2:	6078      	str	r0, [r7, #4]
 80027b4:	6039      	str	r1, [r7, #0]
    uint8_t buf[SX126X_SIZE_SET_RF_FREQUENCY] = { 0 };
 80027b6:	2108      	movs	r1, #8
 80027b8:	187b      	adds	r3, r7, r1
 80027ba:	2200      	movs	r2, #0
 80027bc:	601a      	str	r2, [r3, #0]
 80027be:	2200      	movs	r2, #0
 80027c0:	711a      	strb	r2, [r3, #4]

    buf[0] = SX126X_SET_RF_FREQUENCY;
 80027c2:	187b      	adds	r3, r7, r1
 80027c4:	2286      	movs	r2, #134	; 0x86
 80027c6:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t )( freq >> 24 );
 80027c8:	683b      	ldr	r3, [r7, #0]
 80027ca:	0e1b      	lsrs	r3, r3, #24
 80027cc:	b2da      	uxtb	r2, r3
 80027ce:	187b      	adds	r3, r7, r1
 80027d0:	705a      	strb	r2, [r3, #1]
    buf[2] = ( uint8_t )( freq >> 16 );
 80027d2:	683b      	ldr	r3, [r7, #0]
 80027d4:	0c1b      	lsrs	r3, r3, #16
 80027d6:	b2da      	uxtb	r2, r3
 80027d8:	187b      	adds	r3, r7, r1
 80027da:	709a      	strb	r2, [r3, #2]
    buf[3] = ( uint8_t )( freq >> 8 );
 80027dc:	683b      	ldr	r3, [r7, #0]
 80027de:	0a1b      	lsrs	r3, r3, #8
 80027e0:	b2da      	uxtb	r2, r3
 80027e2:	187b      	adds	r3, r7, r1
 80027e4:	70da      	strb	r2, [r3, #3]
    buf[4] = ( uint8_t )( freq >> 0 );
 80027e6:	683b      	ldr	r3, [r7, #0]
 80027e8:	b2da      	uxtb	r2, r3
 80027ea:	187b      	adds	r3, r7, r1
 80027ec:	711a      	strb	r2, [r3, #4]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_RF_FREQUENCY, 0, 0 );
 80027ee:	1879      	adds	r1, r7, r1
 80027f0:	6878      	ldr	r0, [r7, #4]
 80027f2:	2300      	movs	r3, #0
 80027f4:	9300      	str	r3, [sp, #0]
 80027f6:	2300      	movs	r3, #0
 80027f8:	2205      	movs	r2, #5
 80027fa:	f000 f9ff 	bl	8002bfc <sx126x_hal_write>
 80027fe:	0003      	movs	r3, r0
}
 8002800:	0018      	movs	r0, r3
 8002802:	46bd      	mov	sp, r7
 8002804:	b004      	add	sp, #16
 8002806:	bd80      	pop	{r7, pc}

08002808 <sx126x_set_pkt_type>:

sx126x_status_t sx126x_set_pkt_type( const void* context, const sx126x_pkt_type_t pkt_type )
{
 8002808:	b580      	push	{r7, lr}
 800280a:	b086      	sub	sp, #24
 800280c:	af02      	add	r7, sp, #8
 800280e:	6078      	str	r0, [r7, #4]
 8002810:	000a      	movs	r2, r1
 8002812:	1cfb      	adds	r3, r7, #3
 8002814:	701a      	strb	r2, [r3, #0]
    uint8_t buf[SX126X_SIZE_SET_PKT_TYPE] = { 0 };
 8002816:	210c      	movs	r1, #12
 8002818:	187b      	adds	r3, r7, r1
 800281a:	2200      	movs	r2, #0
 800281c:	801a      	strh	r2, [r3, #0]

    buf[0] = SX126X_SET_PKT_TYPE;
 800281e:	187b      	adds	r3, r7, r1
 8002820:	228a      	movs	r2, #138	; 0x8a
 8002822:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t ) pkt_type;
 8002824:	187b      	adds	r3, r7, r1
 8002826:	1cfa      	adds	r2, r7, #3
 8002828:	7812      	ldrb	r2, [r2, #0]
 800282a:	705a      	strb	r2, [r3, #1]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_PKT_TYPE, 0, 0 );
 800282c:	1879      	adds	r1, r7, r1
 800282e:	6878      	ldr	r0, [r7, #4]
 8002830:	2300      	movs	r3, #0
 8002832:	9300      	str	r3, [sp, #0]
 8002834:	2300      	movs	r3, #0
 8002836:	2202      	movs	r2, #2
 8002838:	f000 f9e0 	bl	8002bfc <sx126x_hal_write>
 800283c:	0003      	movs	r3, r0
}
 800283e:	0018      	movs	r0, r3
 8002840:	46bd      	mov	sp, r7
 8002842:	b004      	add	sp, #16
 8002844:	bd80      	pop	{r7, pc}
	...

08002848 <sx126x_set_tx_params>:

    return status;
}

sx126x_status_t sx126x_set_tx_params( const void* context, const int8_t pwr_in_dbm, const sx126x_ramp_time_t ramp_time )
{
 8002848:	b580      	push	{r7, lr}
 800284a:	b086      	sub	sp, #24
 800284c:	af02      	add	r7, sp, #8
 800284e:	6078      	str	r0, [r7, #4]
 8002850:	0008      	movs	r0, r1
 8002852:	0011      	movs	r1, r2
 8002854:	1cfb      	adds	r3, r7, #3
 8002856:	1c02      	adds	r2, r0, #0
 8002858:	701a      	strb	r2, [r3, #0]
 800285a:	1cbb      	adds	r3, r7, #2
 800285c:	1c0a      	adds	r2, r1, #0
 800285e:	701a      	strb	r2, [r3, #0]
    uint8_t buf[SX126X_SIZE_SET_TX_PARAMS] = { 0 };
 8002860:	200c      	movs	r0, #12
 8002862:	183b      	adds	r3, r7, r0
 8002864:	4a0f      	ldr	r2, [pc, #60]	; (80028a4 <sx126x_set_tx_params+0x5c>)
 8002866:	8812      	ldrh	r2, [r2, #0]
 8002868:	801a      	strh	r2, [r3, #0]
 800286a:	2202      	movs	r2, #2
 800286c:	2100      	movs	r1, #0
 800286e:	5499      	strb	r1, [r3, r2]

    buf[0] = SX126X_SET_TX_PARAMS;
 8002870:	0001      	movs	r1, r0
 8002872:	187b      	adds	r3, r7, r1
 8002874:	228e      	movs	r2, #142	; 0x8e
 8002876:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t ) pwr_in_dbm;
 8002878:	1cfb      	adds	r3, r7, #3
 800287a:	781a      	ldrb	r2, [r3, #0]
 800287c:	187b      	adds	r3, r7, r1
 800287e:	705a      	strb	r2, [r3, #1]
    buf[2] = ( uint8_t ) ramp_time;
 8002880:	187b      	adds	r3, r7, r1
 8002882:	1cba      	adds	r2, r7, #2
 8002884:	7812      	ldrb	r2, [r2, #0]
 8002886:	709a      	strb	r2, [r3, #2]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_TX_PARAMS, 0, 0 );
 8002888:	1879      	adds	r1, r7, r1
 800288a:	6878      	ldr	r0, [r7, #4]
 800288c:	2300      	movs	r3, #0
 800288e:	9300      	str	r3, [sp, #0]
 8002890:	2300      	movs	r3, #0
 8002892:	2203      	movs	r2, #3
 8002894:	f000 f9b2 	bl	8002bfc <sx126x_hal_write>
 8002898:	0003      	movs	r3, r0
}
 800289a:	0018      	movs	r0, r3
 800289c:	46bd      	mov	sp, r7
 800289e:	b004      	add	sp, #16
 80028a0:	bd80      	pop	{r7, pc}
 80028a2:	46c0      	nop			; (mov r8, r8)
 80028a4:	080045b0 	.word	0x080045b0

080028a8 <sx126x_set_lora_mod_params>:
    }
    return status;
}

sx126x_status_t sx126x_set_lora_mod_params( const void* context, const sx126x_mod_params_lora_t* params )
{
 80028a8:	b5b0      	push	{r4, r5, r7, lr}
 80028aa:	b086      	sub	sp, #24
 80028ac:	af02      	add	r7, sp, #8
 80028ae:	6078      	str	r0, [r7, #4]
 80028b0:	6039      	str	r1, [r7, #0]
    sx126x_status_t status = SX126X_STATUS_ERROR;
 80028b2:	200f      	movs	r0, #15
 80028b4:	183b      	adds	r3, r7, r0
 80028b6:	2203      	movs	r2, #3
 80028b8:	701a      	strb	r2, [r3, #0]

    uint8_t buf[SX126X_SIZE_SET_MODULATION_PARAMS_LORA] = { 0 };
 80028ba:	2108      	movs	r1, #8
 80028bc:	187b      	adds	r3, r7, r1
 80028be:	2200      	movs	r2, #0
 80028c0:	601a      	str	r2, [r3, #0]
 80028c2:	2200      	movs	r2, #0
 80028c4:	711a      	strb	r2, [r3, #4]

    buf[0] = SX126X_SET_MODULATION_PARAMS;
 80028c6:	187b      	adds	r3, r7, r1
 80028c8:	228b      	movs	r2, #139	; 0x8b
 80028ca:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t )( params->sf );
 80028cc:	683b      	ldr	r3, [r7, #0]
 80028ce:	781a      	ldrb	r2, [r3, #0]
 80028d0:	187b      	adds	r3, r7, r1
 80028d2:	705a      	strb	r2, [r3, #1]
    buf[2] = ( uint8_t )( params->bw );
 80028d4:	683b      	ldr	r3, [r7, #0]
 80028d6:	785a      	ldrb	r2, [r3, #1]
 80028d8:	187b      	adds	r3, r7, r1
 80028da:	709a      	strb	r2, [r3, #2]
    buf[3] = ( uint8_t )( params->cr );
 80028dc:	683b      	ldr	r3, [r7, #0]
 80028de:	789a      	ldrb	r2, [r3, #2]
 80028e0:	187b      	adds	r3, r7, r1
 80028e2:	70da      	strb	r2, [r3, #3]
    buf[4] = params->ldro & 0x01;
 80028e4:	683b      	ldr	r3, [r7, #0]
 80028e6:	78db      	ldrb	r3, [r3, #3]
 80028e8:	2201      	movs	r2, #1
 80028ea:	4013      	ands	r3, r2
 80028ec:	b2da      	uxtb	r2, r3
 80028ee:	187b      	adds	r3, r7, r1
 80028f0:	711a      	strb	r2, [r3, #4]

    status = ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_MODULATION_PARAMS_LORA, 0, 0 );
 80028f2:	0005      	movs	r5, r0
 80028f4:	183c      	adds	r4, r7, r0
 80028f6:	1879      	adds	r1, r7, r1
 80028f8:	6878      	ldr	r0, [r7, #4]
 80028fa:	2300      	movs	r3, #0
 80028fc:	9300      	str	r3, [sp, #0]
 80028fe:	2300      	movs	r3, #0
 8002900:	2205      	movs	r2, #5
 8002902:	f000 f97b 	bl	8002bfc <sx126x_hal_write>
 8002906:	0003      	movs	r3, r0
 8002908:	7023      	strb	r3, [r4, #0]

    if( status == SX126X_STATUS_OK )
 800290a:	197b      	adds	r3, r7, r5
 800290c:	781b      	ldrb	r3, [r3, #0]
 800290e:	2b00      	cmp	r3, #0
 8002910:	d109      	bne.n	8002926 <sx126x_set_lora_mod_params+0x7e>
    {
        // WORKAROUND - Modulation Quality with 500 kHz LoRa Bandwidth, see datasheet DS_SX1261-2_V1.2 §15.1
        status = sx126x_tx_modulation_workaround( context, SX126X_PKT_TYPE_LORA, params->bw );
 8002912:	683b      	ldr	r3, [r7, #0]
 8002914:	785a      	ldrb	r2, [r3, #1]
 8002916:	197c      	adds	r4, r7, r5
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	2101      	movs	r1, #1
 800291c:	0018      	movs	r0, r3
 800291e:	f000 f917 	bl	8002b50 <sx126x_tx_modulation_workaround>
 8002922:	0003      	movs	r3, r0
 8002924:	7023      	strb	r3, [r4, #0]
        // WORKAROUND END
    }

    return status;
 8002926:	230f      	movs	r3, #15
 8002928:	18fb      	adds	r3, r7, r3
 800292a:	781b      	ldrb	r3, [r3, #0]
}
 800292c:	0018      	movs	r0, r3
 800292e:	46bd      	mov	sp, r7
 8002930:	b004      	add	sp, #16
 8002932:	bdb0      	pop	{r4, r5, r7, pc}

08002934 <sx126x_set_lora_pkt_params>:

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_PKT_PARAMS_GFSK, 0, 0 );
}

sx126x_status_t sx126x_set_lora_pkt_params( const void* context, const sx126x_pkt_params_lora_t* params )
{
 8002934:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002936:	b089      	sub	sp, #36	; 0x24
 8002938:	af02      	add	r7, sp, #8
 800293a:	6078      	str	r0, [r7, #4]
 800293c:	6039      	str	r1, [r7, #0]
    sx126x_status_t status = SX126X_STATUS_ERROR;
 800293e:	2317      	movs	r3, #23
 8002940:	18fb      	adds	r3, r7, r3
 8002942:	2203      	movs	r2, #3
 8002944:	701a      	strb	r2, [r3, #0]

    uint8_t buf[SX126X_SIZE_SET_PKT_PARAMS_LORA] = { 0 };
 8002946:	2410      	movs	r4, #16
 8002948:	193b      	adds	r3, r7, r4
 800294a:	2200      	movs	r2, #0
 800294c:	601a      	str	r2, [r3, #0]
 800294e:	3304      	adds	r3, #4
 8002950:	2203      	movs	r2, #3
 8002952:	2100      	movs	r1, #0
 8002954:	0018      	movs	r0, r3
 8002956:	f000 fccc 	bl	80032f2 <memset>

    buf[0] = SX126X_SET_PKT_PARAMS;
 800295a:	0021      	movs	r1, r4
 800295c:	187b      	adds	r3, r7, r1
 800295e:	228c      	movs	r2, #140	; 0x8c
 8002960:	701a      	strb	r2, [r3, #0]

    buf[1] = ( uint8_t )( params->preamble_len_in_symb >> 8 );
 8002962:	683b      	ldr	r3, [r7, #0]
 8002964:	881b      	ldrh	r3, [r3, #0]
 8002966:	0a1b      	lsrs	r3, r3, #8
 8002968:	b29b      	uxth	r3, r3
 800296a:	b2da      	uxtb	r2, r3
 800296c:	187b      	adds	r3, r7, r1
 800296e:	705a      	strb	r2, [r3, #1]
    buf[2] = ( uint8_t )( params->preamble_len_in_symb >> 0 );
 8002970:	683b      	ldr	r3, [r7, #0]
 8002972:	881b      	ldrh	r3, [r3, #0]
 8002974:	b2da      	uxtb	r2, r3
 8002976:	187b      	adds	r3, r7, r1
 8002978:	709a      	strb	r2, [r3, #2]
    buf[3] = ( uint8_t )( params->header_type );
 800297a:	683b      	ldr	r3, [r7, #0]
 800297c:	789a      	ldrb	r2, [r3, #2]
 800297e:	187b      	adds	r3, r7, r1
 8002980:	70da      	strb	r2, [r3, #3]
    buf[4] = params->pld_len_in_bytes;
 8002982:	683b      	ldr	r3, [r7, #0]
 8002984:	78da      	ldrb	r2, [r3, #3]
 8002986:	187b      	adds	r3, r7, r1
 8002988:	711a      	strb	r2, [r3, #4]
    buf[5] = ( uint8_t )( params->crc_is_on ? 1 : 0 );
 800298a:	683b      	ldr	r3, [r7, #0]
 800298c:	791b      	ldrb	r3, [r3, #4]
 800298e:	2b00      	cmp	r3, #0
 8002990:	d001      	beq.n	8002996 <sx126x_set_lora_pkt_params+0x62>
 8002992:	2201      	movs	r2, #1
 8002994:	e000      	b.n	8002998 <sx126x_set_lora_pkt_params+0x64>
 8002996:	2200      	movs	r2, #0
 8002998:	2310      	movs	r3, #16
 800299a:	18fb      	adds	r3, r7, r3
 800299c:	715a      	strb	r2, [r3, #5]
    buf[6] = ( uint8_t )( params->invert_iq_is_on ? 1 : 0 );
 800299e:	683b      	ldr	r3, [r7, #0]
 80029a0:	795b      	ldrb	r3, [r3, #5]
 80029a2:	2b00      	cmp	r3, #0
 80029a4:	d001      	beq.n	80029aa <sx126x_set_lora_pkt_params+0x76>
 80029a6:	2201      	movs	r2, #1
 80029a8:	e000      	b.n	80029ac <sx126x_set_lora_pkt_params+0x78>
 80029aa:	2200      	movs	r2, #0
 80029ac:	2110      	movs	r1, #16
 80029ae:	187b      	adds	r3, r7, r1
 80029b0:	719a      	strb	r2, [r3, #6]

    status = ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_PKT_PARAMS_LORA, 0, 0 );
 80029b2:	2517      	movs	r5, #23
 80029b4:	197c      	adds	r4, r7, r5
 80029b6:	1879      	adds	r1, r7, r1
 80029b8:	6878      	ldr	r0, [r7, #4]
 80029ba:	2300      	movs	r3, #0
 80029bc:	9300      	str	r3, [sp, #0]
 80029be:	2300      	movs	r3, #0
 80029c0:	2207      	movs	r2, #7
 80029c2:	f000 f91b 	bl	8002bfc <sx126x_hal_write>
 80029c6:	0003      	movs	r3, r0
 80029c8:	7023      	strb	r3, [r4, #0]

    // WORKAROUND - Optimizing the Inverted IQ Operation, see datasheet DS_SX1261-2_V1.2 §15.4
    if( status == SX126X_STATUS_OK )
 80029ca:	197b      	adds	r3, r7, r5
 80029cc:	781b      	ldrb	r3, [r3, #0]
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	d12f      	bne.n	8002a32 <sx126x_set_lora_pkt_params+0xfe>
    {
        uint8_t reg_value = 0;
 80029d2:	260f      	movs	r6, #15
 80029d4:	19bb      	adds	r3, r7, r6
 80029d6:	2200      	movs	r2, #0
 80029d8:	701a      	strb	r2, [r3, #0]

        status = sx126x_read_register( context, SX126X_REG_IRQ_POLARITY, &reg_value, 1 );
 80029da:	197c      	adds	r4, r7, r5
 80029dc:	19ba      	adds	r2, r7, r6
 80029de:	4918      	ldr	r1, [pc, #96]	; (8002a40 <sx126x_set_lora_pkt_params+0x10c>)
 80029e0:	6878      	ldr	r0, [r7, #4]
 80029e2:	2301      	movs	r3, #1
 80029e4:	f7ff fd80 	bl	80024e8 <sx126x_read_register>
 80029e8:	0003      	movs	r3, r0
 80029ea:	7023      	strb	r3, [r4, #0]
        if( status == SX126X_STATUS_OK )
 80029ec:	197b      	adds	r3, r7, r5
 80029ee:	781b      	ldrb	r3, [r3, #0]
 80029f0:	2b00      	cmp	r3, #0
 80029f2:	d11e      	bne.n	8002a32 <sx126x_set_lora_pkt_params+0xfe>
        {
            if( params->invert_iq_is_on == true )
 80029f4:	683b      	ldr	r3, [r7, #0]
 80029f6:	795b      	ldrb	r3, [r3, #5]
 80029f8:	2b00      	cmp	r3, #0
 80029fa:	d007      	beq.n	8002a0c <sx126x_set_lora_pkt_params+0xd8>
            {
                reg_value &= ~( 1 << 2 );  // Bit 2 set to 0 when using inverted IQ polarity
 80029fc:	19bb      	adds	r3, r7, r6
 80029fe:	781b      	ldrb	r3, [r3, #0]
 8002a00:	2204      	movs	r2, #4
 8002a02:	4393      	bics	r3, r2
 8002a04:	b2da      	uxtb	r2, r3
 8002a06:	19bb      	adds	r3, r7, r6
 8002a08:	701a      	strb	r2, [r3, #0]
 8002a0a:	e007      	b.n	8002a1c <sx126x_set_lora_pkt_params+0xe8>
            }
            else
            {
                reg_value |= ( 1 << 2 );  // Bit 2 set to 1 when using standard IQ polarity
 8002a0c:	210f      	movs	r1, #15
 8002a0e:	187b      	adds	r3, r7, r1
 8002a10:	781b      	ldrb	r3, [r3, #0]
 8002a12:	2204      	movs	r2, #4
 8002a14:	4313      	orrs	r3, r2
 8002a16:	b2da      	uxtb	r2, r3
 8002a18:	187b      	adds	r3, r7, r1
 8002a1a:	701a      	strb	r2, [r3, #0]
            }
            status = sx126x_write_register( context, SX126X_REG_IRQ_POLARITY, &reg_value, 1 );
 8002a1c:	2317      	movs	r3, #23
 8002a1e:	18fc      	adds	r4, r7, r3
 8002a20:	230f      	movs	r3, #15
 8002a22:	18fa      	adds	r2, r7, r3
 8002a24:	4906      	ldr	r1, [pc, #24]	; (8002a40 <sx126x_set_lora_pkt_params+0x10c>)
 8002a26:	6878      	ldr	r0, [r7, #4]
 8002a28:	2301      	movs	r3, #1
 8002a2a:	f7ff fd23 	bl	8002474 <sx126x_write_register>
 8002a2e:	0003      	movs	r3, r0
 8002a30:	7023      	strb	r3, [r4, #0]
        }
    }
    // WORKAROUND END

    return status;
 8002a32:	2317      	movs	r3, #23
 8002a34:	18fb      	adds	r3, r7, r3
 8002a36:	781b      	ldrb	r3, [r3, #0]
}
 8002a38:	0018      	movs	r0, r3
 8002a3a:	46bd      	mov	sp, r7
 8002a3c:	b007      	add	sp, #28
 8002a3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002a40:	00000736 	.word	0x00000736

08002a44 <sx126x_set_buffer_base_address>:
    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_CAD_PARAMS, 0, 0 );
}

sx126x_status_t sx126x_set_buffer_base_address( const void* context, const uint8_t tx_base_address,
                                                const uint8_t rx_base_address )
{
 8002a44:	b580      	push	{r7, lr}
 8002a46:	b086      	sub	sp, #24
 8002a48:	af02      	add	r7, sp, #8
 8002a4a:	6078      	str	r0, [r7, #4]
 8002a4c:	0008      	movs	r0, r1
 8002a4e:	0011      	movs	r1, r2
 8002a50:	1cfb      	adds	r3, r7, #3
 8002a52:	1c02      	adds	r2, r0, #0
 8002a54:	701a      	strb	r2, [r3, #0]
 8002a56:	1cbb      	adds	r3, r7, #2
 8002a58:	1c0a      	adds	r2, r1, #0
 8002a5a:	701a      	strb	r2, [r3, #0]
    uint8_t buf[SX126X_SIZE_SET_BUFFER_BASE_ADDRESS] = { 0 };
 8002a5c:	200c      	movs	r0, #12
 8002a5e:	183b      	adds	r3, r7, r0
 8002a60:	4a0e      	ldr	r2, [pc, #56]	; (8002a9c <sx126x_set_buffer_base_address+0x58>)
 8002a62:	8812      	ldrh	r2, [r2, #0]
 8002a64:	801a      	strh	r2, [r3, #0]
 8002a66:	2202      	movs	r2, #2
 8002a68:	2100      	movs	r1, #0
 8002a6a:	5499      	strb	r1, [r3, r2]

    buf[0] = SX126X_SET_BUFFER_BASE_ADDRESS;
 8002a6c:	183b      	adds	r3, r7, r0
 8002a6e:	228f      	movs	r2, #143	; 0x8f
 8002a70:	701a      	strb	r2, [r3, #0]

    buf[1] = tx_base_address;
 8002a72:	183b      	adds	r3, r7, r0
 8002a74:	1cfa      	adds	r2, r7, #3
 8002a76:	7812      	ldrb	r2, [r2, #0]
 8002a78:	705a      	strb	r2, [r3, #1]
    buf[2] = rx_base_address;
 8002a7a:	183b      	adds	r3, r7, r0
 8002a7c:	1cba      	adds	r2, r7, #2
 8002a7e:	7812      	ldrb	r2, [r2, #0]
 8002a80:	709a      	strb	r2, [r3, #2]

    return ( sx126x_status_t ) sx126x_hal_write( context, buf, SX126X_SIZE_SET_BUFFER_BASE_ADDRESS, 0, 0 );
 8002a82:	1839      	adds	r1, r7, r0
 8002a84:	6878      	ldr	r0, [r7, #4]
 8002a86:	2300      	movs	r3, #0
 8002a88:	9300      	str	r3, [sp, #0]
 8002a8a:	2300      	movs	r3, #0
 8002a8c:	2203      	movs	r2, #3
 8002a8e:	f000 f8b5 	bl	8002bfc <sx126x_hal_write>
 8002a92:	0003      	movs	r3, r0
}
 8002a94:	0018      	movs	r0, r3
 8002a96:	46bd      	mov	sp, r7
 8002a98:	b004      	add	sp, #16
 8002a9a:	bd80      	pop	{r7, pc}
 8002a9c:	080045b0 	.word	0x080045b0

08002aa0 <sx126x_convert_freq_in_hz_to_pll_step>:

    return status;
}

uint32_t sx126x_convert_freq_in_hz_to_pll_step( uint32_t freq_in_hz )
{
 8002aa0:	b590      	push	{r4, r7, lr}
 8002aa2:	b085      	sub	sp, #20
 8002aa4:	af00      	add	r7, sp, #0
 8002aa6:	6078      	str	r0, [r7, #4]
    uint32_t steps_int;
    uint32_t steps_frac;

    // Get integer and fractional parts of the frequency computed with a PLL step scaled value
    steps_int  = freq_in_hz / SX126X_PLL_STEP_SCALED;
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	4911      	ldr	r1, [pc, #68]	; (8002af0 <sx126x_convert_freq_in_hz_to_pll_step+0x50>)
 8002aac:	0018      	movs	r0, r3
 8002aae:	f7fd fb33 	bl	8000118 <__udivsi3>
 8002ab2:	0003      	movs	r3, r0
 8002ab4:	60fb      	str	r3, [r7, #12]
    steps_frac = freq_in_hz - ( steps_int * SX126X_PLL_STEP_SCALED );
 8002ab6:	68f9      	ldr	r1, [r7, #12]
 8002ab8:	000b      	movs	r3, r1
 8002aba:	015b      	lsls	r3, r3, #5
 8002abc:	1a5b      	subs	r3, r3, r1
 8002abe:	019a      	lsls	r2, r3, #6
 8002ac0:	1ad2      	subs	r2, r2, r3
 8002ac2:	00d2      	lsls	r2, r2, #3
 8002ac4:	1853      	adds	r3, r2, r1
 8002ac6:	687a      	ldr	r2, [r7, #4]
 8002ac8:	1ad3      	subs	r3, r2, r3
 8002aca:	60bb      	str	r3, [r7, #8]

    // Apply the scaling factor to retrieve a frequency in Hz (+ ceiling)
    return ( steps_int << SX126X_PLL_STEP_SHIFT_AMOUNT ) +
 8002acc:	68fb      	ldr	r3, [r7, #12]
 8002ace:	039c      	lsls	r4, r3, #14
           ( ( ( steps_frac << SX126X_PLL_STEP_SHIFT_AMOUNT ) + ( SX126X_PLL_STEP_SCALED >> 1 ) ) /
 8002ad0:	68bb      	ldr	r3, [r7, #8]
 8002ad2:	039b      	lsls	r3, r3, #14
 8002ad4:	4a07      	ldr	r2, [pc, #28]	; (8002af4 <sx126x_convert_freq_in_hz_to_pll_step+0x54>)
 8002ad6:	4694      	mov	ip, r2
 8002ad8:	4463      	add	r3, ip
 8002ada:	4905      	ldr	r1, [pc, #20]	; (8002af0 <sx126x_convert_freq_in_hz_to_pll_step+0x50>)
 8002adc:	0018      	movs	r0, r3
 8002ade:	f7fd fb1b 	bl	8000118 <__udivsi3>
 8002ae2:	0003      	movs	r3, r0
    return ( steps_int << SX126X_PLL_STEP_SHIFT_AMOUNT ) +
 8002ae4:	18e3      	adds	r3, r4, r3
             SX126X_PLL_STEP_SCALED );
}
 8002ae6:	0018      	movs	r0, r3
 8002ae8:	46bd      	mov	sp, r7
 8002aea:	b005      	add	sp, #20
 8002aec:	bd90      	pop	{r4, r7, pc}
 8002aee:	46c0      	nop			; (mov r8, r8)
 8002af0:	00003d09 	.word	0x00003d09
 8002af4:	00001e84 	.word	0x00001e84

08002af8 <sx126x_convert_timeout_in_ms_to_rtc_step>:

uint32_t sx126x_convert_timeout_in_ms_to_rtc_step( uint32_t timeout_in_ms )
{
 8002af8:	b580      	push	{r7, lr}
 8002afa:	b082      	sub	sp, #8
 8002afc:	af00      	add	r7, sp, #0
 8002afe:	6078      	str	r0, [r7, #4]
    return ( uint32_t )( timeout_in_ms * ( SX126X_RTC_FREQ_IN_HZ / 1000 ) );
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	019b      	lsls	r3, r3, #6
}
 8002b04:	0018      	movs	r0, r3
 8002b06:	46bd      	mov	sp, r7
 8002b08:	b002      	add	sp, #8
 8002b0a:	bd80      	pop	{r7, pc}

08002b0c <sx126x_set_trimming_capacitor_values>:
    return ( sx126x_status_t ) sx126x_write_register( context, SX126X_REG_OCP, &ocp_in_step_of_2_5_ma, 1 );
}

sx126x_status_t sx126x_set_trimming_capacitor_values( const void* context, const uint8_t trimming_cap_xta,
                                                      const uint8_t trimming_cap_xtb )
{
 8002b0c:	b580      	push	{r7, lr}
 8002b0e:	b084      	sub	sp, #16
 8002b10:	af00      	add	r7, sp, #0
 8002b12:	6078      	str	r0, [r7, #4]
 8002b14:	0008      	movs	r0, r1
 8002b16:	0011      	movs	r1, r2
 8002b18:	1cfb      	adds	r3, r7, #3
 8002b1a:	1c02      	adds	r2, r0, #0
 8002b1c:	701a      	strb	r2, [r3, #0]
 8002b1e:	1cbb      	adds	r3, r7, #2
 8002b20:	1c0a      	adds	r2, r1, #0
 8002b22:	701a      	strb	r2, [r3, #0]
    uint8_t trimming_capacitor_values[2] = { trimming_cap_xta, trimming_cap_xtb };
 8002b24:	210c      	movs	r1, #12
 8002b26:	187b      	adds	r3, r7, r1
 8002b28:	1cfa      	adds	r2, r7, #3
 8002b2a:	7812      	ldrb	r2, [r2, #0]
 8002b2c:	701a      	strb	r2, [r3, #0]
 8002b2e:	187b      	adds	r3, r7, r1
 8002b30:	1cba      	adds	r2, r7, #2
 8002b32:	7812      	ldrb	r2, [r2, #0]
 8002b34:	705a      	strb	r2, [r3, #1]

    return ( sx126x_status_t ) sx126x_write_register( context, SX126X_REG_XTATRIM, trimming_capacitor_values, 2 );
 8002b36:	187a      	adds	r2, r7, r1
 8002b38:	4904      	ldr	r1, [pc, #16]	; (8002b4c <sx126x_set_trimming_capacitor_values+0x40>)
 8002b3a:	6878      	ldr	r0, [r7, #4]
 8002b3c:	2302      	movs	r3, #2
 8002b3e:	f7ff fc99 	bl	8002474 <sx126x_write_register>
 8002b42:	0003      	movs	r3, r0
}
 8002b44:	0018      	movs	r0, r3
 8002b46:	46bd      	mov	sp, r7
 8002b48:	b004      	add	sp, #16
 8002b4a:	bd80      	pop	{r7, pc}
 8002b4c:	00000911 	.word	0x00000911

08002b50 <sx126x_tx_modulation_workaround>:
 * --- PRIVATE FUNCTIONS DEFINITION --------------------------------------------
 */

static sx126x_status_t sx126x_tx_modulation_workaround( const void* context, sx126x_pkt_type_t pkt_type,
                                                        sx126x_lora_bw_t bw )
{
 8002b50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b52:	b085      	sub	sp, #20
 8002b54:	af00      	add	r7, sp, #0
 8002b56:	6078      	str	r0, [r7, #4]
 8002b58:	0008      	movs	r0, r1
 8002b5a:	0011      	movs	r1, r2
 8002b5c:	1cfb      	adds	r3, r7, #3
 8002b5e:	1c02      	adds	r2, r0, #0
 8002b60:	701a      	strb	r2, [r3, #0]
 8002b62:	1cbb      	adds	r3, r7, #2
 8002b64:	1c0a      	adds	r2, r1, #0
 8002b66:	701a      	strb	r2, [r3, #0]
    sx126x_status_t status    = SX126X_STATUS_ERROR;
 8002b68:	260f      	movs	r6, #15
 8002b6a:	19bb      	adds	r3, r7, r6
 8002b6c:	2203      	movs	r2, #3
 8002b6e:	701a      	strb	r2, [r3, #0]
    uint8_t         reg_value = 0;
 8002b70:	250e      	movs	r5, #14
 8002b72:	197b      	adds	r3, r7, r5
 8002b74:	2200      	movs	r2, #0
 8002b76:	701a      	strb	r2, [r3, #0]

    status = sx126x_read_register( context, SX126X_REG_TX_MODULATION, &reg_value, 1 );
 8002b78:	19bc      	adds	r4, r7, r6
 8002b7a:	197a      	adds	r2, r7, r5
 8002b7c:	491e      	ldr	r1, [pc, #120]	; (8002bf8 <sx126x_tx_modulation_workaround+0xa8>)
 8002b7e:	6878      	ldr	r0, [r7, #4]
 8002b80:	2301      	movs	r3, #1
 8002b82:	f7ff fcb1 	bl	80024e8 <sx126x_read_register>
 8002b86:	0003      	movs	r3, r0
 8002b88:	7023      	strb	r3, [r4, #0]

    if( status == SX126X_STATUS_OK )
 8002b8a:	19bb      	adds	r3, r7, r6
 8002b8c:	781b      	ldrb	r3, [r3, #0]
 8002b8e:	2b00      	cmp	r3, #0
 8002b90:	d12b      	bne.n	8002bea <sx126x_tx_modulation_workaround+0x9a>
    {
        if( pkt_type == SX126X_PKT_TYPE_LORA )
 8002b92:	1cfb      	adds	r3, r7, #3
 8002b94:	781b      	ldrb	r3, [r3, #0]
 8002b96:	2b01      	cmp	r3, #1
 8002b98:	d114      	bne.n	8002bc4 <sx126x_tx_modulation_workaround+0x74>
        {
            if( bw == SX126X_LORA_BW_500 )
 8002b9a:	1cbb      	adds	r3, r7, #2
 8002b9c:	781b      	ldrb	r3, [r3, #0]
 8002b9e:	2b06      	cmp	r3, #6
 8002ba0:	d107      	bne.n	8002bb2 <sx126x_tx_modulation_workaround+0x62>
            {
                reg_value &= ~( 1 << 2 );  // Bit 2 set to 0 if the LoRa BW = 500 kHz
 8002ba2:	197b      	adds	r3, r7, r5
 8002ba4:	781b      	ldrb	r3, [r3, #0]
 8002ba6:	2204      	movs	r2, #4
 8002ba8:	4393      	bics	r3, r2
 8002baa:	b2da      	uxtb	r2, r3
 8002bac:	197b      	adds	r3, r7, r5
 8002bae:	701a      	strb	r2, [r3, #0]
 8002bb0:	e010      	b.n	8002bd4 <sx126x_tx_modulation_workaround+0x84>
            }
            else
            {
                reg_value |= ( 1 << 2 );  // Bit 2 set to 1 for any other LoRa BW
 8002bb2:	210e      	movs	r1, #14
 8002bb4:	187b      	adds	r3, r7, r1
 8002bb6:	781b      	ldrb	r3, [r3, #0]
 8002bb8:	2204      	movs	r2, #4
 8002bba:	4313      	orrs	r3, r2
 8002bbc:	b2da      	uxtb	r2, r3
 8002bbe:	187b      	adds	r3, r7, r1
 8002bc0:	701a      	strb	r2, [r3, #0]
 8002bc2:	e007      	b.n	8002bd4 <sx126x_tx_modulation_workaround+0x84>
            }
        }
        else
        {
            reg_value |= ( 1 << 2 );  // Bit 2 set to 1 for any (G)FSK configuration
 8002bc4:	210e      	movs	r1, #14
 8002bc6:	187b      	adds	r3, r7, r1
 8002bc8:	781b      	ldrb	r3, [r3, #0]
 8002bca:	2204      	movs	r2, #4
 8002bcc:	4313      	orrs	r3, r2
 8002bce:	b2da      	uxtb	r2, r3
 8002bd0:	187b      	adds	r3, r7, r1
 8002bd2:	701a      	strb	r2, [r3, #0]
        }

        status = sx126x_write_register( context, SX126X_REG_TX_MODULATION, &reg_value, 1 );
 8002bd4:	230f      	movs	r3, #15
 8002bd6:	18fc      	adds	r4, r7, r3
 8002bd8:	230e      	movs	r3, #14
 8002bda:	18fa      	adds	r2, r7, r3
 8002bdc:	4906      	ldr	r1, [pc, #24]	; (8002bf8 <sx126x_tx_modulation_workaround+0xa8>)
 8002bde:	6878      	ldr	r0, [r7, #4]
 8002be0:	2301      	movs	r3, #1
 8002be2:	f7ff fc47 	bl	8002474 <sx126x_write_register>
 8002be6:	0003      	movs	r3, r0
 8002be8:	7023      	strb	r3, [r4, #0]
    }
    return status;
 8002bea:	230f      	movs	r3, #15
 8002bec:	18fb      	adds	r3, r7, r3
 8002bee:	781b      	ldrb	r3, [r3, #0]
}
 8002bf0:	0018      	movs	r0, r3
 8002bf2:	46bd      	mov	sp, r7
 8002bf4:	b005      	add	sp, #20
 8002bf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002bf8:	00000889 	.word	0x00000889

08002bfc <sx126x_hal_write>:
#include "sx126x_hal.h"
sx126x_hal_status_t sx126x_hal_write(const void* context, const uint8_t* command, const uint16_t command_length, const uint8_t* data, const uint16_t data_length) {
 8002bfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002bfe:	46c6      	mov	lr, r8
 8002c00:	b500      	push	{lr}
 8002c02:	b08c      	sub	sp, #48	; 0x30
 8002c04:	af00      	add	r7, sp, #0
 8002c06:	6278      	str	r0, [r7, #36]	; 0x24
 8002c08:	6239      	str	r1, [r7, #32]
 8002c0a:	61bb      	str	r3, [r7, #24]
 8002c0c:	211e      	movs	r1, #30
 8002c0e:	187b      	adds	r3, r7, r1
 8002c10:	801a      	strh	r2, [r3, #0]
 8002c12:	466b      	mov	r3, sp
 8002c14:	4698      	mov	r8, r3
	uint8_t tx_buffer[command_length + data_length];
 8002c16:	187b      	adds	r3, r7, r1
 8002c18:	881a      	ldrh	r2, [r3, #0]
 8002c1a:	2030      	movs	r0, #48	; 0x30
 8002c1c:	2618      	movs	r6, #24
 8002c1e:	1983      	adds	r3, r0, r6
 8002c20:	19db      	adds	r3, r3, r7
 8002c22:	881b      	ldrh	r3, [r3, #0]
 8002c24:	18d3      	adds	r3, r2, r3
 8002c26:	3b01      	subs	r3, #1
 8002c28:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002c2a:	187b      	adds	r3, r7, r1
 8002c2c:	881a      	ldrh	r2, [r3, #0]
 8002c2e:	1983      	adds	r3, r0, r6
 8002c30:	19db      	adds	r3, r3, r7
 8002c32:	881b      	ldrh	r3, [r3, #0]
 8002c34:	18d3      	adds	r3, r2, r3
 8002c36:	60bb      	str	r3, [r7, #8]
 8002c38:	2300      	movs	r3, #0
 8002c3a:	60fb      	str	r3, [r7, #12]
 8002c3c:	68b9      	ldr	r1, [r7, #8]
 8002c3e:	68fa      	ldr	r2, [r7, #12]
 8002c40:	000b      	movs	r3, r1
 8002c42:	0f5b      	lsrs	r3, r3, #29
 8002c44:	0016      	movs	r6, r2
 8002c46:	00f6      	lsls	r6, r6, #3
 8002c48:	617e      	str	r6, [r7, #20]
 8002c4a:	697e      	ldr	r6, [r7, #20]
 8002c4c:	431e      	orrs	r6, r3
 8002c4e:	617e      	str	r6, [r7, #20]
 8002c50:	000b      	movs	r3, r1
 8002c52:	00db      	lsls	r3, r3, #3
 8002c54:	613b      	str	r3, [r7, #16]
 8002c56:	211e      	movs	r1, #30
 8002c58:	187b      	adds	r3, r7, r1
 8002c5a:	881a      	ldrh	r2, [r3, #0]
 8002c5c:	2618      	movs	r6, #24
 8002c5e:	1983      	adds	r3, r0, r6
 8002c60:	19db      	adds	r3, r3, r7
 8002c62:	881b      	ldrh	r3, [r3, #0]
 8002c64:	18d3      	adds	r3, r2, r3
 8002c66:	603b      	str	r3, [r7, #0]
 8002c68:	2300      	movs	r3, #0
 8002c6a:	607b      	str	r3, [r7, #4]
 8002c6c:	6839      	ldr	r1, [r7, #0]
 8002c6e:	687a      	ldr	r2, [r7, #4]
 8002c70:	000b      	movs	r3, r1
 8002c72:	0f5b      	lsrs	r3, r3, #29
 8002c74:	0016      	movs	r6, r2
 8002c76:	00f5      	lsls	r5, r6, #3
 8002c78:	431d      	orrs	r5, r3
 8002c7a:	000b      	movs	r3, r1
 8002c7c:	00dc      	lsls	r4, r3, #3
 8002c7e:	211e      	movs	r1, #30
 8002c80:	187b      	adds	r3, r7, r1
 8002c82:	881a      	ldrh	r2, [r3, #0]
 8002c84:	0004      	movs	r4, r0
 8002c86:	2618      	movs	r6, #24
 8002c88:	1983      	adds	r3, r0, r6
 8002c8a:	19db      	adds	r3, r3, r7
 8002c8c:	881b      	ldrh	r3, [r3, #0]
 8002c8e:	18d3      	adds	r3, r2, r3
 8002c90:	3307      	adds	r3, #7
 8002c92:	08db      	lsrs	r3, r3, #3
 8002c94:	00db      	lsls	r3, r3, #3
 8002c96:	466a      	mov	r2, sp
 8002c98:	1ad3      	subs	r3, r2, r3
 8002c9a:	469d      	mov	sp, r3
 8002c9c:	466b      	mov	r3, sp
 8002c9e:	3300      	adds	r3, #0
 8002ca0:	62bb      	str	r3, [r7, #40]	; 0x28
	memcpy(tx_buffer, command, command_length);
 8002ca2:	000d      	movs	r5, r1
 8002ca4:	197b      	adds	r3, r7, r5
 8002ca6:	881a      	ldrh	r2, [r3, #0]
 8002ca8:	6a39      	ldr	r1, [r7, #32]
 8002caa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002cac:	0018      	movs	r0, r3
 8002cae:	f000 fb17 	bl	80032e0 <memcpy>
	memcpy(tx_buffer + command_length, data, data_length);
 8002cb2:	197b      	adds	r3, r7, r5
 8002cb4:	881b      	ldrh	r3, [r3, #0]
 8002cb6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002cb8:	18d0      	adds	r0, r2, r3
 8002cba:	19a3      	adds	r3, r4, r6
 8002cbc:	19db      	adds	r3, r3, r7
 8002cbe:	881a      	ldrh	r2, [r3, #0]
 8002cc0:	69bb      	ldr	r3, [r7, #24]
 8002cc2:	0019      	movs	r1, r3
 8002cc4:	f000 fb0c 	bl	80032e0 <memcpy>
	HW_write_LORACS(0);
 8002cc8:	2000      	movs	r0, #0
 8002cca:	f000 f96d 	bl	8002fa8 <HW_write_LORACS>
	HW_SPI_WriteBuffer(tx_buffer, (command_length + data_length));
 8002cce:	197b      	adds	r3, r7, r5
 8002cd0:	881a      	ldrh	r2, [r3, #0]
 8002cd2:	19a3      	adds	r3, r4, r6
 8002cd4:	19db      	adds	r3, r3, r7
 8002cd6:	881b      	ldrh	r3, [r3, #0]
 8002cd8:	18d2      	adds	r2, r2, r3
 8002cda:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002cdc:	0011      	movs	r1, r2
 8002cde:	0018      	movs	r0, r3
 8002ce0:	f000 fa4e 	bl	8003180 <HW_SPI_WriteBuffer>
	HW_write_LORACS(1);
 8002ce4:	2001      	movs	r0, #1
 8002ce6:	f000 f95f 	bl	8002fa8 <HW_write_LORACS>
	return 0;
 8002cea:	2300      	movs	r3, #0
 8002cec:	46c5      	mov	sp, r8
}
 8002cee:	0018      	movs	r0, r3
 8002cf0:	46bd      	mov	sp, r7
 8002cf2:	b00c      	add	sp, #48	; 0x30
 8002cf4:	bc80      	pop	{r7}
 8002cf6:	46b8      	mov	r8, r7
 8002cf8:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002cfa <sx126x_hal_read>:

sx126x_hal_status_t sx126x_hal_read(const void* context, const uint8_t* command, const uint16_t command_length, uint8_t* data, const uint16_t data_length ) {
 8002cfa:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002cfc:	b08d      	sub	sp, #52	; 0x34
 8002cfe:	af00      	add	r7, sp, #0
 8002d00:	6278      	str	r0, [r7, #36]	; 0x24
 8002d02:	6239      	str	r1, [r7, #32]
 8002d04:	61bb      	str	r3, [r7, #24]
 8002d06:	211e      	movs	r1, #30
 8002d08:	187b      	adds	r3, r7, r1
 8002d0a:	801a      	strh	r2, [r3, #0]
 8002d0c:	466b      	mov	r3, sp
 8002d0e:	001e      	movs	r6, r3
	uint8_t tx_buffer[command_length];
 8002d10:	187b      	adds	r3, r7, r1
 8002d12:	881b      	ldrh	r3, [r3, #0]
 8002d14:	3b01      	subs	r3, #1
 8002d16:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002d18:	187b      	adds	r3, r7, r1
 8002d1a:	881b      	ldrh	r3, [r3, #0]
 8002d1c:	b29b      	uxth	r3, r3
 8002d1e:	60bb      	str	r3, [r7, #8]
 8002d20:	2300      	movs	r3, #0
 8002d22:	60fb      	str	r3, [r7, #12]
 8002d24:	68b9      	ldr	r1, [r7, #8]
 8002d26:	68fa      	ldr	r2, [r7, #12]
 8002d28:	000b      	movs	r3, r1
 8002d2a:	0f5b      	lsrs	r3, r3, #29
 8002d2c:	0010      	movs	r0, r2
 8002d2e:	00c0      	lsls	r0, r0, #3
 8002d30:	6178      	str	r0, [r7, #20]
 8002d32:	6978      	ldr	r0, [r7, #20]
 8002d34:	4318      	orrs	r0, r3
 8002d36:	6178      	str	r0, [r7, #20]
 8002d38:	000b      	movs	r3, r1
 8002d3a:	00db      	lsls	r3, r3, #3
 8002d3c:	613b      	str	r3, [r7, #16]
 8002d3e:	211e      	movs	r1, #30
 8002d40:	187b      	adds	r3, r7, r1
 8002d42:	881b      	ldrh	r3, [r3, #0]
 8002d44:	b29b      	uxth	r3, r3
 8002d46:	603b      	str	r3, [r7, #0]
 8002d48:	2300      	movs	r3, #0
 8002d4a:	607b      	str	r3, [r7, #4]
 8002d4c:	6839      	ldr	r1, [r7, #0]
 8002d4e:	687a      	ldr	r2, [r7, #4]
 8002d50:	000b      	movs	r3, r1
 8002d52:	0f5b      	lsrs	r3, r3, #29
 8002d54:	0010      	movs	r0, r2
 8002d56:	00c5      	lsls	r5, r0, #3
 8002d58:	431d      	orrs	r5, r3
 8002d5a:	000b      	movs	r3, r1
 8002d5c:	00dc      	lsls	r4, r3, #3
 8002d5e:	211e      	movs	r1, #30
 8002d60:	187b      	adds	r3, r7, r1
 8002d62:	881b      	ldrh	r3, [r3, #0]
 8002d64:	3307      	adds	r3, #7
 8002d66:	08db      	lsrs	r3, r3, #3
 8002d68:	00db      	lsls	r3, r3, #3
 8002d6a:	466a      	mov	r2, sp
 8002d6c:	1ad3      	subs	r3, r2, r3
 8002d6e:	469d      	mov	sp, r3
 8002d70:	466b      	mov	r3, sp
 8002d72:	3300      	adds	r3, #0
 8002d74:	62bb      	str	r3, [r7, #40]	; 0x28
	memcpy(tx_buffer, command, command_length);
 8002d76:	000c      	movs	r4, r1
 8002d78:	187b      	adds	r3, r7, r1
 8002d7a:	881a      	ldrh	r2, [r3, #0]
 8002d7c:	6a39      	ldr	r1, [r7, #32]
 8002d7e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002d80:	0018      	movs	r0, r3
 8002d82:	f000 faad 	bl	80032e0 <memcpy>
	HW_write_LORACS(0);
 8002d86:	2000      	movs	r0, #0
 8002d88:	f000 f90e 	bl	8002fa8 <HW_write_LORACS>
	HW_SPI_WriteBuffer(tx_buffer, command_length);
 8002d8c:	193b      	adds	r3, r7, r4
 8002d8e:	881a      	ldrh	r2, [r3, #0]
 8002d90:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002d92:	0011      	movs	r1, r2
 8002d94:	0018      	movs	r0, r3
 8002d96:	f000 f9f3 	bl	8003180 <HW_SPI_WriteBuffer>
	HW_SPI_ReadBuffer(data, data_length);
 8002d9a:	2330      	movs	r3, #48	; 0x30
 8002d9c:	2218      	movs	r2, #24
 8002d9e:	189b      	adds	r3, r3, r2
 8002da0:	19db      	adds	r3, r3, r7
 8002da2:	881a      	ldrh	r2, [r3, #0]
 8002da4:	69bb      	ldr	r3, [r7, #24]
 8002da6:	0011      	movs	r1, r2
 8002da8:	0018      	movs	r0, r3
 8002daa:	f000 fa09 	bl	80031c0 <HW_SPI_ReadBuffer>
	HW_write_LORACS(1);
 8002dae:	2001      	movs	r0, #1
 8002db0:	f000 f8fa 	bl	8002fa8 <HW_write_LORACS>
	return 0;
 8002db4:	2300      	movs	r3, #0
 8002db6:	46b5      	mov	sp, r6
}
 8002db8:	0018      	movs	r0, r3
 8002dba:	46bd      	mov	sp, r7
 8002dbc:	b00d      	add	sp, #52	; 0x34
 8002dbe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08002dc0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002dc0:	b580      	push	{r7, lr}
 8002dc2:	af00      	add	r7, sp, #0
  return 1;
 8002dc4:	2301      	movs	r3, #1
}
 8002dc6:	0018      	movs	r0, r3
 8002dc8:	46bd      	mov	sp, r7
 8002dca:	bd80      	pop	{r7, pc}

08002dcc <_kill>:

int _kill(int pid, int sig)
{
 8002dcc:	b580      	push	{r7, lr}
 8002dce:	b082      	sub	sp, #8
 8002dd0:	af00      	add	r7, sp, #0
 8002dd2:	6078      	str	r0, [r7, #4]
 8002dd4:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002dd6:	f000 fa59 	bl	800328c <__errno>
 8002dda:	0003      	movs	r3, r0
 8002ddc:	2216      	movs	r2, #22
 8002dde:	601a      	str	r2, [r3, #0]
  return -1;
 8002de0:	2301      	movs	r3, #1
 8002de2:	425b      	negs	r3, r3
}
 8002de4:	0018      	movs	r0, r3
 8002de6:	46bd      	mov	sp, r7
 8002de8:	b002      	add	sp, #8
 8002dea:	bd80      	pop	{r7, pc}

08002dec <_exit>:

void _exit (int status)
{
 8002dec:	b580      	push	{r7, lr}
 8002dee:	b082      	sub	sp, #8
 8002df0:	af00      	add	r7, sp, #0
 8002df2:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002df4:	2301      	movs	r3, #1
 8002df6:	425a      	negs	r2, r3
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	0011      	movs	r1, r2
 8002dfc:	0018      	movs	r0, r3
 8002dfe:	f7ff ffe5 	bl	8002dcc <_kill>
  while (1) {}    /* Make sure we hang here */
 8002e02:	e7fe      	b.n	8002e02 <_exit+0x16>

08002e04 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002e04:	b580      	push	{r7, lr}
 8002e06:	b086      	sub	sp, #24
 8002e08:	af00      	add	r7, sp, #0
 8002e0a:	60f8      	str	r0, [r7, #12]
 8002e0c:	60b9      	str	r1, [r7, #8]
 8002e0e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e10:	2300      	movs	r3, #0
 8002e12:	617b      	str	r3, [r7, #20]
 8002e14:	e00a      	b.n	8002e2c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002e16:	e000      	b.n	8002e1a <_read+0x16>
 8002e18:	bf00      	nop
 8002e1a:	0001      	movs	r1, r0
 8002e1c:	68bb      	ldr	r3, [r7, #8]
 8002e1e:	1c5a      	adds	r2, r3, #1
 8002e20:	60ba      	str	r2, [r7, #8]
 8002e22:	b2ca      	uxtb	r2, r1
 8002e24:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e26:	697b      	ldr	r3, [r7, #20]
 8002e28:	3301      	adds	r3, #1
 8002e2a:	617b      	str	r3, [r7, #20]
 8002e2c:	697a      	ldr	r2, [r7, #20]
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	429a      	cmp	r2, r3
 8002e32:	dbf0      	blt.n	8002e16 <_read+0x12>
  }

  return len;
 8002e34:	687b      	ldr	r3, [r7, #4]
}
 8002e36:	0018      	movs	r0, r3
 8002e38:	46bd      	mov	sp, r7
 8002e3a:	b006      	add	sp, #24
 8002e3c:	bd80      	pop	{r7, pc}

08002e3e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002e3e:	b580      	push	{r7, lr}
 8002e40:	b086      	sub	sp, #24
 8002e42:	af00      	add	r7, sp, #0
 8002e44:	60f8      	str	r0, [r7, #12]
 8002e46:	60b9      	str	r1, [r7, #8]
 8002e48:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e4a:	2300      	movs	r3, #0
 8002e4c:	617b      	str	r3, [r7, #20]
 8002e4e:	e009      	b.n	8002e64 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8002e50:	68bb      	ldr	r3, [r7, #8]
 8002e52:	1c5a      	adds	r2, r3, #1
 8002e54:	60ba      	str	r2, [r7, #8]
 8002e56:	781b      	ldrb	r3, [r3, #0]
 8002e58:	0018      	movs	r0, r3
 8002e5a:	e000      	b.n	8002e5e <_write+0x20>
 8002e5c:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002e5e:	697b      	ldr	r3, [r7, #20]
 8002e60:	3301      	adds	r3, #1
 8002e62:	617b      	str	r3, [r7, #20]
 8002e64:	697a      	ldr	r2, [r7, #20]
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	429a      	cmp	r2, r3
 8002e6a:	dbf1      	blt.n	8002e50 <_write+0x12>
  }
  return len;
 8002e6c:	687b      	ldr	r3, [r7, #4]
}
 8002e6e:	0018      	movs	r0, r3
 8002e70:	46bd      	mov	sp, r7
 8002e72:	b006      	add	sp, #24
 8002e74:	bd80      	pop	{r7, pc}

08002e76 <_close>:

int _close(int file)
{
 8002e76:	b580      	push	{r7, lr}
 8002e78:	b082      	sub	sp, #8
 8002e7a:	af00      	add	r7, sp, #0
 8002e7c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002e7e:	2301      	movs	r3, #1
 8002e80:	425b      	negs	r3, r3
}
 8002e82:	0018      	movs	r0, r3
 8002e84:	46bd      	mov	sp, r7
 8002e86:	b002      	add	sp, #8
 8002e88:	bd80      	pop	{r7, pc}

08002e8a <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002e8a:	b580      	push	{r7, lr}
 8002e8c:	b082      	sub	sp, #8
 8002e8e:	af00      	add	r7, sp, #0
 8002e90:	6078      	str	r0, [r7, #4]
 8002e92:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002e94:	683b      	ldr	r3, [r7, #0]
 8002e96:	2280      	movs	r2, #128	; 0x80
 8002e98:	0192      	lsls	r2, r2, #6
 8002e9a:	605a      	str	r2, [r3, #4]
  return 0;
 8002e9c:	2300      	movs	r3, #0
}
 8002e9e:	0018      	movs	r0, r3
 8002ea0:	46bd      	mov	sp, r7
 8002ea2:	b002      	add	sp, #8
 8002ea4:	bd80      	pop	{r7, pc}

08002ea6 <_isatty>:

int _isatty(int file)
{
 8002ea6:	b580      	push	{r7, lr}
 8002ea8:	b082      	sub	sp, #8
 8002eaa:	af00      	add	r7, sp, #0
 8002eac:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002eae:	2301      	movs	r3, #1
}
 8002eb0:	0018      	movs	r0, r3
 8002eb2:	46bd      	mov	sp, r7
 8002eb4:	b002      	add	sp, #8
 8002eb6:	bd80      	pop	{r7, pc}

08002eb8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002eb8:	b580      	push	{r7, lr}
 8002eba:	b084      	sub	sp, #16
 8002ebc:	af00      	add	r7, sp, #0
 8002ebe:	60f8      	str	r0, [r7, #12]
 8002ec0:	60b9      	str	r1, [r7, #8]
 8002ec2:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002ec4:	2300      	movs	r3, #0
}
 8002ec6:	0018      	movs	r0, r3
 8002ec8:	46bd      	mov	sp, r7
 8002eca:	b004      	add	sp, #16
 8002ecc:	bd80      	pop	{r7, pc}
	...

08002ed0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002ed0:	b580      	push	{r7, lr}
 8002ed2:	b086      	sub	sp, #24
 8002ed4:	af00      	add	r7, sp, #0
 8002ed6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002ed8:	4a14      	ldr	r2, [pc, #80]	; (8002f2c <_sbrk+0x5c>)
 8002eda:	4b15      	ldr	r3, [pc, #84]	; (8002f30 <_sbrk+0x60>)
 8002edc:	1ad3      	subs	r3, r2, r3
 8002ede:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002ee0:	697b      	ldr	r3, [r7, #20]
 8002ee2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002ee4:	4b13      	ldr	r3, [pc, #76]	; (8002f34 <_sbrk+0x64>)
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	2b00      	cmp	r3, #0
 8002eea:	d102      	bne.n	8002ef2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002eec:	4b11      	ldr	r3, [pc, #68]	; (8002f34 <_sbrk+0x64>)
 8002eee:	4a12      	ldr	r2, [pc, #72]	; (8002f38 <_sbrk+0x68>)
 8002ef0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002ef2:	4b10      	ldr	r3, [pc, #64]	; (8002f34 <_sbrk+0x64>)
 8002ef4:	681a      	ldr	r2, [r3, #0]
 8002ef6:	687b      	ldr	r3, [r7, #4]
 8002ef8:	18d3      	adds	r3, r2, r3
 8002efa:	693a      	ldr	r2, [r7, #16]
 8002efc:	429a      	cmp	r2, r3
 8002efe:	d207      	bcs.n	8002f10 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002f00:	f000 f9c4 	bl	800328c <__errno>
 8002f04:	0003      	movs	r3, r0
 8002f06:	220c      	movs	r2, #12
 8002f08:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002f0a:	2301      	movs	r3, #1
 8002f0c:	425b      	negs	r3, r3
 8002f0e:	e009      	b.n	8002f24 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002f10:	4b08      	ldr	r3, [pc, #32]	; (8002f34 <_sbrk+0x64>)
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002f16:	4b07      	ldr	r3, [pc, #28]	; (8002f34 <_sbrk+0x64>)
 8002f18:	681a      	ldr	r2, [r3, #0]
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	18d2      	adds	r2, r2, r3
 8002f1e:	4b05      	ldr	r3, [pc, #20]	; (8002f34 <_sbrk+0x64>)
 8002f20:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8002f22:	68fb      	ldr	r3, [r7, #12]
}
 8002f24:	0018      	movs	r0, r3
 8002f26:	46bd      	mov	sp, r7
 8002f28:	b006      	add	sp, #24
 8002f2a:	bd80      	pop	{r7, pc}
 8002f2c:	20002000 	.word	0x20002000
 8002f30:	00000400 	.word	0x00000400
 8002f34:	20000124 	.word	0x20000124
 8002f38:	20000140 	.word	0x20000140

08002f3c <SysTick_Handler>:

volatile uint32_t tick = 0;

void SysTick_Handler(void)
{
    tick++ ;
 8002f3c:	4a02      	ldr	r2, [pc, #8]	; (8002f48 <SysTick_Handler+0xc>)
 8002f3e:	6813      	ldr	r3, [r2, #0]
 8002f40:	3301      	adds	r3, #1
 8002f42:	6013      	str	r3, [r2, #0]
}
 8002f44:	4770      	bx	lr
 8002f46:	46c0      	nop			; (mov r8, r8)
 8002f48:	2000012c 	.word	0x2000012c

08002f4c <HW_DelayMs>:

void HW_DelayMs(uint32_t _ms)
{
    static bool init = false;
    if( !init )
 8002f4c:	490d      	ldr	r1, [pc, #52]	; (8002f84 <HW_DelayMs+0x38>)
{
 8002f4e:	b570      	push	{r4, r5, r6, lr}
    if( !init )
 8002f50:	780c      	ldrb	r4, [r1, #0]
 8002f52:	2c00      	cmp	r4, #0
 8002f54:	d10f      	bne.n	8002f76 <HW_DelayMs+0x2a>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002f56:	26c0      	movs	r6, #192	; 0xc0
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002f58:	4a0b      	ldr	r2, [pc, #44]	; (8002f88 <HW_DelayMs+0x3c>)
 8002f5a:	4b0c      	ldr	r3, [pc, #48]	; (8002f8c <HW_DelayMs+0x40>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002f5c:	4d0c      	ldr	r5, [pc, #48]	; (8002f90 <HW_DelayMs+0x44>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002f5e:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002f60:	6a2b      	ldr	r3, [r5, #32]
 8002f62:	0636      	lsls	r6, r6, #24
 8002f64:	021b      	lsls	r3, r3, #8
 8002f66:	0a1b      	lsrs	r3, r3, #8
 8002f68:	4333      	orrs	r3, r6
 8002f6a:	622b      	str	r3, [r5, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002f6c:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002f6e:	6094      	str	r4, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002f70:	6013      	str	r3, [r2, #0]
    {
        SysTick_Config( CPU_FREQUENCY / 1000 );
        init = true ;
 8002f72:	3b06      	subs	r3, #6
 8002f74:	700b      	strb	r3, [r1, #0]
    }

    uint32_t start = tick ;
 8002f76:	4a07      	ldr	r2, [pc, #28]	; (8002f94 <HW_DelayMs+0x48>)
 8002f78:	6811      	ldr	r1, [r2, #0]
    while( tick - start < _ms ) ;
 8002f7a:	6813      	ldr	r3, [r2, #0]
 8002f7c:	1a5b      	subs	r3, r3, r1
 8002f7e:	4283      	cmp	r3, r0
 8002f80:	d3fb      	bcc.n	8002f7a <HW_DelayMs+0x2e>
}
 8002f82:	bd70      	pop	{r4, r5, r6, pc}
 8002f84:	20000128 	.word	0x20000128
 8002f88:	e000e010 	.word	0xe000e010
 8002f8c:	00003e7f 	.word	0x00003e7f
 8002f90:	e000ed00 	.word	0xe000ed00
 8002f94:	2000012c 	.word	0x2000012c

08002f98 <HW_writeLED>:
	NVIC_SetPriority(USART1_IRQn, uart_pri_encoding);
	NVIC_EnableIRQ(USART1_IRQn); //Start UART interrupt
}

void HW_writeLED(bool _value) {
	GPIOA->ODR			= (GPIOA->ODR & ~(1<<0)) | (_value<<0); //Write bit 0 of ODR
 8002f98:	22a0      	movs	r2, #160	; 0xa0
 8002f9a:	2101      	movs	r1, #1
 8002f9c:	05d2      	lsls	r2, r2, #23
 8002f9e:	6953      	ldr	r3, [r2, #20]
 8002fa0:	438b      	bics	r3, r1
 8002fa2:	4303      	orrs	r3, r0
 8002fa4:	6153      	str	r3, [r2, #20]
}
 8002fa6:	4770      	bx	lr

08002fa8 <HW_write_LORACS>:

void HW_write_LORACS(bool _value) {
	GPIOB->ODR			= (GPIOB->ODR & ~(1<<0)) | (_value<<0); //Write bit 0 of ODR
 8002fa8:	2101      	movs	r1, #1
 8002faa:	4a03      	ldr	r2, [pc, #12]	; (8002fb8 <HW_write_LORACS+0x10>)
 8002fac:	6953      	ldr	r3, [r2, #20]
 8002fae:	438b      	bics	r3, r1
 8002fb0:	4303      	orrs	r3, r0
 8002fb2:	6153      	str	r3, [r2, #20]
}
 8002fb4:	4770      	bx	lr
 8002fb6:	46c0      	nop			; (mov r8, r8)
 8002fb8:	50000400 	.word	0x50000400

08002fbc <HW_trackerHwInit>:
	RCC->CR				= (RCC->CR & ~(1<<8)) | (1<<8); //Enable HSI 16MHz internal oscillator
 8002fbc:	2180      	movs	r1, #128	; 0x80
	RCC->IOPENR 		|= RCC_IOPENR_GPIOAEN; //Enable GPIOA clock
 8002fbe:	2001      	movs	r0, #1
void HW_trackerHwInit(void) {
 8002fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	RCC->IOPENR 		|= RCC_IOPENR_GPIOBEN; //Enable GPIOB clock
 8002fc2:	2502      	movs	r5, #2
	RCC->APBENR2		|= RCC_APBENR2_USART1EN; //Enable USART1 clock
 8002fc4:	2680      	movs	r6, #128	; 0x80
	RCC->APBENR2		|= RCC_APBENR2_SPI1EN; //Enable SPI1 clock
 8002fc6:	2480      	movs	r4, #128	; 0x80
	RCC->CR				= (RCC->CR & ~(1<<8)) | (1<<8); //Enable HSI 16MHz internal oscillator
 8002fc8:	4b60      	ldr	r3, [pc, #384]	; (800314c <HW_trackerHwInit+0x190>)
 8002fca:	0049      	lsls	r1, r1, #1
 8002fcc:	681a      	ldr	r2, [r3, #0]
	RCC->APBENR2		|= RCC_APBENR2_USART1EN; //Enable USART1 clock
 8002fce:	01f6      	lsls	r6, r6, #7
	RCC->CR				= (RCC->CR & ~(1<<8)) | (1<<8); //Enable HSI 16MHz internal oscillator
 8002fd0:	430a      	orrs	r2, r1
 8002fd2:	601a      	str	r2, [r3, #0]
	RCC->IOPENR 		|= RCC_IOPENR_GPIOAEN; //Enable GPIOA clock
 8002fd4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
	RCC->APBENR2		|= RCC_APBENR2_SPI1EN; //Enable SPI1 clock
 8002fd6:	0164      	lsls	r4, r4, #5
	RCC->IOPENR 		|= RCC_IOPENR_GPIOAEN; //Enable GPIOA clock
 8002fd8:	4302      	orrs	r2, r0
 8002fda:	635a      	str	r2, [r3, #52]	; 0x34
	RCC->IOPENR 		|= RCC_IOPENR_GPIOBEN; //Enable GPIOB clock
 8002fdc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002fde:	432a      	orrs	r2, r5
 8002fe0:	635a      	str	r2, [r3, #52]	; 0x34
	RCC->APBENR2		|= RCC_APBENR2_USART1EN; //Enable USART1 clock
 8002fe2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002fe4:	4332      	orrs	r2, r6
 8002fe6:	641a      	str	r2, [r3, #64]	; 0x40
	RCC->APBENR2		|= RCC_APBENR2_SPI1EN; //Enable SPI1 clock
 8002fe8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	GPIOA->OSPEEDR		= (GPIOA->OSPEEDR & ~(1<<10)) | (1<<14);
 8002fea:	4e59      	ldr	r6, [pc, #356]	; (8003150 <HW_trackerHwInit+0x194>)
	RCC->APBENR2		|= RCC_APBENR2_SPI1EN; //Enable SPI1 clock
 8002fec:	4322      	orrs	r2, r4
 8002fee:	641a      	str	r2, [r3, #64]	; 0x40
	RCC->APBENR2		|= RCC_APBENR2_ADCEN; //Enable ADC clock
 8002ff0:	2280      	movs	r2, #128	; 0x80
 8002ff2:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002ff4:	0352      	lsls	r2, r2, #13
 8002ff6:	430a      	orrs	r2, r1
 8002ff8:	641a      	str	r2, [r3, #64]	; 0x40
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<0)) | (1<<0);
 8002ffa:	23a0      	movs	r3, #160	; 0xa0
 8002ffc:	05db      	lsls	r3, r3, #23
 8002ffe:	681a      	ldr	r2, [r3, #0]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<10)) | (0<<10);
 8003000:	4954      	ldr	r1, [pc, #336]	; (8003154 <HW_trackerHwInit+0x198>)
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<0)) | (1<<0);
 8003002:	4302      	orrs	r2, r0
 8003004:	601a      	str	r2, [r3, #0]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<1)) | (0<<1); //Setting LED pin as output
 8003006:	681a      	ldr	r2, [r3, #0]
 8003008:	43aa      	bics	r2, r5
 800300a:	601a      	str	r2, [r3, #0]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<10)) | (0<<10);
 800300c:	681a      	ldr	r2, [r3, #0]
 800300e:	400a      	ands	r2, r1
 8003010:	601a      	str	r2, [r3, #0]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<11)) | (1<<11); //Setting pin 5 as alternate function
 8003012:	2280      	movs	r2, #128	; 0x80
 8003014:	6819      	ldr	r1, [r3, #0]
 8003016:	0112      	lsls	r2, r2, #4
 8003018:	4311      	orrs	r1, r2
 800301a:	6019      	str	r1, [r3, #0]
	GPIOA->OSPEEDR		= (GPIOA->OSPEEDR & ~(1<<10)) | (1<<10);
 800301c:	2180      	movs	r1, #128	; 0x80
 800301e:	689f      	ldr	r7, [r3, #8]
 8003020:	00c9      	lsls	r1, r1, #3
 8003022:	4339      	orrs	r1, r7
 8003024:	6099      	str	r1, [r3, #8]
	GPIOA->OSPEEDR		= (GPIOA->OSPEEDR & ~(1<<11)) | (1<<11); //Setting pin 5 to very high speed
 8003026:	6899      	ldr	r1, [r3, #8]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<12)) | (0<<12);
 8003028:	4f4b      	ldr	r7, [pc, #300]	; (8003158 <HW_trackerHwInit+0x19c>)
	GPIOA->OSPEEDR		= (GPIOA->OSPEEDR & ~(1<<11)) | (1<<11); //Setting pin 5 to very high speed
 800302a:	430a      	orrs	r2, r1
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<13)) | (1<<13); //Setting pin 6 as alternate function
 800302c:	2180      	movs	r1, #128	; 0x80
	GPIOA->OSPEEDR		= (GPIOA->OSPEEDR & ~(1<<11)) | (1<<11); //Setting pin 5 to very high speed
 800302e:	609a      	str	r2, [r3, #8]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<12)) | (0<<12);
 8003030:	681a      	ldr	r2, [r3, #0]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<13)) | (1<<13); //Setting pin 6 as alternate function
 8003032:	0189      	lsls	r1, r1, #6
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<12)) | (0<<12);
 8003034:	403a      	ands	r2, r7
 8003036:	601a      	str	r2, [r3, #0]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<13)) | (1<<13); //Setting pin 6 as alternate function
 8003038:	681a      	ldr	r2, [r3, #0]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<14)) | (0<<14);
 800303a:	4f48      	ldr	r7, [pc, #288]	; (800315c <HW_trackerHwInit+0x1a0>)
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<13)) | (1<<13); //Setting pin 6 as alternate function
 800303c:	430a      	orrs	r2, r1
 800303e:	601a      	str	r2, [r3, #0]
	GPIOA->OSPEEDR		= (GPIOA->OSPEEDR & ~(1<<12)) | (1<<12);
 8003040:	689a      	ldr	r2, [r3, #8]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<14)) | (0<<14);
 8003042:	46bc      	mov	ip, r7
	GPIOA->OSPEEDR		= (GPIOA->OSPEEDR & ~(1<<12)) | (1<<12);
 8003044:	4322      	orrs	r2, r4
 8003046:	609a      	str	r2, [r3, #8]
	GPIOA->OSPEEDR		= (GPIOA->OSPEEDR & ~(1<<13)) | (1<<13); //Setting pin 6 to very high speed
 8003048:	689a      	ldr	r2, [r3, #8]
 800304a:	430a      	orrs	r2, r1
 800304c:	609a      	str	r2, [r3, #8]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<14)) | (0<<14);
 800304e:	681a      	ldr	r2, [r3, #0]
 8003050:	403a      	ands	r2, r7
 8003052:	601a      	str	r2, [r3, #0]
	GPIOA->MODER		= (GPIOA->MODER & ~(1<<15)) | (1<<15); //Setting pin 7 as alternate function
 8003054:	2280      	movs	r2, #128	; 0x80
 8003056:	681f      	ldr	r7, [r3, #0]
 8003058:	0212      	lsls	r2, r2, #8
 800305a:	4317      	orrs	r7, r2
 800305c:	601f      	str	r7, [r3, #0]
	GPIOA->OSPEEDR		= (GPIOA->OSPEEDR & ~(1<<10)) | (1<<14);
 800305e:	689f      	ldr	r7, [r3, #8]
 8003060:	4037      	ands	r7, r6
 8003062:	2680      	movs	r6, #128	; 0x80
 8003064:	01f6      	lsls	r6, r6, #7
 8003066:	4337      	orrs	r7, r6
 8003068:	609f      	str	r7, [r3, #8]
	GPIOA->OSPEEDR		= (GPIOA->OSPEEDR & ~(1<<10)) | (1<<15); //Setting pin 7 to very high speed
 800306a:	689e      	ldr	r6, [r3, #8]
 800306c:	4f3c      	ldr	r7, [pc, #240]	; (8003160 <HW_trackerHwInit+0x1a4>)
 800306e:	403e      	ands	r6, r7
 8003070:	4316      	orrs	r6, r2
 8003072:	609e      	str	r6, [r3, #8]
	GPIOB->MODER		= (GPIOB->MODER & ~(1<<0)) | (1<<0);
 8003074:	4b3b      	ldr	r3, [pc, #236]	; (8003164 <HW_trackerHwInit+0x1a8>)
	GPIOB->MODER		= (GPIOB->MODER & ~(1<<12)) | (0<<12);
 8003076:	4f38      	ldr	r7, [pc, #224]	; (8003158 <HW_trackerHwInit+0x19c>)
	GPIOB->MODER		= (GPIOB->MODER & ~(1<<0)) | (1<<0);
 8003078:	681e      	ldr	r6, [r3, #0]
 800307a:	4306      	orrs	r6, r0
 800307c:	601e      	str	r6, [r3, #0]
	GPIOB->MODER		= (GPIOB->MODER & ~(1<<1)) | (0<<1); //Setting LORA CS pin as output
 800307e:	681e      	ldr	r6, [r3, #0]
 8003080:	43ae      	bics	r6, r5
 8003082:	601e      	str	r6, [r3, #0]
	GPIOB->MODER		= (GPIOB->MODER & ~(1<<12)) | (0<<12);
 8003084:	681e      	ldr	r6, [r3, #0]
 8003086:	403e      	ands	r6, r7
 8003088:	601e      	str	r6, [r3, #0]
	GPIOB->MODER		= (GPIOB->MODER & ~(1<<13)) | (1<<13); //Set pin 6 as alternate function
 800308a:	681e      	ldr	r6, [r3, #0]
 800308c:	4331      	orrs	r1, r6
	GPIOB->MODER		= (GPIOB->MODER & ~(1<<14)) | (0<<14);
 800308e:	4666      	mov	r6, ip
	GPIOB->MODER		= (GPIOB->MODER & ~(1<<13)) | (1<<13); //Set pin 6 as alternate function
 8003090:	6019      	str	r1, [r3, #0]
	GPIOB->MODER		= (GPIOB->MODER & ~(1<<14)) | (0<<14);
 8003092:	6819      	ldr	r1, [r3, #0]
 8003094:	4031      	ands	r1, r6
 8003096:	6019      	str	r1, [r3, #0]
	GPIOB->MODER		= (GPIOB->MODER & ~(1<<15)) | (1<<15); //Set pin 7 as alternate function
 8003098:	6819      	ldr	r1, [r3, #0]
 800309a:	430a      	orrs	r2, r1
 800309c:	601a      	str	r2, [r3, #0]
	HW_write_LORACS(1);
 800309e:	f7ff ff83 	bl	8002fa8 <HW_write_LORACS>
	SPI1->CR1			|= SPI_CR1_MSTR; //Set as master
 80030a2:	2204      	movs	r2, #4
 80030a4:	4b30      	ldr	r3, [pc, #192]	; (8003168 <HW_trackerHwInit+0x1ac>)
	HW_DelayMs(2); //Give the regulator a moment to settle before we calibrate
 80030a6:	0028      	movs	r0, r5
	SPI1->CR1			|= SPI_CR1_MSTR; //Set as master
 80030a8:	6819      	ldr	r1, [r3, #0]
 80030aa:	430a      	orrs	r2, r1
 80030ac:	601a      	str	r2, [r3, #0]
	SPI1->CR1			|= SPI_CR1_BR_2;
 80030ae:	2220      	movs	r2, #32
 80030b0:	6819      	ldr	r1, [r3, #0]
 80030b2:	430a      	orrs	r2, r1
 80030b4:	601a      	str	r2, [r3, #0]
	SPI1->CR1			|= SPI_CR1_SSM; 
 80030b6:	2280      	movs	r2, #128	; 0x80
 80030b8:	6819      	ldr	r1, [r3, #0]
 80030ba:	0092      	lsls	r2, r2, #2
 80030bc:	430a      	orrs	r2, r1
	SPI1->CR1			|= SPI_CR1_SSI; //I dont really know what these do, but without them it doesnt work
 80030be:	2180      	movs	r1, #128	; 0x80
	SPI1->CR1			|= SPI_CR1_SSM; 
 80030c0:	601a      	str	r2, [r3, #0]
	SPI1->CR1			|= SPI_CR1_SSI; //I dont really know what these do, but without them it doesnt work
 80030c2:	681a      	ldr	r2, [r3, #0]
 80030c4:	0049      	lsls	r1, r1, #1
 80030c6:	430a      	orrs	r2, r1
 80030c8:	601a      	str	r2, [r3, #0]
	SPI1->CR2			|= SPI_CR2_FRXTH; //Make RXNE get set at 8bit fifo
 80030ca:	685a      	ldr	r2, [r3, #4]
 80030cc:	4314      	orrs	r4, r2
	SPI1->CR1			|= SPI_CR1_SPE; //Enable SPI peripheral
 80030ce:	2240      	movs	r2, #64	; 0x40
	SPI1->CR2			|= SPI_CR2_FRXTH; //Make RXNE get set at 8bit fifo
 80030d0:	605c      	str	r4, [r3, #4]
	SPI1->CR1			|= SPI_CR1_SPE; //Enable SPI peripheral
 80030d2:	6819      	ldr	r1, [r3, #0]
	ADC1->CR			|= ADC_CR_ADVREGEN; //Enable ADC voltage regulator
 80030d4:	4c25      	ldr	r4, [pc, #148]	; (800316c <HW_trackerHwInit+0x1b0>)
	SPI1->CR1			|= SPI_CR1_SPE; //Enable SPI peripheral
 80030d6:	430a      	orrs	r2, r1
 80030d8:	601a      	str	r2, [r3, #0]
	ADC1->CR			|= ADC_CR_ADVREGEN; //Enable ADC voltage regulator
 80030da:	2380      	movs	r3, #128	; 0x80
 80030dc:	68a2      	ldr	r2, [r4, #8]
 80030de:	055b      	lsls	r3, r3, #21
 80030e0:	4313      	orrs	r3, r2
 80030e2:	60a3      	str	r3, [r4, #8]
	HW_DelayMs(2); //Give the regulator a moment to settle before we calibrate
 80030e4:	f7ff ff32 	bl	8002f4c <HW_DelayMs>
	ADC1->CR			|= ADC_CR_ADCAL; //Start calibration
 80030e8:	2380      	movs	r3, #128	; 0x80
 80030ea:	68a2      	ldr	r2, [r4, #8]
 80030ec:	061b      	lsls	r3, r3, #24
 80030ee:	4313      	orrs	r3, r2
 80030f0:	60a3      	str	r3, [r4, #8]
	while((ADC1->CR & ADC_CR_ADCAL) != 0); //Wait until ADCAL is reset by hardware, meaning calibration done
 80030f2:	68a3      	ldr	r3, [r4, #8]
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	dbfc      	blt.n	80030f2 <HW_trackerHwInit+0x136>
	ADC1->SMPR			|= (0b111); //Set SMP1 to max
 80030f8:	2307      	movs	r3, #7
 80030fa:	6962      	ldr	r2, [r4, #20]
 80030fc:	4313      	orrs	r3, r2
 80030fe:	6163      	str	r3, [r4, #20]
	ADC->CCR			|= ADC_CCR_TSEN; //Temp sensor enable
 8003100:	2380      	movs	r3, #128	; 0x80
 8003102:	4a1b      	ldr	r2, [pc, #108]	; (8003170 <HW_trackerHwInit+0x1b4>)
 8003104:	041b      	lsls	r3, r3, #16
 8003106:	6811      	ldr	r1, [r2, #0]
 8003108:	430b      	orrs	r3, r1
 800310a:	6013      	str	r3, [r2, #0]
	ADC1->ISR			|= ADC_ISR_ADRDY; //Set ADRDY bit to clear it
 800310c:	2301      	movs	r3, #1
 800310e:	6822      	ldr	r2, [r4, #0]
 8003110:	431a      	orrs	r2, r3
 8003112:	6022      	str	r2, [r4, #0]
	ADC1->CR			|= ADC_CR_ADEN; //Send enable command
 8003114:	68a2      	ldr	r2, [r4, #8]
 8003116:	431a      	orrs	r2, r3
 8003118:	60a2      	str	r2, [r4, #8]
	while((ADC1->CR & ADC_ISR_ADRDY) != 1); //Wait until ADC is ready
 800311a:	68a2      	ldr	r2, [r4, #8]
 800311c:	421a      	tst	r2, r3
 800311e:	d0fc      	beq.n	800311a <HW_trackerHwInit+0x15e>
	USART1->BRR			= (CPU_FREQUENCY / 9600); //Set baud
 8003120:	4b14      	ldr	r3, [pc, #80]	; (8003174 <HW_trackerHwInit+0x1b8>)
 8003122:	4a15      	ldr	r2, [pc, #84]	; (8003178 <HW_trackerHwInit+0x1bc>)
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003124:	20c6      	movs	r0, #198	; 0xc6
 8003126:	60da      	str	r2, [r3, #12]
	USART1->CR1			|= (USART_CR1_RE | USART_CR1_TE | USART_CR1_UE | USART_CR1_RXNEIE_RXFNEIE); //Enable peripheral, receive, transmit, interrupt
 8003128:	222d      	movs	r2, #45	; 0x2d
 800312a:	6819      	ldr	r1, [r3, #0]
 800312c:	0080      	lsls	r0, r0, #2
 800312e:	430a      	orrs	r2, r1
 8003130:	2180      	movs	r1, #128	; 0x80
 8003132:	601a      	str	r2, [r3, #0]
 8003134:	4a11      	ldr	r2, [pc, #68]	; (800317c <HW_trackerHwInit+0x1c0>)
 8003136:	05c9      	lsls	r1, r1, #23
 8003138:	5813      	ldr	r3, [r2, r0]
 800313a:	021b      	lsls	r3, r3, #8
 800313c:	0a1b      	lsrs	r3, r3, #8
 800313e:	430b      	orrs	r3, r1
 8003140:	5013      	str	r3, [r2, r0]
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003142:	2380      	movs	r3, #128	; 0x80
 8003144:	051b      	lsls	r3, r3, #20
 8003146:	6013      	str	r3, [r2, #0]
}
 8003148:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800314a:	46c0      	nop			; (mov r8, r8)
 800314c:	40021000 	.word	0x40021000
 8003150:	ffffbbff 	.word	0xffffbbff
 8003154:	fffffbff 	.word	0xfffffbff
 8003158:	ffffefff 	.word	0xffffefff
 800315c:	ffffbfff 	.word	0xffffbfff
 8003160:	ffff7bff 	.word	0xffff7bff
 8003164:	50000400 	.word	0x50000400
 8003168:	40013000 	.word	0x40013000
 800316c:	40012400 	.word	0x40012400
 8003170:	40012708 	.word	0x40012708
 8003174:	40013800 	.word	0x40013800
 8003178:	00000682 	.word	0x00000682
 800317c:	e000e100 	.word	0xe000e100

08003180 <HW_SPI_WriteBuffer>:
		while(!(USART1->ISR & USART_ISR_TXE_TXFNF)) {};
		USART1->TDR = *_txbuffer++;
	}
}

void HW_SPI_WriteBuffer(uint8_t *data, uint32_t size) {
 8003180:	b570      	push	{r4, r5, r6, lr}
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003182:	b672      	cpsid	i
  __disable_irq();
  while(size--) {
	while(!(SPI1->SR & SPI_SR_TXE)) {};
 8003184:	2202      	movs	r2, #2
	*((volatile uint8_t*) &(SPI1->DR)) = *data++;
	while((SPI1->SR & SPI_SR_BSY)) {};
 8003186:	2580      	movs	r5, #128	; 0x80
 8003188:	4b0b      	ldr	r3, [pc, #44]	; (80031b8 <HW_SPI_WriteBuffer+0x38>)
	*((volatile uint8_t*) &(SPI1->DR)) = *data++;
 800318a:	4c0c      	ldr	r4, [pc, #48]	; (80031bc <HW_SPI_WriteBuffer+0x3c>)
 800318c:	1841      	adds	r1, r0, r1
  while(size--) {
 800318e:	4288      	cmp	r0, r1
 8003190:	d106      	bne.n	80031a0 <HW_SPI_WriteBuffer+0x20>
  }
  uint8_t dummy;
  while(SPI1->SR & SPI_SR_RXNE) {
 8003192:	2201      	movs	r2, #1
	dummy = *(volatile uint8_t *)&SPI1->DR;
 8003194:	4809      	ldr	r0, [pc, #36]	; (80031bc <HW_SPI_WriteBuffer+0x3c>)
  while(SPI1->SR & SPI_SR_RXNE) {
 8003196:	6899      	ldr	r1, [r3, #8]
 8003198:	4211      	tst	r1, r2
 800319a:	d10b      	bne.n	80031b4 <HW_SPI_WriteBuffer+0x34>
  __ASM volatile ("cpsie i" : : : "memory");
 800319c:	b662      	cpsie	i
  }
  __enable_irq();
}
 800319e:	bd70      	pop	{r4, r5, r6, pc}
	while(!(SPI1->SR & SPI_SR_TXE)) {};
 80031a0:	689e      	ldr	r6, [r3, #8]
 80031a2:	4216      	tst	r6, r2
 80031a4:	d0fc      	beq.n	80031a0 <HW_SPI_WriteBuffer+0x20>
	*((volatile uint8_t*) &(SPI1->DR)) = *data++;
 80031a6:	7806      	ldrb	r6, [r0, #0]
 80031a8:	7026      	strb	r6, [r4, #0]
	while((SPI1->SR & SPI_SR_BSY)) {};
 80031aa:	689e      	ldr	r6, [r3, #8]
 80031ac:	422e      	tst	r6, r5
 80031ae:	d1fc      	bne.n	80031aa <HW_SPI_WriteBuffer+0x2a>
 80031b0:	3001      	adds	r0, #1
 80031b2:	e7ec      	b.n	800318e <HW_SPI_WriteBuffer+0xe>
	dummy = *(volatile uint8_t *)&SPI1->DR;
 80031b4:	7801      	ldrb	r1, [r0, #0]
 80031b6:	e7ee      	b.n	8003196 <HW_SPI_WriteBuffer+0x16>
 80031b8:	40013000 	.word	0x40013000
 80031bc:	4001300c 	.word	0x4001300c

080031c0 <HW_SPI_ReadBuffer>:

void HW_SPI_ReadBuffer(uint8_t *data, uint32_t size) {
 80031c0:	b570      	push	{r4, r5, r6, lr}
  __ASM volatile ("cpsid i" : : : "memory");
 80031c2:	b672      	cpsid	i
  __disable_irq();
  while(size--) {
	while(!(SPI1->SR & SPI_SR_TXE)) {};
 80031c4:	2402      	movs	r4, #2
	*((volatile uint8_t*) &(SPI1->DR)) = 0x00;
	while(!(SPI1->SR & SPI_SR_RXNE)) {};
 80031c6:	2501      	movs	r5, #1
	while(!(SPI1->SR & SPI_SR_TXE)) {};
 80031c8:	4b09      	ldr	r3, [pc, #36]	; (80031f0 <HW_SPI_ReadBuffer+0x30>)
	*((volatile uint8_t*) &(SPI1->DR)) = 0x00;
 80031ca:	4a0a      	ldr	r2, [pc, #40]	; (80031f4 <HW_SPI_ReadBuffer+0x34>)
 80031cc:	1841      	adds	r1, r0, r1
  while(size--) {
 80031ce:	4288      	cmp	r0, r1
 80031d0:	d101      	bne.n	80031d6 <HW_SPI_ReadBuffer+0x16>
  __ASM volatile ("cpsie i" : : : "memory");
 80031d2:	b662      	cpsie	i
	*data++ = *((volatile uint8_t*) &(SPI1->DR));
  }
  __enable_irq();
}
 80031d4:	bd70      	pop	{r4, r5, r6, pc}
	while(!(SPI1->SR & SPI_SR_TXE)) {};
 80031d6:	689e      	ldr	r6, [r3, #8]
 80031d8:	4226      	tst	r6, r4
 80031da:	d0fc      	beq.n	80031d6 <HW_SPI_ReadBuffer+0x16>
	*((volatile uint8_t*) &(SPI1->DR)) = 0x00;
 80031dc:	2600      	movs	r6, #0
 80031de:	7016      	strb	r6, [r2, #0]
	while(!(SPI1->SR & SPI_SR_RXNE)) {};
 80031e0:	689e      	ldr	r6, [r3, #8]
 80031e2:	422e      	tst	r6, r5
 80031e4:	d0fc      	beq.n	80031e0 <HW_SPI_ReadBuffer+0x20>
	*data++ = *((volatile uint8_t*) &(SPI1->DR));
 80031e6:	7816      	ldrb	r6, [r2, #0]
 80031e8:	7006      	strb	r6, [r0, #0]
 80031ea:	3001      	adds	r0, #1
 80031ec:	e7ef      	b.n	80031ce <HW_SPI_ReadBuffer+0xe>
 80031ee:	46c0      	nop			; (mov r8, r8)
 80031f0:	40013000 	.word	0x40013000
 80031f4:	4001300c 	.word	0x4001300c

080031f8 <HW_readADC>:

int16_t HW_readADC(uint8_t _ch) {
    int16_t result;

    while((ADC1->ISR & ADC_ISR_ADRDY) != 1); //Wait until ADC is ready
 80031f8:	2201      	movs	r2, #1
 80031fa:	4b08      	ldr	r3, [pc, #32]	; (800321c <HW_readADC+0x24>)
 80031fc:	6819      	ldr	r1, [r3, #0]
 80031fe:	4211      	tst	r1, r2
 8003200:	d0fc      	beq.n	80031fc <HW_readADC+0x4>
    ADC1->CHSELR = (1 << _ch); //Select channel
 8003202:	4082      	lsls	r2, r0
    ADC1->CR |= ADC_CR_ADSTART; //Start sampling
 8003204:	2104      	movs	r1, #4
    ADC1->CHSELR = (1 << _ch); //Select channel
 8003206:	629a      	str	r2, [r3, #40]	; 0x28
    ADC1->CR |= ADC_CR_ADSTART; //Start sampling
 8003208:	689a      	ldr	r2, [r3, #8]
 800320a:	430a      	orrs	r2, r1
 800320c:	609a      	str	r2, [r3, #8]
    while((ADC1->ISR & ADC_ISR_EOC) == 0); //Wait for conversion to complete
 800320e:	681a      	ldr	r2, [r3, #0]
 8003210:	420a      	tst	r2, r1
 8003212:	d0fc      	beq.n	800320e <HW_readADC+0x16>
    result = ADC1->DR; //Read result from data register
 8003214:	6c18      	ldr	r0, [r3, #64]	; 0x40
    return result;
 8003216:	b200      	sxth	r0, r0
}
 8003218:	4770      	bx	lr
 800321a:	46c0      	nop			; (mov r8, r8)
 800321c:	40012400 	.word	0x40012400

08003220 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8003220:	480d      	ldr	r0, [pc, #52]	; (8003258 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8003222:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8003224:	e000      	b.n	8003228 <Reset_Handler+0x8>
 8003226:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003228:	480c      	ldr	r0, [pc, #48]	; (800325c <LoopForever+0x6>)
  ldr r1, =_edata
 800322a:	490d      	ldr	r1, [pc, #52]	; (8003260 <LoopForever+0xa>)
  ldr r2, =_sidata
 800322c:	4a0d      	ldr	r2, [pc, #52]	; (8003264 <LoopForever+0xe>)
  movs r3, #0
 800322e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003230:	e002      	b.n	8003238 <LoopCopyDataInit>

08003232 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003232:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003234:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003236:	3304      	adds	r3, #4

08003238 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003238:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800323a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800323c:	d3f9      	bcc.n	8003232 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800323e:	4a0a      	ldr	r2, [pc, #40]	; (8003268 <LoopForever+0x12>)
  ldr r4, =_ebss
 8003240:	4c0a      	ldr	r4, [pc, #40]	; (800326c <LoopForever+0x16>)
  movs r3, #0
 8003242:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003244:	e001      	b.n	800324a <LoopFillZerobss>

08003246 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8003246:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003248:	3204      	adds	r2, #4

0800324a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800324a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800324c:	d3fb      	bcc.n	8003246 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800324e:	f000 f823 	bl	8003298 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8003252:	f7ff f82b 	bl	80022ac <main>

08003256 <LoopForever>:

LoopForever:
  b LoopForever
 8003256:	e7fe      	b.n	8003256 <LoopForever>
  ldr   r0, =_estack
 8003258:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 800325c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003260:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8003264:	080048ac 	.word	0x080048ac
  ldr r2, =_sbss
 8003268:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800326c:	20000140 	.word	0x20000140

08003270 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8003270:	e7fe      	b.n	8003270 <ADC_IRQHandler>

08003272 <atoi>:
 8003272:	b510      	push	{r4, lr}
 8003274:	220a      	movs	r2, #10
 8003276:	2100      	movs	r1, #0
 8003278:	f000 f936 	bl	80034e8 <strtol>
 800327c:	bd10      	pop	{r4, pc}

0800327e <atol>:
 800327e:	b510      	push	{r4, lr}
 8003280:	220a      	movs	r2, #10
 8003282:	2100      	movs	r1, #0
 8003284:	f000 f930 	bl	80034e8 <strtol>
 8003288:	bd10      	pop	{r4, pc}
	...

0800328c <__errno>:
 800328c:	4b01      	ldr	r3, [pc, #4]	; (8003294 <__errno+0x8>)
 800328e:	6818      	ldr	r0, [r3, #0]
 8003290:	4770      	bx	lr
 8003292:	46c0      	nop			; (mov r8, r8)
 8003294:	20000000 	.word	0x20000000

08003298 <__libc_init_array>:
 8003298:	b570      	push	{r4, r5, r6, lr}
 800329a:	2600      	movs	r6, #0
 800329c:	4d0c      	ldr	r5, [pc, #48]	; (80032d0 <__libc_init_array+0x38>)
 800329e:	4c0d      	ldr	r4, [pc, #52]	; (80032d4 <__libc_init_array+0x3c>)
 80032a0:	1b64      	subs	r4, r4, r5
 80032a2:	10a4      	asrs	r4, r4, #2
 80032a4:	42a6      	cmp	r6, r4
 80032a6:	d109      	bne.n	80032bc <__libc_init_array+0x24>
 80032a8:	2600      	movs	r6, #0
 80032aa:	f001 f971 	bl	8004590 <_init>
 80032ae:	4d0a      	ldr	r5, [pc, #40]	; (80032d8 <__libc_init_array+0x40>)
 80032b0:	4c0a      	ldr	r4, [pc, #40]	; (80032dc <__libc_init_array+0x44>)
 80032b2:	1b64      	subs	r4, r4, r5
 80032b4:	10a4      	asrs	r4, r4, #2
 80032b6:	42a6      	cmp	r6, r4
 80032b8:	d105      	bne.n	80032c6 <__libc_init_array+0x2e>
 80032ba:	bd70      	pop	{r4, r5, r6, pc}
 80032bc:	00b3      	lsls	r3, r6, #2
 80032be:	58eb      	ldr	r3, [r5, r3]
 80032c0:	4798      	blx	r3
 80032c2:	3601      	adds	r6, #1
 80032c4:	e7ee      	b.n	80032a4 <__libc_init_array+0xc>
 80032c6:	00b3      	lsls	r3, r6, #2
 80032c8:	58eb      	ldr	r3, [r5, r3]
 80032ca:	4798      	blx	r3
 80032cc:	3601      	adds	r6, #1
 80032ce:	e7f2      	b.n	80032b6 <__libc_init_array+0x1e>
 80032d0:	080048a4 	.word	0x080048a4
 80032d4:	080048a4 	.word	0x080048a4
 80032d8:	080048a4 	.word	0x080048a4
 80032dc:	080048a8 	.word	0x080048a8

080032e0 <memcpy>:
 80032e0:	2300      	movs	r3, #0
 80032e2:	b510      	push	{r4, lr}
 80032e4:	429a      	cmp	r2, r3
 80032e6:	d100      	bne.n	80032ea <memcpy+0xa>
 80032e8:	bd10      	pop	{r4, pc}
 80032ea:	5ccc      	ldrb	r4, [r1, r3]
 80032ec:	54c4      	strb	r4, [r0, r3]
 80032ee:	3301      	adds	r3, #1
 80032f0:	e7f8      	b.n	80032e4 <memcpy+0x4>

080032f2 <memset>:
 80032f2:	0003      	movs	r3, r0
 80032f4:	1882      	adds	r2, r0, r2
 80032f6:	4293      	cmp	r3, r2
 80032f8:	d100      	bne.n	80032fc <memset+0xa>
 80032fa:	4770      	bx	lr
 80032fc:	7019      	strb	r1, [r3, #0]
 80032fe:	3301      	adds	r3, #1
 8003300:	e7f9      	b.n	80032f6 <memset+0x4>
	...

08003304 <strtok>:
 8003304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003306:	4b16      	ldr	r3, [pc, #88]	; (8003360 <strtok+0x5c>)
 8003308:	0005      	movs	r5, r0
 800330a:	681f      	ldr	r7, [r3, #0]
 800330c:	000e      	movs	r6, r1
 800330e:	6dbc      	ldr	r4, [r7, #88]	; 0x58
 8003310:	2c00      	cmp	r4, #0
 8003312:	d11d      	bne.n	8003350 <strtok+0x4c>
 8003314:	2050      	movs	r0, #80	; 0x50
 8003316:	f000 f921 	bl	800355c <malloc>
 800331a:	1e02      	subs	r2, r0, #0
 800331c:	65b8      	str	r0, [r7, #88]	; 0x58
 800331e:	d104      	bne.n	800332a <strtok+0x26>
 8003320:	2157      	movs	r1, #87	; 0x57
 8003322:	4b10      	ldr	r3, [pc, #64]	; (8003364 <strtok+0x60>)
 8003324:	4810      	ldr	r0, [pc, #64]	; (8003368 <strtok+0x64>)
 8003326:	f000 f8eb 	bl	8003500 <__assert_func>
 800332a:	6004      	str	r4, [r0, #0]
 800332c:	6044      	str	r4, [r0, #4]
 800332e:	6084      	str	r4, [r0, #8]
 8003330:	60c4      	str	r4, [r0, #12]
 8003332:	6104      	str	r4, [r0, #16]
 8003334:	6144      	str	r4, [r0, #20]
 8003336:	6184      	str	r4, [r0, #24]
 8003338:	6284      	str	r4, [r0, #40]	; 0x28
 800333a:	62c4      	str	r4, [r0, #44]	; 0x2c
 800333c:	6304      	str	r4, [r0, #48]	; 0x30
 800333e:	6344      	str	r4, [r0, #52]	; 0x34
 8003340:	6384      	str	r4, [r0, #56]	; 0x38
 8003342:	63c4      	str	r4, [r0, #60]	; 0x3c
 8003344:	6404      	str	r4, [r0, #64]	; 0x40
 8003346:	6444      	str	r4, [r0, #68]	; 0x44
 8003348:	6484      	str	r4, [r0, #72]	; 0x48
 800334a:	64c4      	str	r4, [r0, #76]	; 0x4c
 800334c:	7704      	strb	r4, [r0, #28]
 800334e:	6244      	str	r4, [r0, #36]	; 0x24
 8003350:	0031      	movs	r1, r6
 8003352:	0028      	movs	r0, r5
 8003354:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8003356:	2301      	movs	r3, #1
 8003358:	f000 f808 	bl	800336c <__strtok_r>
 800335c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800335e:	46c0      	nop			; (mov r8, r8)
 8003360:	20000000 	.word	0x20000000
 8003364:	08004660 	.word	0x08004660
 8003368:	08004677 	.word	0x08004677

0800336c <__strtok_r>:
 800336c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800336e:	2800      	cmp	r0, #0
 8003370:	d102      	bne.n	8003378 <__strtok_r+0xc>
 8003372:	6810      	ldr	r0, [r2, #0]
 8003374:	2800      	cmp	r0, #0
 8003376:	d013      	beq.n	80033a0 <__strtok_r+0x34>
 8003378:	0004      	movs	r4, r0
 800337a:	0020      	movs	r0, r4
 800337c:	000e      	movs	r6, r1
 800337e:	7805      	ldrb	r5, [r0, #0]
 8003380:	3401      	adds	r4, #1
 8003382:	7837      	ldrb	r7, [r6, #0]
 8003384:	2f00      	cmp	r7, #0
 8003386:	d104      	bne.n	8003392 <__strtok_r+0x26>
 8003388:	2d00      	cmp	r5, #0
 800338a:	d10f      	bne.n	80033ac <__strtok_r+0x40>
 800338c:	0028      	movs	r0, r5
 800338e:	6015      	str	r5, [r2, #0]
 8003390:	e006      	b.n	80033a0 <__strtok_r+0x34>
 8003392:	3601      	adds	r6, #1
 8003394:	42bd      	cmp	r5, r7
 8003396:	d1f4      	bne.n	8003382 <__strtok_r+0x16>
 8003398:	2b00      	cmp	r3, #0
 800339a:	d1ee      	bne.n	800337a <__strtok_r+0xe>
 800339c:	6014      	str	r4, [r2, #0]
 800339e:	7003      	strb	r3, [r0, #0]
 80033a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80033a2:	002f      	movs	r7, r5
 80033a4:	e00f      	b.n	80033c6 <__strtok_r+0x5a>
 80033a6:	3301      	adds	r3, #1
 80033a8:	2e00      	cmp	r6, #0
 80033aa:	d104      	bne.n	80033b6 <__strtok_r+0x4a>
 80033ac:	0023      	movs	r3, r4
 80033ae:	3401      	adds	r4, #1
 80033b0:	781d      	ldrb	r5, [r3, #0]
 80033b2:	0027      	movs	r7, r4
 80033b4:	000b      	movs	r3, r1
 80033b6:	781e      	ldrb	r6, [r3, #0]
 80033b8:	42b5      	cmp	r5, r6
 80033ba:	d1f4      	bne.n	80033a6 <__strtok_r+0x3a>
 80033bc:	2d00      	cmp	r5, #0
 80033be:	d0f0      	beq.n	80033a2 <__strtok_r+0x36>
 80033c0:	2300      	movs	r3, #0
 80033c2:	3c01      	subs	r4, #1
 80033c4:	7023      	strb	r3, [r4, #0]
 80033c6:	6017      	str	r7, [r2, #0]
 80033c8:	e7ea      	b.n	80033a0 <__strtok_r+0x34>
	...

080033cc <_strtol_l.constprop.0>:
 80033cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80033ce:	b087      	sub	sp, #28
 80033d0:	001e      	movs	r6, r3
 80033d2:	9005      	str	r0, [sp, #20]
 80033d4:	9101      	str	r1, [sp, #4]
 80033d6:	9202      	str	r2, [sp, #8]
 80033d8:	2b01      	cmp	r3, #1
 80033da:	d045      	beq.n	8003468 <_strtol_l.constprop.0+0x9c>
 80033dc:	000b      	movs	r3, r1
 80033de:	2e24      	cmp	r6, #36	; 0x24
 80033e0:	d842      	bhi.n	8003468 <_strtol_l.constprop.0+0x9c>
 80033e2:	4a3f      	ldr	r2, [pc, #252]	; (80034e0 <_strtol_l.constprop.0+0x114>)
 80033e4:	2108      	movs	r1, #8
 80033e6:	4694      	mov	ip, r2
 80033e8:	001a      	movs	r2, r3
 80033ea:	4660      	mov	r0, ip
 80033ec:	7814      	ldrb	r4, [r2, #0]
 80033ee:	3301      	adds	r3, #1
 80033f0:	5d00      	ldrb	r0, [r0, r4]
 80033f2:	001d      	movs	r5, r3
 80033f4:	0007      	movs	r7, r0
 80033f6:	400f      	ands	r7, r1
 80033f8:	4208      	tst	r0, r1
 80033fa:	d1f5      	bne.n	80033e8 <_strtol_l.constprop.0+0x1c>
 80033fc:	2c2d      	cmp	r4, #45	; 0x2d
 80033fe:	d13a      	bne.n	8003476 <_strtol_l.constprop.0+0xaa>
 8003400:	2701      	movs	r7, #1
 8003402:	781c      	ldrb	r4, [r3, #0]
 8003404:	1c95      	adds	r5, r2, #2
 8003406:	2e00      	cmp	r6, #0
 8003408:	d065      	beq.n	80034d6 <_strtol_l.constprop.0+0x10a>
 800340a:	2e10      	cmp	r6, #16
 800340c:	d109      	bne.n	8003422 <_strtol_l.constprop.0+0x56>
 800340e:	2c30      	cmp	r4, #48	; 0x30
 8003410:	d107      	bne.n	8003422 <_strtol_l.constprop.0+0x56>
 8003412:	2220      	movs	r2, #32
 8003414:	782b      	ldrb	r3, [r5, #0]
 8003416:	4393      	bics	r3, r2
 8003418:	2b58      	cmp	r3, #88	; 0x58
 800341a:	d157      	bne.n	80034cc <_strtol_l.constprop.0+0x100>
 800341c:	2610      	movs	r6, #16
 800341e:	786c      	ldrb	r4, [r5, #1]
 8003420:	3502      	adds	r5, #2
 8003422:	4b30      	ldr	r3, [pc, #192]	; (80034e4 <_strtol_l.constprop.0+0x118>)
 8003424:	0031      	movs	r1, r6
 8003426:	18fb      	adds	r3, r7, r3
 8003428:	0018      	movs	r0, r3
 800342a:	9303      	str	r3, [sp, #12]
 800342c:	f7fc fefa 	bl	8000224 <__aeabi_uidivmod>
 8003430:	2300      	movs	r3, #0
 8003432:	2201      	movs	r2, #1
 8003434:	4684      	mov	ip, r0
 8003436:	0018      	movs	r0, r3
 8003438:	9104      	str	r1, [sp, #16]
 800343a:	4252      	negs	r2, r2
 800343c:	0021      	movs	r1, r4
 800343e:	3930      	subs	r1, #48	; 0x30
 8003440:	2909      	cmp	r1, #9
 8003442:	d81d      	bhi.n	8003480 <_strtol_l.constprop.0+0xb4>
 8003444:	000c      	movs	r4, r1
 8003446:	42a6      	cmp	r6, r4
 8003448:	dd28      	ble.n	800349c <_strtol_l.constprop.0+0xd0>
 800344a:	2b00      	cmp	r3, #0
 800344c:	db24      	blt.n	8003498 <_strtol_l.constprop.0+0xcc>
 800344e:	0013      	movs	r3, r2
 8003450:	4584      	cmp	ip, r0
 8003452:	d306      	bcc.n	8003462 <_strtol_l.constprop.0+0x96>
 8003454:	d102      	bne.n	800345c <_strtol_l.constprop.0+0x90>
 8003456:	9904      	ldr	r1, [sp, #16]
 8003458:	42a1      	cmp	r1, r4
 800345a:	db02      	blt.n	8003462 <_strtol_l.constprop.0+0x96>
 800345c:	2301      	movs	r3, #1
 800345e:	4370      	muls	r0, r6
 8003460:	1820      	adds	r0, r4, r0
 8003462:	782c      	ldrb	r4, [r5, #0]
 8003464:	3501      	adds	r5, #1
 8003466:	e7e9      	b.n	800343c <_strtol_l.constprop.0+0x70>
 8003468:	f7ff ff10 	bl	800328c <__errno>
 800346c:	2316      	movs	r3, #22
 800346e:	6003      	str	r3, [r0, #0]
 8003470:	2000      	movs	r0, #0
 8003472:	b007      	add	sp, #28
 8003474:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003476:	2c2b      	cmp	r4, #43	; 0x2b
 8003478:	d1c5      	bne.n	8003406 <_strtol_l.constprop.0+0x3a>
 800347a:	781c      	ldrb	r4, [r3, #0]
 800347c:	1c95      	adds	r5, r2, #2
 800347e:	e7c2      	b.n	8003406 <_strtol_l.constprop.0+0x3a>
 8003480:	0021      	movs	r1, r4
 8003482:	3941      	subs	r1, #65	; 0x41
 8003484:	2919      	cmp	r1, #25
 8003486:	d801      	bhi.n	800348c <_strtol_l.constprop.0+0xc0>
 8003488:	3c37      	subs	r4, #55	; 0x37
 800348a:	e7dc      	b.n	8003446 <_strtol_l.constprop.0+0x7a>
 800348c:	0021      	movs	r1, r4
 800348e:	3961      	subs	r1, #97	; 0x61
 8003490:	2919      	cmp	r1, #25
 8003492:	d803      	bhi.n	800349c <_strtol_l.constprop.0+0xd0>
 8003494:	3c57      	subs	r4, #87	; 0x57
 8003496:	e7d6      	b.n	8003446 <_strtol_l.constprop.0+0x7a>
 8003498:	0013      	movs	r3, r2
 800349a:	e7e2      	b.n	8003462 <_strtol_l.constprop.0+0x96>
 800349c:	2b00      	cmp	r3, #0
 800349e:	da09      	bge.n	80034b4 <_strtol_l.constprop.0+0xe8>
 80034a0:	2322      	movs	r3, #34	; 0x22
 80034a2:	9a05      	ldr	r2, [sp, #20]
 80034a4:	9803      	ldr	r0, [sp, #12]
 80034a6:	6013      	str	r3, [r2, #0]
 80034a8:	9b02      	ldr	r3, [sp, #8]
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	d0e1      	beq.n	8003472 <_strtol_l.constprop.0+0xa6>
 80034ae:	1e6b      	subs	r3, r5, #1
 80034b0:	9301      	str	r3, [sp, #4]
 80034b2:	e007      	b.n	80034c4 <_strtol_l.constprop.0+0xf8>
 80034b4:	2f00      	cmp	r7, #0
 80034b6:	d000      	beq.n	80034ba <_strtol_l.constprop.0+0xee>
 80034b8:	4240      	negs	r0, r0
 80034ba:	9a02      	ldr	r2, [sp, #8]
 80034bc:	2a00      	cmp	r2, #0
 80034be:	d0d8      	beq.n	8003472 <_strtol_l.constprop.0+0xa6>
 80034c0:	2b00      	cmp	r3, #0
 80034c2:	d1f4      	bne.n	80034ae <_strtol_l.constprop.0+0xe2>
 80034c4:	9b02      	ldr	r3, [sp, #8]
 80034c6:	9a01      	ldr	r2, [sp, #4]
 80034c8:	601a      	str	r2, [r3, #0]
 80034ca:	e7d2      	b.n	8003472 <_strtol_l.constprop.0+0xa6>
 80034cc:	2430      	movs	r4, #48	; 0x30
 80034ce:	2e00      	cmp	r6, #0
 80034d0:	d1a7      	bne.n	8003422 <_strtol_l.constprop.0+0x56>
 80034d2:	3608      	adds	r6, #8
 80034d4:	e7a5      	b.n	8003422 <_strtol_l.constprop.0+0x56>
 80034d6:	2c30      	cmp	r4, #48	; 0x30
 80034d8:	d09b      	beq.n	8003412 <_strtol_l.constprop.0+0x46>
 80034da:	260a      	movs	r6, #10
 80034dc:	e7a1      	b.n	8003422 <_strtol_l.constprop.0+0x56>
 80034de:	46c0      	nop			; (mov r8, r8)
 80034e0:	08004711 	.word	0x08004711
 80034e4:	7fffffff 	.word	0x7fffffff

080034e8 <strtol>:
 80034e8:	b510      	push	{r4, lr}
 80034ea:	0013      	movs	r3, r2
 80034ec:	000a      	movs	r2, r1
 80034ee:	0001      	movs	r1, r0
 80034f0:	4802      	ldr	r0, [pc, #8]	; (80034fc <strtol+0x14>)
 80034f2:	6800      	ldr	r0, [r0, #0]
 80034f4:	f7ff ff6a 	bl	80033cc <_strtol_l.constprop.0>
 80034f8:	bd10      	pop	{r4, pc}
 80034fa:	46c0      	nop			; (mov r8, r8)
 80034fc:	20000000 	.word	0x20000000

08003500 <__assert_func>:
 8003500:	b530      	push	{r4, r5, lr}
 8003502:	0014      	movs	r4, r2
 8003504:	001a      	movs	r2, r3
 8003506:	4b09      	ldr	r3, [pc, #36]	; (800352c <__assert_func+0x2c>)
 8003508:	0005      	movs	r5, r0
 800350a:	681b      	ldr	r3, [r3, #0]
 800350c:	b085      	sub	sp, #20
 800350e:	68d8      	ldr	r0, [r3, #12]
 8003510:	4b07      	ldr	r3, [pc, #28]	; (8003530 <__assert_func+0x30>)
 8003512:	2c00      	cmp	r4, #0
 8003514:	d101      	bne.n	800351a <__assert_func+0x1a>
 8003516:	4b07      	ldr	r3, [pc, #28]	; (8003534 <__assert_func+0x34>)
 8003518:	001c      	movs	r4, r3
 800351a:	9301      	str	r3, [sp, #4]
 800351c:	9100      	str	r1, [sp, #0]
 800351e:	002b      	movs	r3, r5
 8003520:	4905      	ldr	r1, [pc, #20]	; (8003538 <__assert_func+0x38>)
 8003522:	9402      	str	r4, [sp, #8]
 8003524:	f000 f80a 	bl	800353c <fiprintf>
 8003528:	f000 fcc8 	bl	8003ebc <abort>
 800352c:	20000000 	.word	0x20000000
 8003530:	080046d4 	.word	0x080046d4
 8003534:	0800470f 	.word	0x0800470f
 8003538:	080046e1 	.word	0x080046e1

0800353c <fiprintf>:
 800353c:	b40e      	push	{r1, r2, r3}
 800353e:	b503      	push	{r0, r1, lr}
 8003540:	0001      	movs	r1, r0
 8003542:	ab03      	add	r3, sp, #12
 8003544:	4804      	ldr	r0, [pc, #16]	; (8003558 <fiprintf+0x1c>)
 8003546:	cb04      	ldmia	r3!, {r2}
 8003548:	6800      	ldr	r0, [r0, #0]
 800354a:	9301      	str	r3, [sp, #4]
 800354c:	f000 f91a 	bl	8003784 <_vfiprintf_r>
 8003550:	b002      	add	sp, #8
 8003552:	bc08      	pop	{r3}
 8003554:	b003      	add	sp, #12
 8003556:	4718      	bx	r3
 8003558:	20000000 	.word	0x20000000

0800355c <malloc>:
 800355c:	b510      	push	{r4, lr}
 800355e:	4b03      	ldr	r3, [pc, #12]	; (800356c <malloc+0x10>)
 8003560:	0001      	movs	r1, r0
 8003562:	6818      	ldr	r0, [r3, #0]
 8003564:	f000 f870 	bl	8003648 <_malloc_r>
 8003568:	bd10      	pop	{r4, pc}
 800356a:	46c0      	nop			; (mov r8, r8)
 800356c:	20000000 	.word	0x20000000

08003570 <_free_r>:
 8003570:	b570      	push	{r4, r5, r6, lr}
 8003572:	0005      	movs	r5, r0
 8003574:	2900      	cmp	r1, #0
 8003576:	d010      	beq.n	800359a <_free_r+0x2a>
 8003578:	1f0c      	subs	r4, r1, #4
 800357a:	6823      	ldr	r3, [r4, #0]
 800357c:	2b00      	cmp	r3, #0
 800357e:	da00      	bge.n	8003582 <_free_r+0x12>
 8003580:	18e4      	adds	r4, r4, r3
 8003582:	0028      	movs	r0, r5
 8003584:	f000 feec 	bl	8004360 <__malloc_lock>
 8003588:	4a1d      	ldr	r2, [pc, #116]	; (8003600 <_free_r+0x90>)
 800358a:	6813      	ldr	r3, [r2, #0]
 800358c:	2b00      	cmp	r3, #0
 800358e:	d105      	bne.n	800359c <_free_r+0x2c>
 8003590:	6063      	str	r3, [r4, #4]
 8003592:	6014      	str	r4, [r2, #0]
 8003594:	0028      	movs	r0, r5
 8003596:	f000 feeb 	bl	8004370 <__malloc_unlock>
 800359a:	bd70      	pop	{r4, r5, r6, pc}
 800359c:	42a3      	cmp	r3, r4
 800359e:	d908      	bls.n	80035b2 <_free_r+0x42>
 80035a0:	6821      	ldr	r1, [r4, #0]
 80035a2:	1860      	adds	r0, r4, r1
 80035a4:	4283      	cmp	r3, r0
 80035a6:	d1f3      	bne.n	8003590 <_free_r+0x20>
 80035a8:	6818      	ldr	r0, [r3, #0]
 80035aa:	685b      	ldr	r3, [r3, #4]
 80035ac:	1841      	adds	r1, r0, r1
 80035ae:	6021      	str	r1, [r4, #0]
 80035b0:	e7ee      	b.n	8003590 <_free_r+0x20>
 80035b2:	001a      	movs	r2, r3
 80035b4:	685b      	ldr	r3, [r3, #4]
 80035b6:	2b00      	cmp	r3, #0
 80035b8:	d001      	beq.n	80035be <_free_r+0x4e>
 80035ba:	42a3      	cmp	r3, r4
 80035bc:	d9f9      	bls.n	80035b2 <_free_r+0x42>
 80035be:	6811      	ldr	r1, [r2, #0]
 80035c0:	1850      	adds	r0, r2, r1
 80035c2:	42a0      	cmp	r0, r4
 80035c4:	d10b      	bne.n	80035de <_free_r+0x6e>
 80035c6:	6820      	ldr	r0, [r4, #0]
 80035c8:	1809      	adds	r1, r1, r0
 80035ca:	1850      	adds	r0, r2, r1
 80035cc:	6011      	str	r1, [r2, #0]
 80035ce:	4283      	cmp	r3, r0
 80035d0:	d1e0      	bne.n	8003594 <_free_r+0x24>
 80035d2:	6818      	ldr	r0, [r3, #0]
 80035d4:	685b      	ldr	r3, [r3, #4]
 80035d6:	1841      	adds	r1, r0, r1
 80035d8:	6011      	str	r1, [r2, #0]
 80035da:	6053      	str	r3, [r2, #4]
 80035dc:	e7da      	b.n	8003594 <_free_r+0x24>
 80035de:	42a0      	cmp	r0, r4
 80035e0:	d902      	bls.n	80035e8 <_free_r+0x78>
 80035e2:	230c      	movs	r3, #12
 80035e4:	602b      	str	r3, [r5, #0]
 80035e6:	e7d5      	b.n	8003594 <_free_r+0x24>
 80035e8:	6821      	ldr	r1, [r4, #0]
 80035ea:	1860      	adds	r0, r4, r1
 80035ec:	4283      	cmp	r3, r0
 80035ee:	d103      	bne.n	80035f8 <_free_r+0x88>
 80035f0:	6818      	ldr	r0, [r3, #0]
 80035f2:	685b      	ldr	r3, [r3, #4]
 80035f4:	1841      	adds	r1, r0, r1
 80035f6:	6021      	str	r1, [r4, #0]
 80035f8:	6063      	str	r3, [r4, #4]
 80035fa:	6054      	str	r4, [r2, #4]
 80035fc:	e7ca      	b.n	8003594 <_free_r+0x24>
 80035fe:	46c0      	nop			; (mov r8, r8)
 8003600:	20000130 	.word	0x20000130

08003604 <sbrk_aligned>:
 8003604:	b570      	push	{r4, r5, r6, lr}
 8003606:	4e0f      	ldr	r6, [pc, #60]	; (8003644 <sbrk_aligned+0x40>)
 8003608:	000d      	movs	r5, r1
 800360a:	6831      	ldr	r1, [r6, #0]
 800360c:	0004      	movs	r4, r0
 800360e:	2900      	cmp	r1, #0
 8003610:	d102      	bne.n	8003618 <sbrk_aligned+0x14>
 8003612:	f000 fb73 	bl	8003cfc <_sbrk_r>
 8003616:	6030      	str	r0, [r6, #0]
 8003618:	0029      	movs	r1, r5
 800361a:	0020      	movs	r0, r4
 800361c:	f000 fb6e 	bl	8003cfc <_sbrk_r>
 8003620:	1c43      	adds	r3, r0, #1
 8003622:	d00a      	beq.n	800363a <sbrk_aligned+0x36>
 8003624:	2303      	movs	r3, #3
 8003626:	1cc5      	adds	r5, r0, #3
 8003628:	439d      	bics	r5, r3
 800362a:	42a8      	cmp	r0, r5
 800362c:	d007      	beq.n	800363e <sbrk_aligned+0x3a>
 800362e:	1a29      	subs	r1, r5, r0
 8003630:	0020      	movs	r0, r4
 8003632:	f000 fb63 	bl	8003cfc <_sbrk_r>
 8003636:	1c43      	adds	r3, r0, #1
 8003638:	d101      	bne.n	800363e <sbrk_aligned+0x3a>
 800363a:	2501      	movs	r5, #1
 800363c:	426d      	negs	r5, r5
 800363e:	0028      	movs	r0, r5
 8003640:	bd70      	pop	{r4, r5, r6, pc}
 8003642:	46c0      	nop			; (mov r8, r8)
 8003644:	20000134 	.word	0x20000134

08003648 <_malloc_r>:
 8003648:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800364a:	2203      	movs	r2, #3
 800364c:	1ccb      	adds	r3, r1, #3
 800364e:	4393      	bics	r3, r2
 8003650:	3308      	adds	r3, #8
 8003652:	0006      	movs	r6, r0
 8003654:	001f      	movs	r7, r3
 8003656:	2b0c      	cmp	r3, #12
 8003658:	d232      	bcs.n	80036c0 <_malloc_r+0x78>
 800365a:	270c      	movs	r7, #12
 800365c:	42b9      	cmp	r1, r7
 800365e:	d831      	bhi.n	80036c4 <_malloc_r+0x7c>
 8003660:	0030      	movs	r0, r6
 8003662:	f000 fe7d 	bl	8004360 <__malloc_lock>
 8003666:	4d32      	ldr	r5, [pc, #200]	; (8003730 <_malloc_r+0xe8>)
 8003668:	682b      	ldr	r3, [r5, #0]
 800366a:	001c      	movs	r4, r3
 800366c:	2c00      	cmp	r4, #0
 800366e:	d12e      	bne.n	80036ce <_malloc_r+0x86>
 8003670:	0039      	movs	r1, r7
 8003672:	0030      	movs	r0, r6
 8003674:	f7ff ffc6 	bl	8003604 <sbrk_aligned>
 8003678:	0004      	movs	r4, r0
 800367a:	1c43      	adds	r3, r0, #1
 800367c:	d11e      	bne.n	80036bc <_malloc_r+0x74>
 800367e:	682c      	ldr	r4, [r5, #0]
 8003680:	0025      	movs	r5, r4
 8003682:	2d00      	cmp	r5, #0
 8003684:	d14a      	bne.n	800371c <_malloc_r+0xd4>
 8003686:	6823      	ldr	r3, [r4, #0]
 8003688:	0029      	movs	r1, r5
 800368a:	18e3      	adds	r3, r4, r3
 800368c:	0030      	movs	r0, r6
 800368e:	9301      	str	r3, [sp, #4]
 8003690:	f000 fb34 	bl	8003cfc <_sbrk_r>
 8003694:	9b01      	ldr	r3, [sp, #4]
 8003696:	4283      	cmp	r3, r0
 8003698:	d143      	bne.n	8003722 <_malloc_r+0xda>
 800369a:	6823      	ldr	r3, [r4, #0]
 800369c:	3703      	adds	r7, #3
 800369e:	1aff      	subs	r7, r7, r3
 80036a0:	2303      	movs	r3, #3
 80036a2:	439f      	bics	r7, r3
 80036a4:	3708      	adds	r7, #8
 80036a6:	2f0c      	cmp	r7, #12
 80036a8:	d200      	bcs.n	80036ac <_malloc_r+0x64>
 80036aa:	270c      	movs	r7, #12
 80036ac:	0039      	movs	r1, r7
 80036ae:	0030      	movs	r0, r6
 80036b0:	f7ff ffa8 	bl	8003604 <sbrk_aligned>
 80036b4:	1c43      	adds	r3, r0, #1
 80036b6:	d034      	beq.n	8003722 <_malloc_r+0xda>
 80036b8:	6823      	ldr	r3, [r4, #0]
 80036ba:	19df      	adds	r7, r3, r7
 80036bc:	6027      	str	r7, [r4, #0]
 80036be:	e013      	b.n	80036e8 <_malloc_r+0xa0>
 80036c0:	2b00      	cmp	r3, #0
 80036c2:	dacb      	bge.n	800365c <_malloc_r+0x14>
 80036c4:	230c      	movs	r3, #12
 80036c6:	2500      	movs	r5, #0
 80036c8:	6033      	str	r3, [r6, #0]
 80036ca:	0028      	movs	r0, r5
 80036cc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80036ce:	6822      	ldr	r2, [r4, #0]
 80036d0:	1bd1      	subs	r1, r2, r7
 80036d2:	d420      	bmi.n	8003716 <_malloc_r+0xce>
 80036d4:	290b      	cmp	r1, #11
 80036d6:	d917      	bls.n	8003708 <_malloc_r+0xc0>
 80036d8:	19e2      	adds	r2, r4, r7
 80036da:	6027      	str	r7, [r4, #0]
 80036dc:	42a3      	cmp	r3, r4
 80036de:	d111      	bne.n	8003704 <_malloc_r+0xbc>
 80036e0:	602a      	str	r2, [r5, #0]
 80036e2:	6863      	ldr	r3, [r4, #4]
 80036e4:	6011      	str	r1, [r2, #0]
 80036e6:	6053      	str	r3, [r2, #4]
 80036e8:	0030      	movs	r0, r6
 80036ea:	0025      	movs	r5, r4
 80036ec:	f000 fe40 	bl	8004370 <__malloc_unlock>
 80036f0:	2207      	movs	r2, #7
 80036f2:	350b      	adds	r5, #11
 80036f4:	1d23      	adds	r3, r4, #4
 80036f6:	4395      	bics	r5, r2
 80036f8:	1aea      	subs	r2, r5, r3
 80036fa:	429d      	cmp	r5, r3
 80036fc:	d0e5      	beq.n	80036ca <_malloc_r+0x82>
 80036fe:	1b5b      	subs	r3, r3, r5
 8003700:	50a3      	str	r3, [r4, r2]
 8003702:	e7e2      	b.n	80036ca <_malloc_r+0x82>
 8003704:	605a      	str	r2, [r3, #4]
 8003706:	e7ec      	b.n	80036e2 <_malloc_r+0x9a>
 8003708:	6862      	ldr	r2, [r4, #4]
 800370a:	42a3      	cmp	r3, r4
 800370c:	d101      	bne.n	8003712 <_malloc_r+0xca>
 800370e:	602a      	str	r2, [r5, #0]
 8003710:	e7ea      	b.n	80036e8 <_malloc_r+0xa0>
 8003712:	605a      	str	r2, [r3, #4]
 8003714:	e7e8      	b.n	80036e8 <_malloc_r+0xa0>
 8003716:	0023      	movs	r3, r4
 8003718:	6864      	ldr	r4, [r4, #4]
 800371a:	e7a7      	b.n	800366c <_malloc_r+0x24>
 800371c:	002c      	movs	r4, r5
 800371e:	686d      	ldr	r5, [r5, #4]
 8003720:	e7af      	b.n	8003682 <_malloc_r+0x3a>
 8003722:	230c      	movs	r3, #12
 8003724:	0030      	movs	r0, r6
 8003726:	6033      	str	r3, [r6, #0]
 8003728:	f000 fe22 	bl	8004370 <__malloc_unlock>
 800372c:	e7cd      	b.n	80036ca <_malloc_r+0x82>
 800372e:	46c0      	nop			; (mov r8, r8)
 8003730:	20000130 	.word	0x20000130

08003734 <__sfputc_r>:
 8003734:	6893      	ldr	r3, [r2, #8]
 8003736:	b510      	push	{r4, lr}
 8003738:	3b01      	subs	r3, #1
 800373a:	6093      	str	r3, [r2, #8]
 800373c:	2b00      	cmp	r3, #0
 800373e:	da04      	bge.n	800374a <__sfputc_r+0x16>
 8003740:	6994      	ldr	r4, [r2, #24]
 8003742:	42a3      	cmp	r3, r4
 8003744:	db07      	blt.n	8003756 <__sfputc_r+0x22>
 8003746:	290a      	cmp	r1, #10
 8003748:	d005      	beq.n	8003756 <__sfputc_r+0x22>
 800374a:	6813      	ldr	r3, [r2, #0]
 800374c:	1c58      	adds	r0, r3, #1
 800374e:	6010      	str	r0, [r2, #0]
 8003750:	7019      	strb	r1, [r3, #0]
 8003752:	0008      	movs	r0, r1
 8003754:	bd10      	pop	{r4, pc}
 8003756:	f000 fae3 	bl	8003d20 <__swbuf_r>
 800375a:	0001      	movs	r1, r0
 800375c:	e7f9      	b.n	8003752 <__sfputc_r+0x1e>

0800375e <__sfputs_r>:
 800375e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003760:	0006      	movs	r6, r0
 8003762:	000f      	movs	r7, r1
 8003764:	0014      	movs	r4, r2
 8003766:	18d5      	adds	r5, r2, r3
 8003768:	42ac      	cmp	r4, r5
 800376a:	d101      	bne.n	8003770 <__sfputs_r+0x12>
 800376c:	2000      	movs	r0, #0
 800376e:	e007      	b.n	8003780 <__sfputs_r+0x22>
 8003770:	7821      	ldrb	r1, [r4, #0]
 8003772:	003a      	movs	r2, r7
 8003774:	0030      	movs	r0, r6
 8003776:	f7ff ffdd 	bl	8003734 <__sfputc_r>
 800377a:	3401      	adds	r4, #1
 800377c:	1c43      	adds	r3, r0, #1
 800377e:	d1f3      	bne.n	8003768 <__sfputs_r+0xa>
 8003780:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003784 <_vfiprintf_r>:
 8003784:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003786:	b0a1      	sub	sp, #132	; 0x84
 8003788:	0006      	movs	r6, r0
 800378a:	000c      	movs	r4, r1
 800378c:	001f      	movs	r7, r3
 800378e:	9203      	str	r2, [sp, #12]
 8003790:	2800      	cmp	r0, #0
 8003792:	d004      	beq.n	800379e <_vfiprintf_r+0x1a>
 8003794:	6983      	ldr	r3, [r0, #24]
 8003796:	2b00      	cmp	r3, #0
 8003798:	d101      	bne.n	800379e <_vfiprintf_r+0x1a>
 800379a:	f000 fcc5 	bl	8004128 <__sinit>
 800379e:	4b8e      	ldr	r3, [pc, #568]	; (80039d8 <_vfiprintf_r+0x254>)
 80037a0:	429c      	cmp	r4, r3
 80037a2:	d11c      	bne.n	80037de <_vfiprintf_r+0x5a>
 80037a4:	6874      	ldr	r4, [r6, #4]
 80037a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80037a8:	07db      	lsls	r3, r3, #31
 80037aa:	d405      	bmi.n	80037b8 <_vfiprintf_r+0x34>
 80037ac:	89a3      	ldrh	r3, [r4, #12]
 80037ae:	059b      	lsls	r3, r3, #22
 80037b0:	d402      	bmi.n	80037b8 <_vfiprintf_r+0x34>
 80037b2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80037b4:	f000 fd59 	bl	800426a <__retarget_lock_acquire_recursive>
 80037b8:	89a3      	ldrh	r3, [r4, #12]
 80037ba:	071b      	lsls	r3, r3, #28
 80037bc:	d502      	bpl.n	80037c4 <_vfiprintf_r+0x40>
 80037be:	6923      	ldr	r3, [r4, #16]
 80037c0:	2b00      	cmp	r3, #0
 80037c2:	d11d      	bne.n	8003800 <_vfiprintf_r+0x7c>
 80037c4:	0021      	movs	r1, r4
 80037c6:	0030      	movs	r0, r6
 80037c8:	f000 fb00 	bl	8003dcc <__swsetup_r>
 80037cc:	2800      	cmp	r0, #0
 80037ce:	d017      	beq.n	8003800 <_vfiprintf_r+0x7c>
 80037d0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80037d2:	07db      	lsls	r3, r3, #31
 80037d4:	d50d      	bpl.n	80037f2 <_vfiprintf_r+0x6e>
 80037d6:	2001      	movs	r0, #1
 80037d8:	4240      	negs	r0, r0
 80037da:	b021      	add	sp, #132	; 0x84
 80037dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037de:	4b7f      	ldr	r3, [pc, #508]	; (80039dc <_vfiprintf_r+0x258>)
 80037e0:	429c      	cmp	r4, r3
 80037e2:	d101      	bne.n	80037e8 <_vfiprintf_r+0x64>
 80037e4:	68b4      	ldr	r4, [r6, #8]
 80037e6:	e7de      	b.n	80037a6 <_vfiprintf_r+0x22>
 80037e8:	4b7d      	ldr	r3, [pc, #500]	; (80039e0 <_vfiprintf_r+0x25c>)
 80037ea:	429c      	cmp	r4, r3
 80037ec:	d1db      	bne.n	80037a6 <_vfiprintf_r+0x22>
 80037ee:	68f4      	ldr	r4, [r6, #12]
 80037f0:	e7d9      	b.n	80037a6 <_vfiprintf_r+0x22>
 80037f2:	89a3      	ldrh	r3, [r4, #12]
 80037f4:	059b      	lsls	r3, r3, #22
 80037f6:	d4ee      	bmi.n	80037d6 <_vfiprintf_r+0x52>
 80037f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80037fa:	f000 fd37 	bl	800426c <__retarget_lock_release_recursive>
 80037fe:	e7ea      	b.n	80037d6 <_vfiprintf_r+0x52>
 8003800:	2300      	movs	r3, #0
 8003802:	ad08      	add	r5, sp, #32
 8003804:	616b      	str	r3, [r5, #20]
 8003806:	3320      	adds	r3, #32
 8003808:	766b      	strb	r3, [r5, #25]
 800380a:	3310      	adds	r3, #16
 800380c:	76ab      	strb	r3, [r5, #26]
 800380e:	9707      	str	r7, [sp, #28]
 8003810:	9f03      	ldr	r7, [sp, #12]
 8003812:	783b      	ldrb	r3, [r7, #0]
 8003814:	2b00      	cmp	r3, #0
 8003816:	d001      	beq.n	800381c <_vfiprintf_r+0x98>
 8003818:	2b25      	cmp	r3, #37	; 0x25
 800381a:	d14e      	bne.n	80038ba <_vfiprintf_r+0x136>
 800381c:	9b03      	ldr	r3, [sp, #12]
 800381e:	1afb      	subs	r3, r7, r3
 8003820:	9305      	str	r3, [sp, #20]
 8003822:	9b03      	ldr	r3, [sp, #12]
 8003824:	429f      	cmp	r7, r3
 8003826:	d00d      	beq.n	8003844 <_vfiprintf_r+0xc0>
 8003828:	9b05      	ldr	r3, [sp, #20]
 800382a:	0021      	movs	r1, r4
 800382c:	0030      	movs	r0, r6
 800382e:	9a03      	ldr	r2, [sp, #12]
 8003830:	f7ff ff95 	bl	800375e <__sfputs_r>
 8003834:	1c43      	adds	r3, r0, #1
 8003836:	d100      	bne.n	800383a <_vfiprintf_r+0xb6>
 8003838:	e0b5      	b.n	80039a6 <_vfiprintf_r+0x222>
 800383a:	696a      	ldr	r2, [r5, #20]
 800383c:	9b05      	ldr	r3, [sp, #20]
 800383e:	4694      	mov	ip, r2
 8003840:	4463      	add	r3, ip
 8003842:	616b      	str	r3, [r5, #20]
 8003844:	783b      	ldrb	r3, [r7, #0]
 8003846:	2b00      	cmp	r3, #0
 8003848:	d100      	bne.n	800384c <_vfiprintf_r+0xc8>
 800384a:	e0ac      	b.n	80039a6 <_vfiprintf_r+0x222>
 800384c:	2201      	movs	r2, #1
 800384e:	1c7b      	adds	r3, r7, #1
 8003850:	9303      	str	r3, [sp, #12]
 8003852:	2300      	movs	r3, #0
 8003854:	4252      	negs	r2, r2
 8003856:	606a      	str	r2, [r5, #4]
 8003858:	a904      	add	r1, sp, #16
 800385a:	3254      	adds	r2, #84	; 0x54
 800385c:	1852      	adds	r2, r2, r1
 800385e:	602b      	str	r3, [r5, #0]
 8003860:	60eb      	str	r3, [r5, #12]
 8003862:	60ab      	str	r3, [r5, #8]
 8003864:	7013      	strb	r3, [r2, #0]
 8003866:	65ab      	str	r3, [r5, #88]	; 0x58
 8003868:	9b03      	ldr	r3, [sp, #12]
 800386a:	2205      	movs	r2, #5
 800386c:	7819      	ldrb	r1, [r3, #0]
 800386e:	485d      	ldr	r0, [pc, #372]	; (80039e4 <_vfiprintf_r+0x260>)
 8003870:	f000 fd6a 	bl	8004348 <memchr>
 8003874:	9b03      	ldr	r3, [sp, #12]
 8003876:	1c5f      	adds	r7, r3, #1
 8003878:	2800      	cmp	r0, #0
 800387a:	d120      	bne.n	80038be <_vfiprintf_r+0x13a>
 800387c:	682a      	ldr	r2, [r5, #0]
 800387e:	06d3      	lsls	r3, r2, #27
 8003880:	d504      	bpl.n	800388c <_vfiprintf_r+0x108>
 8003882:	2353      	movs	r3, #83	; 0x53
 8003884:	a904      	add	r1, sp, #16
 8003886:	185b      	adds	r3, r3, r1
 8003888:	2120      	movs	r1, #32
 800388a:	7019      	strb	r1, [r3, #0]
 800388c:	0713      	lsls	r3, r2, #28
 800388e:	d504      	bpl.n	800389a <_vfiprintf_r+0x116>
 8003890:	2353      	movs	r3, #83	; 0x53
 8003892:	a904      	add	r1, sp, #16
 8003894:	185b      	adds	r3, r3, r1
 8003896:	212b      	movs	r1, #43	; 0x2b
 8003898:	7019      	strb	r1, [r3, #0]
 800389a:	9b03      	ldr	r3, [sp, #12]
 800389c:	781b      	ldrb	r3, [r3, #0]
 800389e:	2b2a      	cmp	r3, #42	; 0x2a
 80038a0:	d016      	beq.n	80038d0 <_vfiprintf_r+0x14c>
 80038a2:	2100      	movs	r1, #0
 80038a4:	68eb      	ldr	r3, [r5, #12]
 80038a6:	9f03      	ldr	r7, [sp, #12]
 80038a8:	783a      	ldrb	r2, [r7, #0]
 80038aa:	1c78      	adds	r0, r7, #1
 80038ac:	3a30      	subs	r2, #48	; 0x30
 80038ae:	4684      	mov	ip, r0
 80038b0:	2a09      	cmp	r2, #9
 80038b2:	d94f      	bls.n	8003954 <_vfiprintf_r+0x1d0>
 80038b4:	2900      	cmp	r1, #0
 80038b6:	d111      	bne.n	80038dc <_vfiprintf_r+0x158>
 80038b8:	e017      	b.n	80038ea <_vfiprintf_r+0x166>
 80038ba:	3701      	adds	r7, #1
 80038bc:	e7a9      	b.n	8003812 <_vfiprintf_r+0x8e>
 80038be:	4b49      	ldr	r3, [pc, #292]	; (80039e4 <_vfiprintf_r+0x260>)
 80038c0:	682a      	ldr	r2, [r5, #0]
 80038c2:	1ac0      	subs	r0, r0, r3
 80038c4:	2301      	movs	r3, #1
 80038c6:	4083      	lsls	r3, r0
 80038c8:	4313      	orrs	r3, r2
 80038ca:	602b      	str	r3, [r5, #0]
 80038cc:	9703      	str	r7, [sp, #12]
 80038ce:	e7cb      	b.n	8003868 <_vfiprintf_r+0xe4>
 80038d0:	9b07      	ldr	r3, [sp, #28]
 80038d2:	1d19      	adds	r1, r3, #4
 80038d4:	681b      	ldr	r3, [r3, #0]
 80038d6:	9107      	str	r1, [sp, #28]
 80038d8:	2b00      	cmp	r3, #0
 80038da:	db01      	blt.n	80038e0 <_vfiprintf_r+0x15c>
 80038dc:	930b      	str	r3, [sp, #44]	; 0x2c
 80038de:	e004      	b.n	80038ea <_vfiprintf_r+0x166>
 80038e0:	425b      	negs	r3, r3
 80038e2:	60eb      	str	r3, [r5, #12]
 80038e4:	2302      	movs	r3, #2
 80038e6:	4313      	orrs	r3, r2
 80038e8:	602b      	str	r3, [r5, #0]
 80038ea:	783b      	ldrb	r3, [r7, #0]
 80038ec:	2b2e      	cmp	r3, #46	; 0x2e
 80038ee:	d10a      	bne.n	8003906 <_vfiprintf_r+0x182>
 80038f0:	787b      	ldrb	r3, [r7, #1]
 80038f2:	2b2a      	cmp	r3, #42	; 0x2a
 80038f4:	d137      	bne.n	8003966 <_vfiprintf_r+0x1e2>
 80038f6:	9b07      	ldr	r3, [sp, #28]
 80038f8:	3702      	adds	r7, #2
 80038fa:	1d1a      	adds	r2, r3, #4
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	9207      	str	r2, [sp, #28]
 8003900:	2b00      	cmp	r3, #0
 8003902:	db2d      	blt.n	8003960 <_vfiprintf_r+0x1dc>
 8003904:	9309      	str	r3, [sp, #36]	; 0x24
 8003906:	2203      	movs	r2, #3
 8003908:	7839      	ldrb	r1, [r7, #0]
 800390a:	4837      	ldr	r0, [pc, #220]	; (80039e8 <_vfiprintf_r+0x264>)
 800390c:	f000 fd1c 	bl	8004348 <memchr>
 8003910:	2800      	cmp	r0, #0
 8003912:	d007      	beq.n	8003924 <_vfiprintf_r+0x1a0>
 8003914:	4b34      	ldr	r3, [pc, #208]	; (80039e8 <_vfiprintf_r+0x264>)
 8003916:	682a      	ldr	r2, [r5, #0]
 8003918:	1ac0      	subs	r0, r0, r3
 800391a:	2340      	movs	r3, #64	; 0x40
 800391c:	4083      	lsls	r3, r0
 800391e:	4313      	orrs	r3, r2
 8003920:	3701      	adds	r7, #1
 8003922:	602b      	str	r3, [r5, #0]
 8003924:	7839      	ldrb	r1, [r7, #0]
 8003926:	1c7b      	adds	r3, r7, #1
 8003928:	2206      	movs	r2, #6
 800392a:	4830      	ldr	r0, [pc, #192]	; (80039ec <_vfiprintf_r+0x268>)
 800392c:	9303      	str	r3, [sp, #12]
 800392e:	7629      	strb	r1, [r5, #24]
 8003930:	f000 fd0a 	bl	8004348 <memchr>
 8003934:	2800      	cmp	r0, #0
 8003936:	d045      	beq.n	80039c4 <_vfiprintf_r+0x240>
 8003938:	4b2d      	ldr	r3, [pc, #180]	; (80039f0 <_vfiprintf_r+0x26c>)
 800393a:	2b00      	cmp	r3, #0
 800393c:	d127      	bne.n	800398e <_vfiprintf_r+0x20a>
 800393e:	2207      	movs	r2, #7
 8003940:	9b07      	ldr	r3, [sp, #28]
 8003942:	3307      	adds	r3, #7
 8003944:	4393      	bics	r3, r2
 8003946:	3308      	adds	r3, #8
 8003948:	9307      	str	r3, [sp, #28]
 800394a:	696b      	ldr	r3, [r5, #20]
 800394c:	9a04      	ldr	r2, [sp, #16]
 800394e:	189b      	adds	r3, r3, r2
 8003950:	616b      	str	r3, [r5, #20]
 8003952:	e75d      	b.n	8003810 <_vfiprintf_r+0x8c>
 8003954:	210a      	movs	r1, #10
 8003956:	434b      	muls	r3, r1
 8003958:	4667      	mov	r7, ip
 800395a:	189b      	adds	r3, r3, r2
 800395c:	3909      	subs	r1, #9
 800395e:	e7a3      	b.n	80038a8 <_vfiprintf_r+0x124>
 8003960:	2301      	movs	r3, #1
 8003962:	425b      	negs	r3, r3
 8003964:	e7ce      	b.n	8003904 <_vfiprintf_r+0x180>
 8003966:	2300      	movs	r3, #0
 8003968:	001a      	movs	r2, r3
 800396a:	3701      	adds	r7, #1
 800396c:	606b      	str	r3, [r5, #4]
 800396e:	7839      	ldrb	r1, [r7, #0]
 8003970:	1c78      	adds	r0, r7, #1
 8003972:	3930      	subs	r1, #48	; 0x30
 8003974:	4684      	mov	ip, r0
 8003976:	2909      	cmp	r1, #9
 8003978:	d903      	bls.n	8003982 <_vfiprintf_r+0x1fe>
 800397a:	2b00      	cmp	r3, #0
 800397c:	d0c3      	beq.n	8003906 <_vfiprintf_r+0x182>
 800397e:	9209      	str	r2, [sp, #36]	; 0x24
 8003980:	e7c1      	b.n	8003906 <_vfiprintf_r+0x182>
 8003982:	230a      	movs	r3, #10
 8003984:	435a      	muls	r2, r3
 8003986:	4667      	mov	r7, ip
 8003988:	1852      	adds	r2, r2, r1
 800398a:	3b09      	subs	r3, #9
 800398c:	e7ef      	b.n	800396e <_vfiprintf_r+0x1ea>
 800398e:	ab07      	add	r3, sp, #28
 8003990:	9300      	str	r3, [sp, #0]
 8003992:	0022      	movs	r2, r4
 8003994:	0029      	movs	r1, r5
 8003996:	0030      	movs	r0, r6
 8003998:	4b16      	ldr	r3, [pc, #88]	; (80039f4 <_vfiprintf_r+0x270>)
 800399a:	e000      	b.n	800399e <_vfiprintf_r+0x21a>
 800399c:	bf00      	nop
 800399e:	9004      	str	r0, [sp, #16]
 80039a0:	9b04      	ldr	r3, [sp, #16]
 80039a2:	3301      	adds	r3, #1
 80039a4:	d1d1      	bne.n	800394a <_vfiprintf_r+0x1c6>
 80039a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80039a8:	07db      	lsls	r3, r3, #31
 80039aa:	d405      	bmi.n	80039b8 <_vfiprintf_r+0x234>
 80039ac:	89a3      	ldrh	r3, [r4, #12]
 80039ae:	059b      	lsls	r3, r3, #22
 80039b0:	d402      	bmi.n	80039b8 <_vfiprintf_r+0x234>
 80039b2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80039b4:	f000 fc5a 	bl	800426c <__retarget_lock_release_recursive>
 80039b8:	89a3      	ldrh	r3, [r4, #12]
 80039ba:	065b      	lsls	r3, r3, #25
 80039bc:	d500      	bpl.n	80039c0 <_vfiprintf_r+0x23c>
 80039be:	e70a      	b.n	80037d6 <_vfiprintf_r+0x52>
 80039c0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80039c2:	e70a      	b.n	80037da <_vfiprintf_r+0x56>
 80039c4:	ab07      	add	r3, sp, #28
 80039c6:	9300      	str	r3, [sp, #0]
 80039c8:	0022      	movs	r2, r4
 80039ca:	0029      	movs	r1, r5
 80039cc:	0030      	movs	r0, r6
 80039ce:	4b09      	ldr	r3, [pc, #36]	; (80039f4 <_vfiprintf_r+0x270>)
 80039d0:	f000 f882 	bl	8003ad8 <_printf_i>
 80039d4:	e7e3      	b.n	800399e <_vfiprintf_r+0x21a>
 80039d6:	46c0      	nop			; (mov r8, r8)
 80039d8:	08004864 	.word	0x08004864
 80039dc:	08004884 	.word	0x08004884
 80039e0:	08004844 	.word	0x08004844
 80039e4:	08004811 	.word	0x08004811
 80039e8:	08004817 	.word	0x08004817
 80039ec:	0800481b 	.word	0x0800481b
 80039f0:	00000000 	.word	0x00000000
 80039f4:	0800375f 	.word	0x0800375f

080039f8 <_printf_common>:
 80039f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80039fa:	0015      	movs	r5, r2
 80039fc:	9301      	str	r3, [sp, #4]
 80039fe:	688a      	ldr	r2, [r1, #8]
 8003a00:	690b      	ldr	r3, [r1, #16]
 8003a02:	000c      	movs	r4, r1
 8003a04:	9000      	str	r0, [sp, #0]
 8003a06:	4293      	cmp	r3, r2
 8003a08:	da00      	bge.n	8003a0c <_printf_common+0x14>
 8003a0a:	0013      	movs	r3, r2
 8003a0c:	0022      	movs	r2, r4
 8003a0e:	602b      	str	r3, [r5, #0]
 8003a10:	3243      	adds	r2, #67	; 0x43
 8003a12:	7812      	ldrb	r2, [r2, #0]
 8003a14:	2a00      	cmp	r2, #0
 8003a16:	d001      	beq.n	8003a1c <_printf_common+0x24>
 8003a18:	3301      	adds	r3, #1
 8003a1a:	602b      	str	r3, [r5, #0]
 8003a1c:	6823      	ldr	r3, [r4, #0]
 8003a1e:	069b      	lsls	r3, r3, #26
 8003a20:	d502      	bpl.n	8003a28 <_printf_common+0x30>
 8003a22:	682b      	ldr	r3, [r5, #0]
 8003a24:	3302      	adds	r3, #2
 8003a26:	602b      	str	r3, [r5, #0]
 8003a28:	6822      	ldr	r2, [r4, #0]
 8003a2a:	2306      	movs	r3, #6
 8003a2c:	0017      	movs	r7, r2
 8003a2e:	401f      	ands	r7, r3
 8003a30:	421a      	tst	r2, r3
 8003a32:	d027      	beq.n	8003a84 <_printf_common+0x8c>
 8003a34:	0023      	movs	r3, r4
 8003a36:	3343      	adds	r3, #67	; 0x43
 8003a38:	781b      	ldrb	r3, [r3, #0]
 8003a3a:	1e5a      	subs	r2, r3, #1
 8003a3c:	4193      	sbcs	r3, r2
 8003a3e:	6822      	ldr	r2, [r4, #0]
 8003a40:	0692      	lsls	r2, r2, #26
 8003a42:	d430      	bmi.n	8003aa6 <_printf_common+0xae>
 8003a44:	0022      	movs	r2, r4
 8003a46:	9901      	ldr	r1, [sp, #4]
 8003a48:	9800      	ldr	r0, [sp, #0]
 8003a4a:	9e08      	ldr	r6, [sp, #32]
 8003a4c:	3243      	adds	r2, #67	; 0x43
 8003a4e:	47b0      	blx	r6
 8003a50:	1c43      	adds	r3, r0, #1
 8003a52:	d025      	beq.n	8003aa0 <_printf_common+0xa8>
 8003a54:	2306      	movs	r3, #6
 8003a56:	6820      	ldr	r0, [r4, #0]
 8003a58:	682a      	ldr	r2, [r5, #0]
 8003a5a:	68e1      	ldr	r1, [r4, #12]
 8003a5c:	2500      	movs	r5, #0
 8003a5e:	4003      	ands	r3, r0
 8003a60:	2b04      	cmp	r3, #4
 8003a62:	d103      	bne.n	8003a6c <_printf_common+0x74>
 8003a64:	1a8d      	subs	r5, r1, r2
 8003a66:	43eb      	mvns	r3, r5
 8003a68:	17db      	asrs	r3, r3, #31
 8003a6a:	401d      	ands	r5, r3
 8003a6c:	68a3      	ldr	r3, [r4, #8]
 8003a6e:	6922      	ldr	r2, [r4, #16]
 8003a70:	4293      	cmp	r3, r2
 8003a72:	dd01      	ble.n	8003a78 <_printf_common+0x80>
 8003a74:	1a9b      	subs	r3, r3, r2
 8003a76:	18ed      	adds	r5, r5, r3
 8003a78:	2700      	movs	r7, #0
 8003a7a:	42bd      	cmp	r5, r7
 8003a7c:	d120      	bne.n	8003ac0 <_printf_common+0xc8>
 8003a7e:	2000      	movs	r0, #0
 8003a80:	e010      	b.n	8003aa4 <_printf_common+0xac>
 8003a82:	3701      	adds	r7, #1
 8003a84:	68e3      	ldr	r3, [r4, #12]
 8003a86:	682a      	ldr	r2, [r5, #0]
 8003a88:	1a9b      	subs	r3, r3, r2
 8003a8a:	42bb      	cmp	r3, r7
 8003a8c:	ddd2      	ble.n	8003a34 <_printf_common+0x3c>
 8003a8e:	0022      	movs	r2, r4
 8003a90:	2301      	movs	r3, #1
 8003a92:	9901      	ldr	r1, [sp, #4]
 8003a94:	9800      	ldr	r0, [sp, #0]
 8003a96:	9e08      	ldr	r6, [sp, #32]
 8003a98:	3219      	adds	r2, #25
 8003a9a:	47b0      	blx	r6
 8003a9c:	1c43      	adds	r3, r0, #1
 8003a9e:	d1f0      	bne.n	8003a82 <_printf_common+0x8a>
 8003aa0:	2001      	movs	r0, #1
 8003aa2:	4240      	negs	r0, r0
 8003aa4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003aa6:	2030      	movs	r0, #48	; 0x30
 8003aa8:	18e1      	adds	r1, r4, r3
 8003aaa:	3143      	adds	r1, #67	; 0x43
 8003aac:	7008      	strb	r0, [r1, #0]
 8003aae:	0021      	movs	r1, r4
 8003ab0:	1c5a      	adds	r2, r3, #1
 8003ab2:	3145      	adds	r1, #69	; 0x45
 8003ab4:	7809      	ldrb	r1, [r1, #0]
 8003ab6:	18a2      	adds	r2, r4, r2
 8003ab8:	3243      	adds	r2, #67	; 0x43
 8003aba:	3302      	adds	r3, #2
 8003abc:	7011      	strb	r1, [r2, #0]
 8003abe:	e7c1      	b.n	8003a44 <_printf_common+0x4c>
 8003ac0:	0022      	movs	r2, r4
 8003ac2:	2301      	movs	r3, #1
 8003ac4:	9901      	ldr	r1, [sp, #4]
 8003ac6:	9800      	ldr	r0, [sp, #0]
 8003ac8:	9e08      	ldr	r6, [sp, #32]
 8003aca:	321a      	adds	r2, #26
 8003acc:	47b0      	blx	r6
 8003ace:	1c43      	adds	r3, r0, #1
 8003ad0:	d0e6      	beq.n	8003aa0 <_printf_common+0xa8>
 8003ad2:	3701      	adds	r7, #1
 8003ad4:	e7d1      	b.n	8003a7a <_printf_common+0x82>
	...

08003ad8 <_printf_i>:
 8003ad8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003ada:	b08b      	sub	sp, #44	; 0x2c
 8003adc:	9206      	str	r2, [sp, #24]
 8003ade:	000a      	movs	r2, r1
 8003ae0:	3243      	adds	r2, #67	; 0x43
 8003ae2:	9307      	str	r3, [sp, #28]
 8003ae4:	9005      	str	r0, [sp, #20]
 8003ae6:	9204      	str	r2, [sp, #16]
 8003ae8:	7e0a      	ldrb	r2, [r1, #24]
 8003aea:	000c      	movs	r4, r1
 8003aec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003aee:	2a78      	cmp	r2, #120	; 0x78
 8003af0:	d807      	bhi.n	8003b02 <_printf_i+0x2a>
 8003af2:	2a62      	cmp	r2, #98	; 0x62
 8003af4:	d809      	bhi.n	8003b0a <_printf_i+0x32>
 8003af6:	2a00      	cmp	r2, #0
 8003af8:	d100      	bne.n	8003afc <_printf_i+0x24>
 8003afa:	e0c1      	b.n	8003c80 <_printf_i+0x1a8>
 8003afc:	2a58      	cmp	r2, #88	; 0x58
 8003afe:	d100      	bne.n	8003b02 <_printf_i+0x2a>
 8003b00:	e08c      	b.n	8003c1c <_printf_i+0x144>
 8003b02:	0026      	movs	r6, r4
 8003b04:	3642      	adds	r6, #66	; 0x42
 8003b06:	7032      	strb	r2, [r6, #0]
 8003b08:	e022      	b.n	8003b50 <_printf_i+0x78>
 8003b0a:	0010      	movs	r0, r2
 8003b0c:	3863      	subs	r0, #99	; 0x63
 8003b0e:	2815      	cmp	r0, #21
 8003b10:	d8f7      	bhi.n	8003b02 <_printf_i+0x2a>
 8003b12:	f7fc faf7 	bl	8000104 <__gnu_thumb1_case_shi>
 8003b16:	0016      	.short	0x0016
 8003b18:	fff6001f 	.word	0xfff6001f
 8003b1c:	fff6fff6 	.word	0xfff6fff6
 8003b20:	001ffff6 	.word	0x001ffff6
 8003b24:	fff6fff6 	.word	0xfff6fff6
 8003b28:	fff6fff6 	.word	0xfff6fff6
 8003b2c:	003600a8 	.word	0x003600a8
 8003b30:	fff6009a 	.word	0xfff6009a
 8003b34:	00b9fff6 	.word	0x00b9fff6
 8003b38:	0036fff6 	.word	0x0036fff6
 8003b3c:	fff6fff6 	.word	0xfff6fff6
 8003b40:	009e      	.short	0x009e
 8003b42:	0026      	movs	r6, r4
 8003b44:	681a      	ldr	r2, [r3, #0]
 8003b46:	3642      	adds	r6, #66	; 0x42
 8003b48:	1d11      	adds	r1, r2, #4
 8003b4a:	6019      	str	r1, [r3, #0]
 8003b4c:	6813      	ldr	r3, [r2, #0]
 8003b4e:	7033      	strb	r3, [r6, #0]
 8003b50:	2301      	movs	r3, #1
 8003b52:	e0a7      	b.n	8003ca4 <_printf_i+0x1cc>
 8003b54:	6808      	ldr	r0, [r1, #0]
 8003b56:	6819      	ldr	r1, [r3, #0]
 8003b58:	1d0a      	adds	r2, r1, #4
 8003b5a:	0605      	lsls	r5, r0, #24
 8003b5c:	d50b      	bpl.n	8003b76 <_printf_i+0x9e>
 8003b5e:	680d      	ldr	r5, [r1, #0]
 8003b60:	601a      	str	r2, [r3, #0]
 8003b62:	2d00      	cmp	r5, #0
 8003b64:	da03      	bge.n	8003b6e <_printf_i+0x96>
 8003b66:	232d      	movs	r3, #45	; 0x2d
 8003b68:	9a04      	ldr	r2, [sp, #16]
 8003b6a:	426d      	negs	r5, r5
 8003b6c:	7013      	strb	r3, [r2, #0]
 8003b6e:	4b61      	ldr	r3, [pc, #388]	; (8003cf4 <_printf_i+0x21c>)
 8003b70:	270a      	movs	r7, #10
 8003b72:	9303      	str	r3, [sp, #12]
 8003b74:	e01b      	b.n	8003bae <_printf_i+0xd6>
 8003b76:	680d      	ldr	r5, [r1, #0]
 8003b78:	601a      	str	r2, [r3, #0]
 8003b7a:	0641      	lsls	r1, r0, #25
 8003b7c:	d5f1      	bpl.n	8003b62 <_printf_i+0x8a>
 8003b7e:	b22d      	sxth	r5, r5
 8003b80:	e7ef      	b.n	8003b62 <_printf_i+0x8a>
 8003b82:	680d      	ldr	r5, [r1, #0]
 8003b84:	6819      	ldr	r1, [r3, #0]
 8003b86:	1d08      	adds	r0, r1, #4
 8003b88:	6018      	str	r0, [r3, #0]
 8003b8a:	062e      	lsls	r6, r5, #24
 8003b8c:	d501      	bpl.n	8003b92 <_printf_i+0xba>
 8003b8e:	680d      	ldr	r5, [r1, #0]
 8003b90:	e003      	b.n	8003b9a <_printf_i+0xc2>
 8003b92:	066d      	lsls	r5, r5, #25
 8003b94:	d5fb      	bpl.n	8003b8e <_printf_i+0xb6>
 8003b96:	680d      	ldr	r5, [r1, #0]
 8003b98:	b2ad      	uxth	r5, r5
 8003b9a:	4b56      	ldr	r3, [pc, #344]	; (8003cf4 <_printf_i+0x21c>)
 8003b9c:	2708      	movs	r7, #8
 8003b9e:	9303      	str	r3, [sp, #12]
 8003ba0:	2a6f      	cmp	r2, #111	; 0x6f
 8003ba2:	d000      	beq.n	8003ba6 <_printf_i+0xce>
 8003ba4:	3702      	adds	r7, #2
 8003ba6:	0023      	movs	r3, r4
 8003ba8:	2200      	movs	r2, #0
 8003baa:	3343      	adds	r3, #67	; 0x43
 8003bac:	701a      	strb	r2, [r3, #0]
 8003bae:	6863      	ldr	r3, [r4, #4]
 8003bb0:	60a3      	str	r3, [r4, #8]
 8003bb2:	2b00      	cmp	r3, #0
 8003bb4:	db03      	blt.n	8003bbe <_printf_i+0xe6>
 8003bb6:	2204      	movs	r2, #4
 8003bb8:	6821      	ldr	r1, [r4, #0]
 8003bba:	4391      	bics	r1, r2
 8003bbc:	6021      	str	r1, [r4, #0]
 8003bbe:	2d00      	cmp	r5, #0
 8003bc0:	d102      	bne.n	8003bc8 <_printf_i+0xf0>
 8003bc2:	9e04      	ldr	r6, [sp, #16]
 8003bc4:	2b00      	cmp	r3, #0
 8003bc6:	d00c      	beq.n	8003be2 <_printf_i+0x10a>
 8003bc8:	9e04      	ldr	r6, [sp, #16]
 8003bca:	0028      	movs	r0, r5
 8003bcc:	0039      	movs	r1, r7
 8003bce:	f7fc fb29 	bl	8000224 <__aeabi_uidivmod>
 8003bd2:	9b03      	ldr	r3, [sp, #12]
 8003bd4:	3e01      	subs	r6, #1
 8003bd6:	5c5b      	ldrb	r3, [r3, r1]
 8003bd8:	7033      	strb	r3, [r6, #0]
 8003bda:	002b      	movs	r3, r5
 8003bdc:	0005      	movs	r5, r0
 8003bde:	429f      	cmp	r7, r3
 8003be0:	d9f3      	bls.n	8003bca <_printf_i+0xf2>
 8003be2:	2f08      	cmp	r7, #8
 8003be4:	d109      	bne.n	8003bfa <_printf_i+0x122>
 8003be6:	6823      	ldr	r3, [r4, #0]
 8003be8:	07db      	lsls	r3, r3, #31
 8003bea:	d506      	bpl.n	8003bfa <_printf_i+0x122>
 8003bec:	6863      	ldr	r3, [r4, #4]
 8003bee:	6922      	ldr	r2, [r4, #16]
 8003bf0:	4293      	cmp	r3, r2
 8003bf2:	dc02      	bgt.n	8003bfa <_printf_i+0x122>
 8003bf4:	2330      	movs	r3, #48	; 0x30
 8003bf6:	3e01      	subs	r6, #1
 8003bf8:	7033      	strb	r3, [r6, #0]
 8003bfa:	9b04      	ldr	r3, [sp, #16]
 8003bfc:	1b9b      	subs	r3, r3, r6
 8003bfe:	6123      	str	r3, [r4, #16]
 8003c00:	9b07      	ldr	r3, [sp, #28]
 8003c02:	0021      	movs	r1, r4
 8003c04:	9300      	str	r3, [sp, #0]
 8003c06:	9805      	ldr	r0, [sp, #20]
 8003c08:	9b06      	ldr	r3, [sp, #24]
 8003c0a:	aa09      	add	r2, sp, #36	; 0x24
 8003c0c:	f7ff fef4 	bl	80039f8 <_printf_common>
 8003c10:	1c43      	adds	r3, r0, #1
 8003c12:	d14c      	bne.n	8003cae <_printf_i+0x1d6>
 8003c14:	2001      	movs	r0, #1
 8003c16:	4240      	negs	r0, r0
 8003c18:	b00b      	add	sp, #44	; 0x2c
 8003c1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003c1c:	3145      	adds	r1, #69	; 0x45
 8003c1e:	700a      	strb	r2, [r1, #0]
 8003c20:	4a34      	ldr	r2, [pc, #208]	; (8003cf4 <_printf_i+0x21c>)
 8003c22:	9203      	str	r2, [sp, #12]
 8003c24:	681a      	ldr	r2, [r3, #0]
 8003c26:	6821      	ldr	r1, [r4, #0]
 8003c28:	ca20      	ldmia	r2!, {r5}
 8003c2a:	601a      	str	r2, [r3, #0]
 8003c2c:	0608      	lsls	r0, r1, #24
 8003c2e:	d516      	bpl.n	8003c5e <_printf_i+0x186>
 8003c30:	07cb      	lsls	r3, r1, #31
 8003c32:	d502      	bpl.n	8003c3a <_printf_i+0x162>
 8003c34:	2320      	movs	r3, #32
 8003c36:	4319      	orrs	r1, r3
 8003c38:	6021      	str	r1, [r4, #0]
 8003c3a:	2710      	movs	r7, #16
 8003c3c:	2d00      	cmp	r5, #0
 8003c3e:	d1b2      	bne.n	8003ba6 <_printf_i+0xce>
 8003c40:	2320      	movs	r3, #32
 8003c42:	6822      	ldr	r2, [r4, #0]
 8003c44:	439a      	bics	r2, r3
 8003c46:	6022      	str	r2, [r4, #0]
 8003c48:	e7ad      	b.n	8003ba6 <_printf_i+0xce>
 8003c4a:	2220      	movs	r2, #32
 8003c4c:	6809      	ldr	r1, [r1, #0]
 8003c4e:	430a      	orrs	r2, r1
 8003c50:	6022      	str	r2, [r4, #0]
 8003c52:	0022      	movs	r2, r4
 8003c54:	2178      	movs	r1, #120	; 0x78
 8003c56:	3245      	adds	r2, #69	; 0x45
 8003c58:	7011      	strb	r1, [r2, #0]
 8003c5a:	4a27      	ldr	r2, [pc, #156]	; (8003cf8 <_printf_i+0x220>)
 8003c5c:	e7e1      	b.n	8003c22 <_printf_i+0x14a>
 8003c5e:	0648      	lsls	r0, r1, #25
 8003c60:	d5e6      	bpl.n	8003c30 <_printf_i+0x158>
 8003c62:	b2ad      	uxth	r5, r5
 8003c64:	e7e4      	b.n	8003c30 <_printf_i+0x158>
 8003c66:	681a      	ldr	r2, [r3, #0]
 8003c68:	680d      	ldr	r5, [r1, #0]
 8003c6a:	1d10      	adds	r0, r2, #4
 8003c6c:	6949      	ldr	r1, [r1, #20]
 8003c6e:	6018      	str	r0, [r3, #0]
 8003c70:	6813      	ldr	r3, [r2, #0]
 8003c72:	062e      	lsls	r6, r5, #24
 8003c74:	d501      	bpl.n	8003c7a <_printf_i+0x1a2>
 8003c76:	6019      	str	r1, [r3, #0]
 8003c78:	e002      	b.n	8003c80 <_printf_i+0x1a8>
 8003c7a:	066d      	lsls	r5, r5, #25
 8003c7c:	d5fb      	bpl.n	8003c76 <_printf_i+0x19e>
 8003c7e:	8019      	strh	r1, [r3, #0]
 8003c80:	2300      	movs	r3, #0
 8003c82:	9e04      	ldr	r6, [sp, #16]
 8003c84:	6123      	str	r3, [r4, #16]
 8003c86:	e7bb      	b.n	8003c00 <_printf_i+0x128>
 8003c88:	681a      	ldr	r2, [r3, #0]
 8003c8a:	1d11      	adds	r1, r2, #4
 8003c8c:	6019      	str	r1, [r3, #0]
 8003c8e:	6816      	ldr	r6, [r2, #0]
 8003c90:	2100      	movs	r1, #0
 8003c92:	0030      	movs	r0, r6
 8003c94:	6862      	ldr	r2, [r4, #4]
 8003c96:	f000 fb57 	bl	8004348 <memchr>
 8003c9a:	2800      	cmp	r0, #0
 8003c9c:	d001      	beq.n	8003ca2 <_printf_i+0x1ca>
 8003c9e:	1b80      	subs	r0, r0, r6
 8003ca0:	6060      	str	r0, [r4, #4]
 8003ca2:	6863      	ldr	r3, [r4, #4]
 8003ca4:	6123      	str	r3, [r4, #16]
 8003ca6:	2300      	movs	r3, #0
 8003ca8:	9a04      	ldr	r2, [sp, #16]
 8003caa:	7013      	strb	r3, [r2, #0]
 8003cac:	e7a8      	b.n	8003c00 <_printf_i+0x128>
 8003cae:	6923      	ldr	r3, [r4, #16]
 8003cb0:	0032      	movs	r2, r6
 8003cb2:	9906      	ldr	r1, [sp, #24]
 8003cb4:	9805      	ldr	r0, [sp, #20]
 8003cb6:	9d07      	ldr	r5, [sp, #28]
 8003cb8:	47a8      	blx	r5
 8003cba:	1c43      	adds	r3, r0, #1
 8003cbc:	d0aa      	beq.n	8003c14 <_printf_i+0x13c>
 8003cbe:	6823      	ldr	r3, [r4, #0]
 8003cc0:	079b      	lsls	r3, r3, #30
 8003cc2:	d415      	bmi.n	8003cf0 <_printf_i+0x218>
 8003cc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003cc6:	68e0      	ldr	r0, [r4, #12]
 8003cc8:	4298      	cmp	r0, r3
 8003cca:	daa5      	bge.n	8003c18 <_printf_i+0x140>
 8003ccc:	0018      	movs	r0, r3
 8003cce:	e7a3      	b.n	8003c18 <_printf_i+0x140>
 8003cd0:	0022      	movs	r2, r4
 8003cd2:	2301      	movs	r3, #1
 8003cd4:	9906      	ldr	r1, [sp, #24]
 8003cd6:	9805      	ldr	r0, [sp, #20]
 8003cd8:	9e07      	ldr	r6, [sp, #28]
 8003cda:	3219      	adds	r2, #25
 8003cdc:	47b0      	blx	r6
 8003cde:	1c43      	adds	r3, r0, #1
 8003ce0:	d098      	beq.n	8003c14 <_printf_i+0x13c>
 8003ce2:	3501      	adds	r5, #1
 8003ce4:	68e3      	ldr	r3, [r4, #12]
 8003ce6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003ce8:	1a9b      	subs	r3, r3, r2
 8003cea:	42ab      	cmp	r3, r5
 8003cec:	dcf0      	bgt.n	8003cd0 <_printf_i+0x1f8>
 8003cee:	e7e9      	b.n	8003cc4 <_printf_i+0x1ec>
 8003cf0:	2500      	movs	r5, #0
 8003cf2:	e7f7      	b.n	8003ce4 <_printf_i+0x20c>
 8003cf4:	08004822 	.word	0x08004822
 8003cf8:	08004833 	.word	0x08004833

08003cfc <_sbrk_r>:
 8003cfc:	2300      	movs	r3, #0
 8003cfe:	b570      	push	{r4, r5, r6, lr}
 8003d00:	4d06      	ldr	r5, [pc, #24]	; (8003d1c <_sbrk_r+0x20>)
 8003d02:	0004      	movs	r4, r0
 8003d04:	0008      	movs	r0, r1
 8003d06:	602b      	str	r3, [r5, #0]
 8003d08:	f7ff f8e2 	bl	8002ed0 <_sbrk>
 8003d0c:	1c43      	adds	r3, r0, #1
 8003d0e:	d103      	bne.n	8003d18 <_sbrk_r+0x1c>
 8003d10:	682b      	ldr	r3, [r5, #0]
 8003d12:	2b00      	cmp	r3, #0
 8003d14:	d000      	beq.n	8003d18 <_sbrk_r+0x1c>
 8003d16:	6023      	str	r3, [r4, #0]
 8003d18:	bd70      	pop	{r4, r5, r6, pc}
 8003d1a:	46c0      	nop			; (mov r8, r8)
 8003d1c:	2000013c 	.word	0x2000013c

08003d20 <__swbuf_r>:
 8003d20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d22:	0005      	movs	r5, r0
 8003d24:	000e      	movs	r6, r1
 8003d26:	0014      	movs	r4, r2
 8003d28:	2800      	cmp	r0, #0
 8003d2a:	d004      	beq.n	8003d36 <__swbuf_r+0x16>
 8003d2c:	6983      	ldr	r3, [r0, #24]
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	d101      	bne.n	8003d36 <__swbuf_r+0x16>
 8003d32:	f000 f9f9 	bl	8004128 <__sinit>
 8003d36:	4b22      	ldr	r3, [pc, #136]	; (8003dc0 <__swbuf_r+0xa0>)
 8003d38:	429c      	cmp	r4, r3
 8003d3a:	d12e      	bne.n	8003d9a <__swbuf_r+0x7a>
 8003d3c:	686c      	ldr	r4, [r5, #4]
 8003d3e:	69a3      	ldr	r3, [r4, #24]
 8003d40:	60a3      	str	r3, [r4, #8]
 8003d42:	89a3      	ldrh	r3, [r4, #12]
 8003d44:	071b      	lsls	r3, r3, #28
 8003d46:	d532      	bpl.n	8003dae <__swbuf_r+0x8e>
 8003d48:	6923      	ldr	r3, [r4, #16]
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	d02f      	beq.n	8003dae <__swbuf_r+0x8e>
 8003d4e:	6823      	ldr	r3, [r4, #0]
 8003d50:	6922      	ldr	r2, [r4, #16]
 8003d52:	b2f7      	uxtb	r7, r6
 8003d54:	1a98      	subs	r0, r3, r2
 8003d56:	6963      	ldr	r3, [r4, #20]
 8003d58:	b2f6      	uxtb	r6, r6
 8003d5a:	4283      	cmp	r3, r0
 8003d5c:	dc05      	bgt.n	8003d6a <__swbuf_r+0x4a>
 8003d5e:	0021      	movs	r1, r4
 8003d60:	0028      	movs	r0, r5
 8003d62:	f000 f93f 	bl	8003fe4 <_fflush_r>
 8003d66:	2800      	cmp	r0, #0
 8003d68:	d127      	bne.n	8003dba <__swbuf_r+0x9a>
 8003d6a:	68a3      	ldr	r3, [r4, #8]
 8003d6c:	3001      	adds	r0, #1
 8003d6e:	3b01      	subs	r3, #1
 8003d70:	60a3      	str	r3, [r4, #8]
 8003d72:	6823      	ldr	r3, [r4, #0]
 8003d74:	1c5a      	adds	r2, r3, #1
 8003d76:	6022      	str	r2, [r4, #0]
 8003d78:	701f      	strb	r7, [r3, #0]
 8003d7a:	6963      	ldr	r3, [r4, #20]
 8003d7c:	4283      	cmp	r3, r0
 8003d7e:	d004      	beq.n	8003d8a <__swbuf_r+0x6a>
 8003d80:	89a3      	ldrh	r3, [r4, #12]
 8003d82:	07db      	lsls	r3, r3, #31
 8003d84:	d507      	bpl.n	8003d96 <__swbuf_r+0x76>
 8003d86:	2e0a      	cmp	r6, #10
 8003d88:	d105      	bne.n	8003d96 <__swbuf_r+0x76>
 8003d8a:	0021      	movs	r1, r4
 8003d8c:	0028      	movs	r0, r5
 8003d8e:	f000 f929 	bl	8003fe4 <_fflush_r>
 8003d92:	2800      	cmp	r0, #0
 8003d94:	d111      	bne.n	8003dba <__swbuf_r+0x9a>
 8003d96:	0030      	movs	r0, r6
 8003d98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003d9a:	4b0a      	ldr	r3, [pc, #40]	; (8003dc4 <__swbuf_r+0xa4>)
 8003d9c:	429c      	cmp	r4, r3
 8003d9e:	d101      	bne.n	8003da4 <__swbuf_r+0x84>
 8003da0:	68ac      	ldr	r4, [r5, #8]
 8003da2:	e7cc      	b.n	8003d3e <__swbuf_r+0x1e>
 8003da4:	4b08      	ldr	r3, [pc, #32]	; (8003dc8 <__swbuf_r+0xa8>)
 8003da6:	429c      	cmp	r4, r3
 8003da8:	d1c9      	bne.n	8003d3e <__swbuf_r+0x1e>
 8003daa:	68ec      	ldr	r4, [r5, #12]
 8003dac:	e7c7      	b.n	8003d3e <__swbuf_r+0x1e>
 8003dae:	0021      	movs	r1, r4
 8003db0:	0028      	movs	r0, r5
 8003db2:	f000 f80b 	bl	8003dcc <__swsetup_r>
 8003db6:	2800      	cmp	r0, #0
 8003db8:	d0c9      	beq.n	8003d4e <__swbuf_r+0x2e>
 8003dba:	2601      	movs	r6, #1
 8003dbc:	4276      	negs	r6, r6
 8003dbe:	e7ea      	b.n	8003d96 <__swbuf_r+0x76>
 8003dc0:	08004864 	.word	0x08004864
 8003dc4:	08004884 	.word	0x08004884
 8003dc8:	08004844 	.word	0x08004844

08003dcc <__swsetup_r>:
 8003dcc:	4b37      	ldr	r3, [pc, #220]	; (8003eac <__swsetup_r+0xe0>)
 8003dce:	b570      	push	{r4, r5, r6, lr}
 8003dd0:	681d      	ldr	r5, [r3, #0]
 8003dd2:	0006      	movs	r6, r0
 8003dd4:	000c      	movs	r4, r1
 8003dd6:	2d00      	cmp	r5, #0
 8003dd8:	d005      	beq.n	8003de6 <__swsetup_r+0x1a>
 8003dda:	69ab      	ldr	r3, [r5, #24]
 8003ddc:	2b00      	cmp	r3, #0
 8003dde:	d102      	bne.n	8003de6 <__swsetup_r+0x1a>
 8003de0:	0028      	movs	r0, r5
 8003de2:	f000 f9a1 	bl	8004128 <__sinit>
 8003de6:	4b32      	ldr	r3, [pc, #200]	; (8003eb0 <__swsetup_r+0xe4>)
 8003de8:	429c      	cmp	r4, r3
 8003dea:	d10f      	bne.n	8003e0c <__swsetup_r+0x40>
 8003dec:	686c      	ldr	r4, [r5, #4]
 8003dee:	230c      	movs	r3, #12
 8003df0:	5ee2      	ldrsh	r2, [r4, r3]
 8003df2:	b293      	uxth	r3, r2
 8003df4:	0711      	lsls	r1, r2, #28
 8003df6:	d42d      	bmi.n	8003e54 <__swsetup_r+0x88>
 8003df8:	06d9      	lsls	r1, r3, #27
 8003dfa:	d411      	bmi.n	8003e20 <__swsetup_r+0x54>
 8003dfc:	2309      	movs	r3, #9
 8003dfe:	2001      	movs	r0, #1
 8003e00:	6033      	str	r3, [r6, #0]
 8003e02:	3337      	adds	r3, #55	; 0x37
 8003e04:	4313      	orrs	r3, r2
 8003e06:	81a3      	strh	r3, [r4, #12]
 8003e08:	4240      	negs	r0, r0
 8003e0a:	bd70      	pop	{r4, r5, r6, pc}
 8003e0c:	4b29      	ldr	r3, [pc, #164]	; (8003eb4 <__swsetup_r+0xe8>)
 8003e0e:	429c      	cmp	r4, r3
 8003e10:	d101      	bne.n	8003e16 <__swsetup_r+0x4a>
 8003e12:	68ac      	ldr	r4, [r5, #8]
 8003e14:	e7eb      	b.n	8003dee <__swsetup_r+0x22>
 8003e16:	4b28      	ldr	r3, [pc, #160]	; (8003eb8 <__swsetup_r+0xec>)
 8003e18:	429c      	cmp	r4, r3
 8003e1a:	d1e8      	bne.n	8003dee <__swsetup_r+0x22>
 8003e1c:	68ec      	ldr	r4, [r5, #12]
 8003e1e:	e7e6      	b.n	8003dee <__swsetup_r+0x22>
 8003e20:	075b      	lsls	r3, r3, #29
 8003e22:	d513      	bpl.n	8003e4c <__swsetup_r+0x80>
 8003e24:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003e26:	2900      	cmp	r1, #0
 8003e28:	d008      	beq.n	8003e3c <__swsetup_r+0x70>
 8003e2a:	0023      	movs	r3, r4
 8003e2c:	3344      	adds	r3, #68	; 0x44
 8003e2e:	4299      	cmp	r1, r3
 8003e30:	d002      	beq.n	8003e38 <__swsetup_r+0x6c>
 8003e32:	0030      	movs	r0, r6
 8003e34:	f7ff fb9c 	bl	8003570 <_free_r>
 8003e38:	2300      	movs	r3, #0
 8003e3a:	6363      	str	r3, [r4, #52]	; 0x34
 8003e3c:	2224      	movs	r2, #36	; 0x24
 8003e3e:	89a3      	ldrh	r3, [r4, #12]
 8003e40:	4393      	bics	r3, r2
 8003e42:	81a3      	strh	r3, [r4, #12]
 8003e44:	2300      	movs	r3, #0
 8003e46:	6063      	str	r3, [r4, #4]
 8003e48:	6923      	ldr	r3, [r4, #16]
 8003e4a:	6023      	str	r3, [r4, #0]
 8003e4c:	2308      	movs	r3, #8
 8003e4e:	89a2      	ldrh	r2, [r4, #12]
 8003e50:	4313      	orrs	r3, r2
 8003e52:	81a3      	strh	r3, [r4, #12]
 8003e54:	6923      	ldr	r3, [r4, #16]
 8003e56:	2b00      	cmp	r3, #0
 8003e58:	d10b      	bne.n	8003e72 <__swsetup_r+0xa6>
 8003e5a:	21a0      	movs	r1, #160	; 0xa0
 8003e5c:	2280      	movs	r2, #128	; 0x80
 8003e5e:	89a3      	ldrh	r3, [r4, #12]
 8003e60:	0089      	lsls	r1, r1, #2
 8003e62:	0092      	lsls	r2, r2, #2
 8003e64:	400b      	ands	r3, r1
 8003e66:	4293      	cmp	r3, r2
 8003e68:	d003      	beq.n	8003e72 <__swsetup_r+0xa6>
 8003e6a:	0021      	movs	r1, r4
 8003e6c:	0030      	movs	r0, r6
 8003e6e:	f000 fa27 	bl	80042c0 <__smakebuf_r>
 8003e72:	220c      	movs	r2, #12
 8003e74:	5ea3      	ldrsh	r3, [r4, r2]
 8003e76:	2001      	movs	r0, #1
 8003e78:	001a      	movs	r2, r3
 8003e7a:	b299      	uxth	r1, r3
 8003e7c:	4002      	ands	r2, r0
 8003e7e:	4203      	tst	r3, r0
 8003e80:	d00f      	beq.n	8003ea2 <__swsetup_r+0xd6>
 8003e82:	2200      	movs	r2, #0
 8003e84:	60a2      	str	r2, [r4, #8]
 8003e86:	6962      	ldr	r2, [r4, #20]
 8003e88:	4252      	negs	r2, r2
 8003e8a:	61a2      	str	r2, [r4, #24]
 8003e8c:	2000      	movs	r0, #0
 8003e8e:	6922      	ldr	r2, [r4, #16]
 8003e90:	4282      	cmp	r2, r0
 8003e92:	d1ba      	bne.n	8003e0a <__swsetup_r+0x3e>
 8003e94:	060a      	lsls	r2, r1, #24
 8003e96:	d5b8      	bpl.n	8003e0a <__swsetup_r+0x3e>
 8003e98:	2240      	movs	r2, #64	; 0x40
 8003e9a:	4313      	orrs	r3, r2
 8003e9c:	81a3      	strh	r3, [r4, #12]
 8003e9e:	3801      	subs	r0, #1
 8003ea0:	e7b3      	b.n	8003e0a <__swsetup_r+0x3e>
 8003ea2:	0788      	lsls	r0, r1, #30
 8003ea4:	d400      	bmi.n	8003ea8 <__swsetup_r+0xdc>
 8003ea6:	6962      	ldr	r2, [r4, #20]
 8003ea8:	60a2      	str	r2, [r4, #8]
 8003eaa:	e7ef      	b.n	8003e8c <__swsetup_r+0xc0>
 8003eac:	20000000 	.word	0x20000000
 8003eb0:	08004864 	.word	0x08004864
 8003eb4:	08004884 	.word	0x08004884
 8003eb8:	08004844 	.word	0x08004844

08003ebc <abort>:
 8003ebc:	2006      	movs	r0, #6
 8003ebe:	b510      	push	{r4, lr}
 8003ec0:	f000 fa88 	bl	80043d4 <raise>
 8003ec4:	2001      	movs	r0, #1
 8003ec6:	f7fe ff91 	bl	8002dec <_exit>
	...

08003ecc <__sflush_r>:
 8003ecc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003ece:	898b      	ldrh	r3, [r1, #12]
 8003ed0:	0005      	movs	r5, r0
 8003ed2:	000c      	movs	r4, r1
 8003ed4:	071a      	lsls	r2, r3, #28
 8003ed6:	d45f      	bmi.n	8003f98 <__sflush_r+0xcc>
 8003ed8:	684a      	ldr	r2, [r1, #4]
 8003eda:	2a00      	cmp	r2, #0
 8003edc:	dc04      	bgt.n	8003ee8 <__sflush_r+0x1c>
 8003ede:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8003ee0:	2a00      	cmp	r2, #0
 8003ee2:	dc01      	bgt.n	8003ee8 <__sflush_r+0x1c>
 8003ee4:	2000      	movs	r0, #0
 8003ee6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003ee8:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8003eea:	2f00      	cmp	r7, #0
 8003eec:	d0fa      	beq.n	8003ee4 <__sflush_r+0x18>
 8003eee:	2200      	movs	r2, #0
 8003ef0:	2180      	movs	r1, #128	; 0x80
 8003ef2:	682e      	ldr	r6, [r5, #0]
 8003ef4:	602a      	str	r2, [r5, #0]
 8003ef6:	001a      	movs	r2, r3
 8003ef8:	0149      	lsls	r1, r1, #5
 8003efa:	400a      	ands	r2, r1
 8003efc:	420b      	tst	r3, r1
 8003efe:	d034      	beq.n	8003f6a <__sflush_r+0x9e>
 8003f00:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003f02:	89a3      	ldrh	r3, [r4, #12]
 8003f04:	075b      	lsls	r3, r3, #29
 8003f06:	d506      	bpl.n	8003f16 <__sflush_r+0x4a>
 8003f08:	6863      	ldr	r3, [r4, #4]
 8003f0a:	1ac0      	subs	r0, r0, r3
 8003f0c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003f0e:	2b00      	cmp	r3, #0
 8003f10:	d001      	beq.n	8003f16 <__sflush_r+0x4a>
 8003f12:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003f14:	1ac0      	subs	r0, r0, r3
 8003f16:	0002      	movs	r2, r0
 8003f18:	6a21      	ldr	r1, [r4, #32]
 8003f1a:	2300      	movs	r3, #0
 8003f1c:	0028      	movs	r0, r5
 8003f1e:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8003f20:	47b8      	blx	r7
 8003f22:	89a1      	ldrh	r1, [r4, #12]
 8003f24:	1c43      	adds	r3, r0, #1
 8003f26:	d106      	bne.n	8003f36 <__sflush_r+0x6a>
 8003f28:	682b      	ldr	r3, [r5, #0]
 8003f2a:	2b1d      	cmp	r3, #29
 8003f2c:	d831      	bhi.n	8003f92 <__sflush_r+0xc6>
 8003f2e:	4a2c      	ldr	r2, [pc, #176]	; (8003fe0 <__sflush_r+0x114>)
 8003f30:	40da      	lsrs	r2, r3
 8003f32:	07d3      	lsls	r3, r2, #31
 8003f34:	d52d      	bpl.n	8003f92 <__sflush_r+0xc6>
 8003f36:	2300      	movs	r3, #0
 8003f38:	6063      	str	r3, [r4, #4]
 8003f3a:	6923      	ldr	r3, [r4, #16]
 8003f3c:	6023      	str	r3, [r4, #0]
 8003f3e:	04cb      	lsls	r3, r1, #19
 8003f40:	d505      	bpl.n	8003f4e <__sflush_r+0x82>
 8003f42:	1c43      	adds	r3, r0, #1
 8003f44:	d102      	bne.n	8003f4c <__sflush_r+0x80>
 8003f46:	682b      	ldr	r3, [r5, #0]
 8003f48:	2b00      	cmp	r3, #0
 8003f4a:	d100      	bne.n	8003f4e <__sflush_r+0x82>
 8003f4c:	6560      	str	r0, [r4, #84]	; 0x54
 8003f4e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003f50:	602e      	str	r6, [r5, #0]
 8003f52:	2900      	cmp	r1, #0
 8003f54:	d0c6      	beq.n	8003ee4 <__sflush_r+0x18>
 8003f56:	0023      	movs	r3, r4
 8003f58:	3344      	adds	r3, #68	; 0x44
 8003f5a:	4299      	cmp	r1, r3
 8003f5c:	d002      	beq.n	8003f64 <__sflush_r+0x98>
 8003f5e:	0028      	movs	r0, r5
 8003f60:	f7ff fb06 	bl	8003570 <_free_r>
 8003f64:	2000      	movs	r0, #0
 8003f66:	6360      	str	r0, [r4, #52]	; 0x34
 8003f68:	e7bd      	b.n	8003ee6 <__sflush_r+0x1a>
 8003f6a:	2301      	movs	r3, #1
 8003f6c:	0028      	movs	r0, r5
 8003f6e:	6a21      	ldr	r1, [r4, #32]
 8003f70:	47b8      	blx	r7
 8003f72:	1c43      	adds	r3, r0, #1
 8003f74:	d1c5      	bne.n	8003f02 <__sflush_r+0x36>
 8003f76:	682b      	ldr	r3, [r5, #0]
 8003f78:	2b00      	cmp	r3, #0
 8003f7a:	d0c2      	beq.n	8003f02 <__sflush_r+0x36>
 8003f7c:	2b1d      	cmp	r3, #29
 8003f7e:	d001      	beq.n	8003f84 <__sflush_r+0xb8>
 8003f80:	2b16      	cmp	r3, #22
 8003f82:	d101      	bne.n	8003f88 <__sflush_r+0xbc>
 8003f84:	602e      	str	r6, [r5, #0]
 8003f86:	e7ad      	b.n	8003ee4 <__sflush_r+0x18>
 8003f88:	2340      	movs	r3, #64	; 0x40
 8003f8a:	89a2      	ldrh	r2, [r4, #12]
 8003f8c:	4313      	orrs	r3, r2
 8003f8e:	81a3      	strh	r3, [r4, #12]
 8003f90:	e7a9      	b.n	8003ee6 <__sflush_r+0x1a>
 8003f92:	2340      	movs	r3, #64	; 0x40
 8003f94:	430b      	orrs	r3, r1
 8003f96:	e7fa      	b.n	8003f8e <__sflush_r+0xc2>
 8003f98:	690f      	ldr	r7, [r1, #16]
 8003f9a:	2f00      	cmp	r7, #0
 8003f9c:	d0a2      	beq.n	8003ee4 <__sflush_r+0x18>
 8003f9e:	680a      	ldr	r2, [r1, #0]
 8003fa0:	600f      	str	r7, [r1, #0]
 8003fa2:	1bd2      	subs	r2, r2, r7
 8003fa4:	9201      	str	r2, [sp, #4]
 8003fa6:	2200      	movs	r2, #0
 8003fa8:	079b      	lsls	r3, r3, #30
 8003faa:	d100      	bne.n	8003fae <__sflush_r+0xe2>
 8003fac:	694a      	ldr	r2, [r1, #20]
 8003fae:	60a2      	str	r2, [r4, #8]
 8003fb0:	9b01      	ldr	r3, [sp, #4]
 8003fb2:	2b00      	cmp	r3, #0
 8003fb4:	dc00      	bgt.n	8003fb8 <__sflush_r+0xec>
 8003fb6:	e795      	b.n	8003ee4 <__sflush_r+0x18>
 8003fb8:	003a      	movs	r2, r7
 8003fba:	0028      	movs	r0, r5
 8003fbc:	9b01      	ldr	r3, [sp, #4]
 8003fbe:	6a21      	ldr	r1, [r4, #32]
 8003fc0:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003fc2:	47b0      	blx	r6
 8003fc4:	2800      	cmp	r0, #0
 8003fc6:	dc06      	bgt.n	8003fd6 <__sflush_r+0x10a>
 8003fc8:	2340      	movs	r3, #64	; 0x40
 8003fca:	2001      	movs	r0, #1
 8003fcc:	89a2      	ldrh	r2, [r4, #12]
 8003fce:	4240      	negs	r0, r0
 8003fd0:	4313      	orrs	r3, r2
 8003fd2:	81a3      	strh	r3, [r4, #12]
 8003fd4:	e787      	b.n	8003ee6 <__sflush_r+0x1a>
 8003fd6:	9b01      	ldr	r3, [sp, #4]
 8003fd8:	183f      	adds	r7, r7, r0
 8003fda:	1a1b      	subs	r3, r3, r0
 8003fdc:	9301      	str	r3, [sp, #4]
 8003fde:	e7e7      	b.n	8003fb0 <__sflush_r+0xe4>
 8003fe0:	20400001 	.word	0x20400001

08003fe4 <_fflush_r>:
 8003fe4:	690b      	ldr	r3, [r1, #16]
 8003fe6:	b570      	push	{r4, r5, r6, lr}
 8003fe8:	0005      	movs	r5, r0
 8003fea:	000c      	movs	r4, r1
 8003fec:	2b00      	cmp	r3, #0
 8003fee:	d102      	bne.n	8003ff6 <_fflush_r+0x12>
 8003ff0:	2500      	movs	r5, #0
 8003ff2:	0028      	movs	r0, r5
 8003ff4:	bd70      	pop	{r4, r5, r6, pc}
 8003ff6:	2800      	cmp	r0, #0
 8003ff8:	d004      	beq.n	8004004 <_fflush_r+0x20>
 8003ffa:	6983      	ldr	r3, [r0, #24]
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	d101      	bne.n	8004004 <_fflush_r+0x20>
 8004000:	f000 f892 	bl	8004128 <__sinit>
 8004004:	4b14      	ldr	r3, [pc, #80]	; (8004058 <_fflush_r+0x74>)
 8004006:	429c      	cmp	r4, r3
 8004008:	d11b      	bne.n	8004042 <_fflush_r+0x5e>
 800400a:	686c      	ldr	r4, [r5, #4]
 800400c:	220c      	movs	r2, #12
 800400e:	5ea3      	ldrsh	r3, [r4, r2]
 8004010:	2b00      	cmp	r3, #0
 8004012:	d0ed      	beq.n	8003ff0 <_fflush_r+0xc>
 8004014:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8004016:	07d2      	lsls	r2, r2, #31
 8004018:	d404      	bmi.n	8004024 <_fflush_r+0x40>
 800401a:	059b      	lsls	r3, r3, #22
 800401c:	d402      	bmi.n	8004024 <_fflush_r+0x40>
 800401e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004020:	f000 f923 	bl	800426a <__retarget_lock_acquire_recursive>
 8004024:	0028      	movs	r0, r5
 8004026:	0021      	movs	r1, r4
 8004028:	f7ff ff50 	bl	8003ecc <__sflush_r>
 800402c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800402e:	0005      	movs	r5, r0
 8004030:	07db      	lsls	r3, r3, #31
 8004032:	d4de      	bmi.n	8003ff2 <_fflush_r+0xe>
 8004034:	89a3      	ldrh	r3, [r4, #12]
 8004036:	059b      	lsls	r3, r3, #22
 8004038:	d4db      	bmi.n	8003ff2 <_fflush_r+0xe>
 800403a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800403c:	f000 f916 	bl	800426c <__retarget_lock_release_recursive>
 8004040:	e7d7      	b.n	8003ff2 <_fflush_r+0xe>
 8004042:	4b06      	ldr	r3, [pc, #24]	; (800405c <_fflush_r+0x78>)
 8004044:	429c      	cmp	r4, r3
 8004046:	d101      	bne.n	800404c <_fflush_r+0x68>
 8004048:	68ac      	ldr	r4, [r5, #8]
 800404a:	e7df      	b.n	800400c <_fflush_r+0x28>
 800404c:	4b04      	ldr	r3, [pc, #16]	; (8004060 <_fflush_r+0x7c>)
 800404e:	429c      	cmp	r4, r3
 8004050:	d1dc      	bne.n	800400c <_fflush_r+0x28>
 8004052:	68ec      	ldr	r4, [r5, #12]
 8004054:	e7da      	b.n	800400c <_fflush_r+0x28>
 8004056:	46c0      	nop			; (mov r8, r8)
 8004058:	08004864 	.word	0x08004864
 800405c:	08004884 	.word	0x08004884
 8004060:	08004844 	.word	0x08004844

08004064 <std>:
 8004064:	2300      	movs	r3, #0
 8004066:	b510      	push	{r4, lr}
 8004068:	0004      	movs	r4, r0
 800406a:	6003      	str	r3, [r0, #0]
 800406c:	6043      	str	r3, [r0, #4]
 800406e:	6083      	str	r3, [r0, #8]
 8004070:	8181      	strh	r1, [r0, #12]
 8004072:	6643      	str	r3, [r0, #100]	; 0x64
 8004074:	0019      	movs	r1, r3
 8004076:	81c2      	strh	r2, [r0, #14]
 8004078:	6103      	str	r3, [r0, #16]
 800407a:	6143      	str	r3, [r0, #20]
 800407c:	6183      	str	r3, [r0, #24]
 800407e:	2208      	movs	r2, #8
 8004080:	305c      	adds	r0, #92	; 0x5c
 8004082:	f7ff f936 	bl	80032f2 <memset>
 8004086:	4b05      	ldr	r3, [pc, #20]	; (800409c <std+0x38>)
 8004088:	6224      	str	r4, [r4, #32]
 800408a:	6263      	str	r3, [r4, #36]	; 0x24
 800408c:	4b04      	ldr	r3, [pc, #16]	; (80040a0 <std+0x3c>)
 800408e:	62a3      	str	r3, [r4, #40]	; 0x28
 8004090:	4b04      	ldr	r3, [pc, #16]	; (80040a4 <std+0x40>)
 8004092:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004094:	4b04      	ldr	r3, [pc, #16]	; (80040a8 <std+0x44>)
 8004096:	6323      	str	r3, [r4, #48]	; 0x30
 8004098:	bd10      	pop	{r4, pc}
 800409a:	46c0      	nop			; (mov r8, r8)
 800409c:	08004415 	.word	0x08004415
 80040a0:	0800443d 	.word	0x0800443d
 80040a4:	08004475 	.word	0x08004475
 80040a8:	080044a1 	.word	0x080044a1

080040ac <_cleanup_r>:
 80040ac:	b510      	push	{r4, lr}
 80040ae:	4902      	ldr	r1, [pc, #8]	; (80040b8 <_cleanup_r+0xc>)
 80040b0:	f000 f8ba 	bl	8004228 <_fwalk_reent>
 80040b4:	bd10      	pop	{r4, pc}
 80040b6:	46c0      	nop			; (mov r8, r8)
 80040b8:	08003fe5 	.word	0x08003fe5

080040bc <__sfmoreglue>:
 80040bc:	b570      	push	{r4, r5, r6, lr}
 80040be:	2568      	movs	r5, #104	; 0x68
 80040c0:	1e4a      	subs	r2, r1, #1
 80040c2:	4355      	muls	r5, r2
 80040c4:	000e      	movs	r6, r1
 80040c6:	0029      	movs	r1, r5
 80040c8:	3174      	adds	r1, #116	; 0x74
 80040ca:	f7ff fabd 	bl	8003648 <_malloc_r>
 80040ce:	1e04      	subs	r4, r0, #0
 80040d0:	d008      	beq.n	80040e4 <__sfmoreglue+0x28>
 80040d2:	2100      	movs	r1, #0
 80040d4:	002a      	movs	r2, r5
 80040d6:	6001      	str	r1, [r0, #0]
 80040d8:	6046      	str	r6, [r0, #4]
 80040da:	300c      	adds	r0, #12
 80040dc:	60a0      	str	r0, [r4, #8]
 80040de:	3268      	adds	r2, #104	; 0x68
 80040e0:	f7ff f907 	bl	80032f2 <memset>
 80040e4:	0020      	movs	r0, r4
 80040e6:	bd70      	pop	{r4, r5, r6, pc}

080040e8 <__sfp_lock_acquire>:
 80040e8:	b510      	push	{r4, lr}
 80040ea:	4802      	ldr	r0, [pc, #8]	; (80040f4 <__sfp_lock_acquire+0xc>)
 80040ec:	f000 f8bd 	bl	800426a <__retarget_lock_acquire_recursive>
 80040f0:	bd10      	pop	{r4, pc}
 80040f2:	46c0      	nop			; (mov r8, r8)
 80040f4:	20000139 	.word	0x20000139

080040f8 <__sfp_lock_release>:
 80040f8:	b510      	push	{r4, lr}
 80040fa:	4802      	ldr	r0, [pc, #8]	; (8004104 <__sfp_lock_release+0xc>)
 80040fc:	f000 f8b6 	bl	800426c <__retarget_lock_release_recursive>
 8004100:	bd10      	pop	{r4, pc}
 8004102:	46c0      	nop			; (mov r8, r8)
 8004104:	20000139 	.word	0x20000139

08004108 <__sinit_lock_acquire>:
 8004108:	b510      	push	{r4, lr}
 800410a:	4802      	ldr	r0, [pc, #8]	; (8004114 <__sinit_lock_acquire+0xc>)
 800410c:	f000 f8ad 	bl	800426a <__retarget_lock_acquire_recursive>
 8004110:	bd10      	pop	{r4, pc}
 8004112:	46c0      	nop			; (mov r8, r8)
 8004114:	2000013a 	.word	0x2000013a

08004118 <__sinit_lock_release>:
 8004118:	b510      	push	{r4, lr}
 800411a:	4802      	ldr	r0, [pc, #8]	; (8004124 <__sinit_lock_release+0xc>)
 800411c:	f000 f8a6 	bl	800426c <__retarget_lock_release_recursive>
 8004120:	bd10      	pop	{r4, pc}
 8004122:	46c0      	nop			; (mov r8, r8)
 8004124:	2000013a 	.word	0x2000013a

08004128 <__sinit>:
 8004128:	b513      	push	{r0, r1, r4, lr}
 800412a:	0004      	movs	r4, r0
 800412c:	f7ff ffec 	bl	8004108 <__sinit_lock_acquire>
 8004130:	69a3      	ldr	r3, [r4, #24]
 8004132:	2b00      	cmp	r3, #0
 8004134:	d002      	beq.n	800413c <__sinit+0x14>
 8004136:	f7ff ffef 	bl	8004118 <__sinit_lock_release>
 800413a:	bd13      	pop	{r0, r1, r4, pc}
 800413c:	64a3      	str	r3, [r4, #72]	; 0x48
 800413e:	64e3      	str	r3, [r4, #76]	; 0x4c
 8004140:	6523      	str	r3, [r4, #80]	; 0x50
 8004142:	4b13      	ldr	r3, [pc, #76]	; (8004190 <__sinit+0x68>)
 8004144:	4a13      	ldr	r2, [pc, #76]	; (8004194 <__sinit+0x6c>)
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	62a2      	str	r2, [r4, #40]	; 0x28
 800414a:	9301      	str	r3, [sp, #4]
 800414c:	42a3      	cmp	r3, r4
 800414e:	d101      	bne.n	8004154 <__sinit+0x2c>
 8004150:	2301      	movs	r3, #1
 8004152:	61a3      	str	r3, [r4, #24]
 8004154:	0020      	movs	r0, r4
 8004156:	f000 f81f 	bl	8004198 <__sfp>
 800415a:	6060      	str	r0, [r4, #4]
 800415c:	0020      	movs	r0, r4
 800415e:	f000 f81b 	bl	8004198 <__sfp>
 8004162:	60a0      	str	r0, [r4, #8]
 8004164:	0020      	movs	r0, r4
 8004166:	f000 f817 	bl	8004198 <__sfp>
 800416a:	2200      	movs	r2, #0
 800416c:	2104      	movs	r1, #4
 800416e:	60e0      	str	r0, [r4, #12]
 8004170:	6860      	ldr	r0, [r4, #4]
 8004172:	f7ff ff77 	bl	8004064 <std>
 8004176:	2201      	movs	r2, #1
 8004178:	2109      	movs	r1, #9
 800417a:	68a0      	ldr	r0, [r4, #8]
 800417c:	f7ff ff72 	bl	8004064 <std>
 8004180:	2202      	movs	r2, #2
 8004182:	2112      	movs	r1, #18
 8004184:	68e0      	ldr	r0, [r4, #12]
 8004186:	f7ff ff6d 	bl	8004064 <std>
 800418a:	2301      	movs	r3, #1
 800418c:	61a3      	str	r3, [r4, #24]
 800418e:	e7d2      	b.n	8004136 <__sinit+0xe>
 8004190:	0800465c 	.word	0x0800465c
 8004194:	080040ad 	.word	0x080040ad

08004198 <__sfp>:
 8004198:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800419a:	0007      	movs	r7, r0
 800419c:	f7ff ffa4 	bl	80040e8 <__sfp_lock_acquire>
 80041a0:	4b1f      	ldr	r3, [pc, #124]	; (8004220 <__sfp+0x88>)
 80041a2:	681e      	ldr	r6, [r3, #0]
 80041a4:	69b3      	ldr	r3, [r6, #24]
 80041a6:	2b00      	cmp	r3, #0
 80041a8:	d102      	bne.n	80041b0 <__sfp+0x18>
 80041aa:	0030      	movs	r0, r6
 80041ac:	f7ff ffbc 	bl	8004128 <__sinit>
 80041b0:	3648      	adds	r6, #72	; 0x48
 80041b2:	68b4      	ldr	r4, [r6, #8]
 80041b4:	6873      	ldr	r3, [r6, #4]
 80041b6:	3b01      	subs	r3, #1
 80041b8:	d504      	bpl.n	80041c4 <__sfp+0x2c>
 80041ba:	6833      	ldr	r3, [r6, #0]
 80041bc:	2b00      	cmp	r3, #0
 80041be:	d022      	beq.n	8004206 <__sfp+0x6e>
 80041c0:	6836      	ldr	r6, [r6, #0]
 80041c2:	e7f6      	b.n	80041b2 <__sfp+0x1a>
 80041c4:	220c      	movs	r2, #12
 80041c6:	5ea5      	ldrsh	r5, [r4, r2]
 80041c8:	2d00      	cmp	r5, #0
 80041ca:	d11a      	bne.n	8004202 <__sfp+0x6a>
 80041cc:	0020      	movs	r0, r4
 80041ce:	4b15      	ldr	r3, [pc, #84]	; (8004224 <__sfp+0x8c>)
 80041d0:	3058      	adds	r0, #88	; 0x58
 80041d2:	60e3      	str	r3, [r4, #12]
 80041d4:	6665      	str	r5, [r4, #100]	; 0x64
 80041d6:	f000 f847 	bl	8004268 <__retarget_lock_init_recursive>
 80041da:	f7ff ff8d 	bl	80040f8 <__sfp_lock_release>
 80041de:	0020      	movs	r0, r4
 80041e0:	2208      	movs	r2, #8
 80041e2:	0029      	movs	r1, r5
 80041e4:	6025      	str	r5, [r4, #0]
 80041e6:	60a5      	str	r5, [r4, #8]
 80041e8:	6065      	str	r5, [r4, #4]
 80041ea:	6125      	str	r5, [r4, #16]
 80041ec:	6165      	str	r5, [r4, #20]
 80041ee:	61a5      	str	r5, [r4, #24]
 80041f0:	305c      	adds	r0, #92	; 0x5c
 80041f2:	f7ff f87e 	bl	80032f2 <memset>
 80041f6:	6365      	str	r5, [r4, #52]	; 0x34
 80041f8:	63a5      	str	r5, [r4, #56]	; 0x38
 80041fa:	64a5      	str	r5, [r4, #72]	; 0x48
 80041fc:	64e5      	str	r5, [r4, #76]	; 0x4c
 80041fe:	0020      	movs	r0, r4
 8004200:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004202:	3468      	adds	r4, #104	; 0x68
 8004204:	e7d7      	b.n	80041b6 <__sfp+0x1e>
 8004206:	2104      	movs	r1, #4
 8004208:	0038      	movs	r0, r7
 800420a:	f7ff ff57 	bl	80040bc <__sfmoreglue>
 800420e:	1e04      	subs	r4, r0, #0
 8004210:	6030      	str	r0, [r6, #0]
 8004212:	d1d5      	bne.n	80041c0 <__sfp+0x28>
 8004214:	f7ff ff70 	bl	80040f8 <__sfp_lock_release>
 8004218:	230c      	movs	r3, #12
 800421a:	603b      	str	r3, [r7, #0]
 800421c:	e7ef      	b.n	80041fe <__sfp+0x66>
 800421e:	46c0      	nop			; (mov r8, r8)
 8004220:	0800465c 	.word	0x0800465c
 8004224:	ffff0001 	.word	0xffff0001

08004228 <_fwalk_reent>:
 8004228:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800422a:	0004      	movs	r4, r0
 800422c:	0006      	movs	r6, r0
 800422e:	2700      	movs	r7, #0
 8004230:	9101      	str	r1, [sp, #4]
 8004232:	3448      	adds	r4, #72	; 0x48
 8004234:	6863      	ldr	r3, [r4, #4]
 8004236:	68a5      	ldr	r5, [r4, #8]
 8004238:	9300      	str	r3, [sp, #0]
 800423a:	9b00      	ldr	r3, [sp, #0]
 800423c:	3b01      	subs	r3, #1
 800423e:	9300      	str	r3, [sp, #0]
 8004240:	d504      	bpl.n	800424c <_fwalk_reent+0x24>
 8004242:	6824      	ldr	r4, [r4, #0]
 8004244:	2c00      	cmp	r4, #0
 8004246:	d1f5      	bne.n	8004234 <_fwalk_reent+0xc>
 8004248:	0038      	movs	r0, r7
 800424a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800424c:	89ab      	ldrh	r3, [r5, #12]
 800424e:	2b01      	cmp	r3, #1
 8004250:	d908      	bls.n	8004264 <_fwalk_reent+0x3c>
 8004252:	220e      	movs	r2, #14
 8004254:	5eab      	ldrsh	r3, [r5, r2]
 8004256:	3301      	adds	r3, #1
 8004258:	d004      	beq.n	8004264 <_fwalk_reent+0x3c>
 800425a:	0029      	movs	r1, r5
 800425c:	0030      	movs	r0, r6
 800425e:	9b01      	ldr	r3, [sp, #4]
 8004260:	4798      	blx	r3
 8004262:	4307      	orrs	r7, r0
 8004264:	3568      	adds	r5, #104	; 0x68
 8004266:	e7e8      	b.n	800423a <_fwalk_reent+0x12>

08004268 <__retarget_lock_init_recursive>:
 8004268:	4770      	bx	lr

0800426a <__retarget_lock_acquire_recursive>:
 800426a:	4770      	bx	lr

0800426c <__retarget_lock_release_recursive>:
 800426c:	4770      	bx	lr
	...

08004270 <__swhatbuf_r>:
 8004270:	b570      	push	{r4, r5, r6, lr}
 8004272:	000e      	movs	r6, r1
 8004274:	001d      	movs	r5, r3
 8004276:	230e      	movs	r3, #14
 8004278:	5ec9      	ldrsh	r1, [r1, r3]
 800427a:	0014      	movs	r4, r2
 800427c:	b096      	sub	sp, #88	; 0x58
 800427e:	2900      	cmp	r1, #0
 8004280:	da08      	bge.n	8004294 <__swhatbuf_r+0x24>
 8004282:	220c      	movs	r2, #12
 8004284:	5eb3      	ldrsh	r3, [r6, r2]
 8004286:	2200      	movs	r2, #0
 8004288:	602a      	str	r2, [r5, #0]
 800428a:	061b      	lsls	r3, r3, #24
 800428c:	d411      	bmi.n	80042b2 <__swhatbuf_r+0x42>
 800428e:	2380      	movs	r3, #128	; 0x80
 8004290:	00db      	lsls	r3, r3, #3
 8004292:	e00f      	b.n	80042b4 <__swhatbuf_r+0x44>
 8004294:	466a      	mov	r2, sp
 8004296:	f000 f92f 	bl	80044f8 <_fstat_r>
 800429a:	2800      	cmp	r0, #0
 800429c:	dbf1      	blt.n	8004282 <__swhatbuf_r+0x12>
 800429e:	23f0      	movs	r3, #240	; 0xf0
 80042a0:	9901      	ldr	r1, [sp, #4]
 80042a2:	021b      	lsls	r3, r3, #8
 80042a4:	4019      	ands	r1, r3
 80042a6:	4b05      	ldr	r3, [pc, #20]	; (80042bc <__swhatbuf_r+0x4c>)
 80042a8:	18c9      	adds	r1, r1, r3
 80042aa:	424b      	negs	r3, r1
 80042ac:	4159      	adcs	r1, r3
 80042ae:	6029      	str	r1, [r5, #0]
 80042b0:	e7ed      	b.n	800428e <__swhatbuf_r+0x1e>
 80042b2:	2340      	movs	r3, #64	; 0x40
 80042b4:	2000      	movs	r0, #0
 80042b6:	6023      	str	r3, [r4, #0]
 80042b8:	b016      	add	sp, #88	; 0x58
 80042ba:	bd70      	pop	{r4, r5, r6, pc}
 80042bc:	ffffe000 	.word	0xffffe000

080042c0 <__smakebuf_r>:
 80042c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80042c2:	2602      	movs	r6, #2
 80042c4:	898b      	ldrh	r3, [r1, #12]
 80042c6:	0005      	movs	r5, r0
 80042c8:	000c      	movs	r4, r1
 80042ca:	4233      	tst	r3, r6
 80042cc:	d006      	beq.n	80042dc <__smakebuf_r+0x1c>
 80042ce:	0023      	movs	r3, r4
 80042d0:	3347      	adds	r3, #71	; 0x47
 80042d2:	6023      	str	r3, [r4, #0]
 80042d4:	6123      	str	r3, [r4, #16]
 80042d6:	2301      	movs	r3, #1
 80042d8:	6163      	str	r3, [r4, #20]
 80042da:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80042dc:	466a      	mov	r2, sp
 80042de:	ab01      	add	r3, sp, #4
 80042e0:	f7ff ffc6 	bl	8004270 <__swhatbuf_r>
 80042e4:	9900      	ldr	r1, [sp, #0]
 80042e6:	0007      	movs	r7, r0
 80042e8:	0028      	movs	r0, r5
 80042ea:	f7ff f9ad 	bl	8003648 <_malloc_r>
 80042ee:	2800      	cmp	r0, #0
 80042f0:	d108      	bne.n	8004304 <__smakebuf_r+0x44>
 80042f2:	220c      	movs	r2, #12
 80042f4:	5ea3      	ldrsh	r3, [r4, r2]
 80042f6:	059a      	lsls	r2, r3, #22
 80042f8:	d4ef      	bmi.n	80042da <__smakebuf_r+0x1a>
 80042fa:	2203      	movs	r2, #3
 80042fc:	4393      	bics	r3, r2
 80042fe:	431e      	orrs	r6, r3
 8004300:	81a6      	strh	r6, [r4, #12]
 8004302:	e7e4      	b.n	80042ce <__smakebuf_r+0xe>
 8004304:	4b0f      	ldr	r3, [pc, #60]	; (8004344 <__smakebuf_r+0x84>)
 8004306:	62ab      	str	r3, [r5, #40]	; 0x28
 8004308:	2380      	movs	r3, #128	; 0x80
 800430a:	89a2      	ldrh	r2, [r4, #12]
 800430c:	6020      	str	r0, [r4, #0]
 800430e:	4313      	orrs	r3, r2
 8004310:	81a3      	strh	r3, [r4, #12]
 8004312:	9b00      	ldr	r3, [sp, #0]
 8004314:	6120      	str	r0, [r4, #16]
 8004316:	6163      	str	r3, [r4, #20]
 8004318:	9b01      	ldr	r3, [sp, #4]
 800431a:	2b00      	cmp	r3, #0
 800431c:	d00d      	beq.n	800433a <__smakebuf_r+0x7a>
 800431e:	0028      	movs	r0, r5
 8004320:	230e      	movs	r3, #14
 8004322:	5ee1      	ldrsh	r1, [r4, r3]
 8004324:	f000 f8fa 	bl	800451c <_isatty_r>
 8004328:	2800      	cmp	r0, #0
 800432a:	d006      	beq.n	800433a <__smakebuf_r+0x7a>
 800432c:	2203      	movs	r2, #3
 800432e:	89a3      	ldrh	r3, [r4, #12]
 8004330:	4393      	bics	r3, r2
 8004332:	001a      	movs	r2, r3
 8004334:	2301      	movs	r3, #1
 8004336:	4313      	orrs	r3, r2
 8004338:	81a3      	strh	r3, [r4, #12]
 800433a:	89a0      	ldrh	r0, [r4, #12]
 800433c:	4307      	orrs	r7, r0
 800433e:	81a7      	strh	r7, [r4, #12]
 8004340:	e7cb      	b.n	80042da <__smakebuf_r+0x1a>
 8004342:	46c0      	nop			; (mov r8, r8)
 8004344:	080040ad 	.word	0x080040ad

08004348 <memchr>:
 8004348:	b2c9      	uxtb	r1, r1
 800434a:	1882      	adds	r2, r0, r2
 800434c:	4290      	cmp	r0, r2
 800434e:	d101      	bne.n	8004354 <memchr+0xc>
 8004350:	2000      	movs	r0, #0
 8004352:	4770      	bx	lr
 8004354:	7803      	ldrb	r3, [r0, #0]
 8004356:	428b      	cmp	r3, r1
 8004358:	d0fb      	beq.n	8004352 <memchr+0xa>
 800435a:	3001      	adds	r0, #1
 800435c:	e7f6      	b.n	800434c <memchr+0x4>
	...

08004360 <__malloc_lock>:
 8004360:	b510      	push	{r4, lr}
 8004362:	4802      	ldr	r0, [pc, #8]	; (800436c <__malloc_lock+0xc>)
 8004364:	f7ff ff81 	bl	800426a <__retarget_lock_acquire_recursive>
 8004368:	bd10      	pop	{r4, pc}
 800436a:	46c0      	nop			; (mov r8, r8)
 800436c:	20000138 	.word	0x20000138

08004370 <__malloc_unlock>:
 8004370:	b510      	push	{r4, lr}
 8004372:	4802      	ldr	r0, [pc, #8]	; (800437c <__malloc_unlock+0xc>)
 8004374:	f7ff ff7a 	bl	800426c <__retarget_lock_release_recursive>
 8004378:	bd10      	pop	{r4, pc}
 800437a:	46c0      	nop			; (mov r8, r8)
 800437c:	20000138 	.word	0x20000138

08004380 <_raise_r>:
 8004380:	b570      	push	{r4, r5, r6, lr}
 8004382:	0004      	movs	r4, r0
 8004384:	000d      	movs	r5, r1
 8004386:	291f      	cmp	r1, #31
 8004388:	d904      	bls.n	8004394 <_raise_r+0x14>
 800438a:	2316      	movs	r3, #22
 800438c:	6003      	str	r3, [r0, #0]
 800438e:	2001      	movs	r0, #1
 8004390:	4240      	negs	r0, r0
 8004392:	bd70      	pop	{r4, r5, r6, pc}
 8004394:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8004396:	2b00      	cmp	r3, #0
 8004398:	d004      	beq.n	80043a4 <_raise_r+0x24>
 800439a:	008a      	lsls	r2, r1, #2
 800439c:	189b      	adds	r3, r3, r2
 800439e:	681a      	ldr	r2, [r3, #0]
 80043a0:	2a00      	cmp	r2, #0
 80043a2:	d108      	bne.n	80043b6 <_raise_r+0x36>
 80043a4:	0020      	movs	r0, r4
 80043a6:	f000 f831 	bl	800440c <_getpid_r>
 80043aa:	002a      	movs	r2, r5
 80043ac:	0001      	movs	r1, r0
 80043ae:	0020      	movs	r0, r4
 80043b0:	f000 f81a 	bl	80043e8 <_kill_r>
 80043b4:	e7ed      	b.n	8004392 <_raise_r+0x12>
 80043b6:	2000      	movs	r0, #0
 80043b8:	2a01      	cmp	r2, #1
 80043ba:	d0ea      	beq.n	8004392 <_raise_r+0x12>
 80043bc:	1c51      	adds	r1, r2, #1
 80043be:	d103      	bne.n	80043c8 <_raise_r+0x48>
 80043c0:	2316      	movs	r3, #22
 80043c2:	3001      	adds	r0, #1
 80043c4:	6023      	str	r3, [r4, #0]
 80043c6:	e7e4      	b.n	8004392 <_raise_r+0x12>
 80043c8:	2400      	movs	r4, #0
 80043ca:	0028      	movs	r0, r5
 80043cc:	601c      	str	r4, [r3, #0]
 80043ce:	4790      	blx	r2
 80043d0:	0020      	movs	r0, r4
 80043d2:	e7de      	b.n	8004392 <_raise_r+0x12>

080043d4 <raise>:
 80043d4:	b510      	push	{r4, lr}
 80043d6:	4b03      	ldr	r3, [pc, #12]	; (80043e4 <raise+0x10>)
 80043d8:	0001      	movs	r1, r0
 80043da:	6818      	ldr	r0, [r3, #0]
 80043dc:	f7ff ffd0 	bl	8004380 <_raise_r>
 80043e0:	bd10      	pop	{r4, pc}
 80043e2:	46c0      	nop			; (mov r8, r8)
 80043e4:	20000000 	.word	0x20000000

080043e8 <_kill_r>:
 80043e8:	2300      	movs	r3, #0
 80043ea:	b570      	push	{r4, r5, r6, lr}
 80043ec:	4d06      	ldr	r5, [pc, #24]	; (8004408 <_kill_r+0x20>)
 80043ee:	0004      	movs	r4, r0
 80043f0:	0008      	movs	r0, r1
 80043f2:	0011      	movs	r1, r2
 80043f4:	602b      	str	r3, [r5, #0]
 80043f6:	f7fe fce9 	bl	8002dcc <_kill>
 80043fa:	1c43      	adds	r3, r0, #1
 80043fc:	d103      	bne.n	8004406 <_kill_r+0x1e>
 80043fe:	682b      	ldr	r3, [r5, #0]
 8004400:	2b00      	cmp	r3, #0
 8004402:	d000      	beq.n	8004406 <_kill_r+0x1e>
 8004404:	6023      	str	r3, [r4, #0]
 8004406:	bd70      	pop	{r4, r5, r6, pc}
 8004408:	2000013c 	.word	0x2000013c

0800440c <_getpid_r>:
 800440c:	b510      	push	{r4, lr}
 800440e:	f7fe fcd7 	bl	8002dc0 <_getpid>
 8004412:	bd10      	pop	{r4, pc}

08004414 <__sread>:
 8004414:	b570      	push	{r4, r5, r6, lr}
 8004416:	000c      	movs	r4, r1
 8004418:	250e      	movs	r5, #14
 800441a:	5f49      	ldrsh	r1, [r1, r5]
 800441c:	f000 f8a4 	bl	8004568 <_read_r>
 8004420:	2800      	cmp	r0, #0
 8004422:	db03      	blt.n	800442c <__sread+0x18>
 8004424:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8004426:	181b      	adds	r3, r3, r0
 8004428:	6563      	str	r3, [r4, #84]	; 0x54
 800442a:	bd70      	pop	{r4, r5, r6, pc}
 800442c:	89a3      	ldrh	r3, [r4, #12]
 800442e:	4a02      	ldr	r2, [pc, #8]	; (8004438 <__sread+0x24>)
 8004430:	4013      	ands	r3, r2
 8004432:	81a3      	strh	r3, [r4, #12]
 8004434:	e7f9      	b.n	800442a <__sread+0x16>
 8004436:	46c0      	nop			; (mov r8, r8)
 8004438:	ffffefff 	.word	0xffffefff

0800443c <__swrite>:
 800443c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800443e:	001f      	movs	r7, r3
 8004440:	898b      	ldrh	r3, [r1, #12]
 8004442:	0005      	movs	r5, r0
 8004444:	000c      	movs	r4, r1
 8004446:	0016      	movs	r6, r2
 8004448:	05db      	lsls	r3, r3, #23
 800444a:	d505      	bpl.n	8004458 <__swrite+0x1c>
 800444c:	230e      	movs	r3, #14
 800444e:	5ec9      	ldrsh	r1, [r1, r3]
 8004450:	2200      	movs	r2, #0
 8004452:	2302      	movs	r3, #2
 8004454:	f000 f874 	bl	8004540 <_lseek_r>
 8004458:	89a3      	ldrh	r3, [r4, #12]
 800445a:	4a05      	ldr	r2, [pc, #20]	; (8004470 <__swrite+0x34>)
 800445c:	0028      	movs	r0, r5
 800445e:	4013      	ands	r3, r2
 8004460:	81a3      	strh	r3, [r4, #12]
 8004462:	0032      	movs	r2, r6
 8004464:	230e      	movs	r3, #14
 8004466:	5ee1      	ldrsh	r1, [r4, r3]
 8004468:	003b      	movs	r3, r7
 800446a:	f000 f81f 	bl	80044ac <_write_r>
 800446e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004470:	ffffefff 	.word	0xffffefff

08004474 <__sseek>:
 8004474:	b570      	push	{r4, r5, r6, lr}
 8004476:	000c      	movs	r4, r1
 8004478:	250e      	movs	r5, #14
 800447a:	5f49      	ldrsh	r1, [r1, r5]
 800447c:	f000 f860 	bl	8004540 <_lseek_r>
 8004480:	89a3      	ldrh	r3, [r4, #12]
 8004482:	1c42      	adds	r2, r0, #1
 8004484:	d103      	bne.n	800448e <__sseek+0x1a>
 8004486:	4a05      	ldr	r2, [pc, #20]	; (800449c <__sseek+0x28>)
 8004488:	4013      	ands	r3, r2
 800448a:	81a3      	strh	r3, [r4, #12]
 800448c:	bd70      	pop	{r4, r5, r6, pc}
 800448e:	2280      	movs	r2, #128	; 0x80
 8004490:	0152      	lsls	r2, r2, #5
 8004492:	4313      	orrs	r3, r2
 8004494:	81a3      	strh	r3, [r4, #12]
 8004496:	6560      	str	r0, [r4, #84]	; 0x54
 8004498:	e7f8      	b.n	800448c <__sseek+0x18>
 800449a:	46c0      	nop			; (mov r8, r8)
 800449c:	ffffefff 	.word	0xffffefff

080044a0 <__sclose>:
 80044a0:	b510      	push	{r4, lr}
 80044a2:	230e      	movs	r3, #14
 80044a4:	5ec9      	ldrsh	r1, [r1, r3]
 80044a6:	f000 f815 	bl	80044d4 <_close_r>
 80044aa:	bd10      	pop	{r4, pc}

080044ac <_write_r>:
 80044ac:	b570      	push	{r4, r5, r6, lr}
 80044ae:	0004      	movs	r4, r0
 80044b0:	0008      	movs	r0, r1
 80044b2:	0011      	movs	r1, r2
 80044b4:	001a      	movs	r2, r3
 80044b6:	2300      	movs	r3, #0
 80044b8:	4d05      	ldr	r5, [pc, #20]	; (80044d0 <_write_r+0x24>)
 80044ba:	602b      	str	r3, [r5, #0]
 80044bc:	f7fe fcbf 	bl	8002e3e <_write>
 80044c0:	1c43      	adds	r3, r0, #1
 80044c2:	d103      	bne.n	80044cc <_write_r+0x20>
 80044c4:	682b      	ldr	r3, [r5, #0]
 80044c6:	2b00      	cmp	r3, #0
 80044c8:	d000      	beq.n	80044cc <_write_r+0x20>
 80044ca:	6023      	str	r3, [r4, #0]
 80044cc:	bd70      	pop	{r4, r5, r6, pc}
 80044ce:	46c0      	nop			; (mov r8, r8)
 80044d0:	2000013c 	.word	0x2000013c

080044d4 <_close_r>:
 80044d4:	2300      	movs	r3, #0
 80044d6:	b570      	push	{r4, r5, r6, lr}
 80044d8:	4d06      	ldr	r5, [pc, #24]	; (80044f4 <_close_r+0x20>)
 80044da:	0004      	movs	r4, r0
 80044dc:	0008      	movs	r0, r1
 80044de:	602b      	str	r3, [r5, #0]
 80044e0:	f7fe fcc9 	bl	8002e76 <_close>
 80044e4:	1c43      	adds	r3, r0, #1
 80044e6:	d103      	bne.n	80044f0 <_close_r+0x1c>
 80044e8:	682b      	ldr	r3, [r5, #0]
 80044ea:	2b00      	cmp	r3, #0
 80044ec:	d000      	beq.n	80044f0 <_close_r+0x1c>
 80044ee:	6023      	str	r3, [r4, #0]
 80044f0:	bd70      	pop	{r4, r5, r6, pc}
 80044f2:	46c0      	nop			; (mov r8, r8)
 80044f4:	2000013c 	.word	0x2000013c

080044f8 <_fstat_r>:
 80044f8:	2300      	movs	r3, #0
 80044fa:	b570      	push	{r4, r5, r6, lr}
 80044fc:	4d06      	ldr	r5, [pc, #24]	; (8004518 <_fstat_r+0x20>)
 80044fe:	0004      	movs	r4, r0
 8004500:	0008      	movs	r0, r1
 8004502:	0011      	movs	r1, r2
 8004504:	602b      	str	r3, [r5, #0]
 8004506:	f7fe fcc0 	bl	8002e8a <_fstat>
 800450a:	1c43      	adds	r3, r0, #1
 800450c:	d103      	bne.n	8004516 <_fstat_r+0x1e>
 800450e:	682b      	ldr	r3, [r5, #0]
 8004510:	2b00      	cmp	r3, #0
 8004512:	d000      	beq.n	8004516 <_fstat_r+0x1e>
 8004514:	6023      	str	r3, [r4, #0]
 8004516:	bd70      	pop	{r4, r5, r6, pc}
 8004518:	2000013c 	.word	0x2000013c

0800451c <_isatty_r>:
 800451c:	2300      	movs	r3, #0
 800451e:	b570      	push	{r4, r5, r6, lr}
 8004520:	4d06      	ldr	r5, [pc, #24]	; (800453c <_isatty_r+0x20>)
 8004522:	0004      	movs	r4, r0
 8004524:	0008      	movs	r0, r1
 8004526:	602b      	str	r3, [r5, #0]
 8004528:	f7fe fcbd 	bl	8002ea6 <_isatty>
 800452c:	1c43      	adds	r3, r0, #1
 800452e:	d103      	bne.n	8004538 <_isatty_r+0x1c>
 8004530:	682b      	ldr	r3, [r5, #0]
 8004532:	2b00      	cmp	r3, #0
 8004534:	d000      	beq.n	8004538 <_isatty_r+0x1c>
 8004536:	6023      	str	r3, [r4, #0]
 8004538:	bd70      	pop	{r4, r5, r6, pc}
 800453a:	46c0      	nop			; (mov r8, r8)
 800453c:	2000013c 	.word	0x2000013c

08004540 <_lseek_r>:
 8004540:	b570      	push	{r4, r5, r6, lr}
 8004542:	0004      	movs	r4, r0
 8004544:	0008      	movs	r0, r1
 8004546:	0011      	movs	r1, r2
 8004548:	001a      	movs	r2, r3
 800454a:	2300      	movs	r3, #0
 800454c:	4d05      	ldr	r5, [pc, #20]	; (8004564 <_lseek_r+0x24>)
 800454e:	602b      	str	r3, [r5, #0]
 8004550:	f7fe fcb2 	bl	8002eb8 <_lseek>
 8004554:	1c43      	adds	r3, r0, #1
 8004556:	d103      	bne.n	8004560 <_lseek_r+0x20>
 8004558:	682b      	ldr	r3, [r5, #0]
 800455a:	2b00      	cmp	r3, #0
 800455c:	d000      	beq.n	8004560 <_lseek_r+0x20>
 800455e:	6023      	str	r3, [r4, #0]
 8004560:	bd70      	pop	{r4, r5, r6, pc}
 8004562:	46c0      	nop			; (mov r8, r8)
 8004564:	2000013c 	.word	0x2000013c

08004568 <_read_r>:
 8004568:	b570      	push	{r4, r5, r6, lr}
 800456a:	0004      	movs	r4, r0
 800456c:	0008      	movs	r0, r1
 800456e:	0011      	movs	r1, r2
 8004570:	001a      	movs	r2, r3
 8004572:	2300      	movs	r3, #0
 8004574:	4d05      	ldr	r5, [pc, #20]	; (800458c <_read_r+0x24>)
 8004576:	602b      	str	r3, [r5, #0]
 8004578:	f7fe fc44 	bl	8002e04 <_read>
 800457c:	1c43      	adds	r3, r0, #1
 800457e:	d103      	bne.n	8004588 <_read_r+0x20>
 8004580:	682b      	ldr	r3, [r5, #0]
 8004582:	2b00      	cmp	r3, #0
 8004584:	d000      	beq.n	8004588 <_read_r+0x20>
 8004586:	6023      	str	r3, [r4, #0]
 8004588:	bd70      	pop	{r4, r5, r6, pc}
 800458a:	46c0      	nop			; (mov r8, r8)
 800458c:	2000013c 	.word	0x2000013c

08004590 <_init>:
 8004590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004592:	46c0      	nop			; (mov r8, r8)
 8004594:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004596:	bc08      	pop	{r3}
 8004598:	469e      	mov	lr, r3
 800459a:	4770      	bx	lr

0800459c <_fini>:
 800459c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800459e:	46c0      	nop			; (mov r8, r8)
 80045a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80045a2:	bc08      	pop	{r3}
 80045a4:	469e      	mov	lr, r3
 80045a6:	4770      	bx	lr
